type Quiz @mapping(node: "game4nt:quiz") {
	metadata: Metadata
	key: String! @mapping(property: "game4:quizKey")
	title(language:String!): String @mapping(property: "jcr:title")
	subtitle(language:String!): String @mapping(property: "game4:subtitle")
	description(language:String!): String @mapping(property: "game4:description")
	duration: String @mapping(property: "game4:duration")
	cover: ImageAsset @mapping(property: "game4:cover")
	consent: Asset @mapping(property: "game4:consentType")
	children: [QuizChild]
}

type QuizChild @mapping(node: "game4mix:quizChild")  {
    metadata: Metadata
}

#implements is not available in jahia SDL
#type Warmup implements QuizChild @mapping(node: "game4nt:warmup")  {
type Warmup @mapping(node: "game4nt:warmup")  {
    title: String @mapping(property: "jcr:title")
}

#implements is not available in jahia SDL
#type Qna implements QuizChild @mapping(node: "game4nt:qna") {
type Qna @mapping(node: "game4nt:qna") {
	metadata: Metadata
	title(language:String!): String @mapping(property: "jcr:title")
	question(language:String!): String! @mapping(property: "game4:question")
	help(language:String!): String @mapping(property: "game4:help")
	nbExpectedAnswer: Long @mapping(property: "game4:nbExpectedAnswer")
	answers(language:String!): [String!]! @mapping(property: "game4:answers")
	randomSelection: Boolean @mapping(property: "game4:randomSelection")
	notUsedForScore: Boolean @mapping(property: "game4:notUsedForScore")
	cover: ImageAsset @mapping(property: "game4:cover")
	jExpProperty: String @mapping(property: "game4:jExpProperty")
}

#extend type Query {
#	quizByKey(key:String!): Quiz
#	quizById(id:ID!): Quiz
#}