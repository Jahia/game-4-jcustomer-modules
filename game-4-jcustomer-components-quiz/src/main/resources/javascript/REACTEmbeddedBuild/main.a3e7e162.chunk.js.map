{"version":3,"sources":["contexts/index.js","components/Quiz/QuizGraphQL.js","components/Consent/ConsentGraphQL.js","misc/tracker.js","components/Consent/Consent.jsx","components/Quiz/Quiz.jsx","components/Qna/QnaGraphQL.js","components/Qna/Answer/Answer.jsx","misc/utils.js","components/Qna/QnaModel.js","components/Qna/Qna.jsx","components/Warmup/WarmupGraphQL.js","components/VideoPlayer/VideoPlayer.jsx","components/Warmup/Warmup.jsx","components/Warmup/WarmupModel.js","components/Score/Score.jsx","components/App.js","components/Error/Ajv.jsx","misc/serviceWorker.js","douane/lib/config.js","douane/lib/schema/index.js","douane/index.js","components/Store/Store.jsx","components/Quiz/QuizModel.js","index.js"],"names":["StoreContext","React","createContext","GET_QUIZ","gql","GET_CONSENT","syncConsentStatus","typeIdentifier","scope","status","statusDate","Date","revokeDate","setFullYear","getFullYear","console","debug","uTracker","track","consent","toISOString","Consent","props","id","quizState","quizDispatch","consents","filter","state","useContext","jContent","cxs","gql_variables","consent_status","variables","Object","assign","useQuery","loading","error","data","useEffect","consentData","get","case","payload","granted","className","Form","Check","custom","type","name","identifier","label","title","onChange","e","target","checked","description","icon","onClick","DENIED","handleDenied","init","computeEnableStartBtn","showNext","workspace","length","reducer","action","consentPath","cxsConsentStatus","cxsConsentRevokeDate","GRANTED","now","parse","actived","JSON","enableStartBtn","map","Error","Quiz","dispatch","quiz","currentSlide","files_endpoint","language_bundle","useReducer","show","cover","src","encodeURI","alt","subtitle","duration","dangerouslySetInnerHTML","__html","Button","variant","forEach","disabled","btnStart","consentTitle","key","GET_QNA","Answer","qna","qnaDispatch","answers","answer","isValid","valid","notUsedForScore","inputType","getRandomString","format","mask","indexOf","result","i","Math","floor","random","qnaData","quiz_validMark","randomSelection","substring","sort","a","b","question","help","jExpField2Map","initialQNA","enableSubmit","QnaMapper","_answer","Qna","reset","reduce","test","values","propertyName","propertyValue","update","syncVisitorData","btnSubmit","GET_WARMUP","VideoPlayer","warmupID","videoURL","player","useRef","handleVideoStatus","content","parent","game4Quiz","game4Warmup","game4Video","current","getDuration","currentTime","getCurrentTime","syncVideoStatus","ref","url","controls","width","height","onStart","onPlay","onPause","onEnded","Warmup","useState","childNodes","warmup","setWarmup","warmupData","video","videoLink","videoIntPath","node","WarmupMapper","slides","parentSlide","btnQuestion","Score","score","scoreIndex","value","text","btnReset","library","add","fab","faClock","faHandPointLeft","faCheckCircle","faCheckDouble","faCheck","faTimesCircle","faTimes","faBan","Indicator","enabled","active","slide","App","slideSet","currentResult","showResult","showScore","quizData","quizKey","bundle","initLanguageBundle","sessionId","initialize","ready","window","syncTracker","cdp_endpoint","Container","Row","correctAnswer","wrongAnswer","btnNextQuestion","btnShowResults","itemId","allow_indicator_browsing","cnd_type","QNA","WARMUP","Ajv","item","errors","dataPath","message","Boolean","location","hostname","match","REVOKED","context","properties","host","default","process","enum","pattern","gql_endpoint","gql_authorization","language","required","additionalProperties","ajv","useDefaults","resultSet","max","QuizMapper","push","includes","position","splice","currentIndex","nextIndex","nextSlide","slice","goodAnswers","split","quizScore","syncQuizScore","score_splitPattern","Store","Provider","children","quizUIApp","validate","schema","toUpperCase","getGQLWorkspace","contextValidator","headers","Authorization","client","ApolloClient","uri","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a3e7e162.chunk.js","sourcesContent":["import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import {gql} from 'apollo-boost';\n\nexport const GET_QUIZ = gql`\n    query getQuiz($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            quiz: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                key: property(name:\"game4:quizKey\"){\n                    value\n                }\n                title: displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                description: property(language:$language,name:\"game4:description\"){\n                    value\n                }\n                duration: property(name:\"game4:duration\"){\n                    value\n                }\n                cover: property(name:\"game4:cover\"){\n                    node: refNode {\n                        path\n                    }\n                }\n                consents: property(name:\"game4:consentType\"){\n                    nodes: refNodes {\n                        id: uuid\n                        actived: property(language:$language,name:\"wem:activated\"){\n                            value\n                        }\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                },\n                btnStart: property(language:$language, name:\"game4:btnStart\"){\n                    value\n                },\n                btnSubmit: property(language:$language, name:\"game4:btnSubmit\"){\n                    value\n                },\n                btnQuestion: property(language:$language, name:\"game4:btnQuestion\"){\n                    value\n                },\n                btnNextQuestion: property(language:$language, name:\"game4:btnNextQuestion\"){\n                    value\n                },\n                btnShowResults: property(language:$language, name:\"game4:btnShowResults\"){\n                    value\n                },\n                btnReset: property(language:$language, name:\"game4:btnReset\"){\n                    value\n                },\n                consentTitle: property(language:$language, name:\"game4:consentTitle\"){\n                    value\n                },\n                correctAnswer: property(language:$language, name:\"game4:correctAnswer\"){\n                    value\n                },\n                wrongAnswer: property(language:$language, name:\"game4:wrongAnswer\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import {gql} from 'apollo-boost';\n\nexport const GET_CONSENT = gql`\n    query getConsent($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            consent: nodeById(uuid: $id) {\n                id: uuid\n                identifier:name\n                title:displayName(language:$language)\n                description: property(language:$language, name:\"jcr:description\"){\n                    value\n                }\n                actived: property(language:$language,name:\"wem:activated\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import uTracker from \"unomi-analytics\";\n\nconst syncTracker = ({scope,url,sessionId,dispatch}) => {\n    uTracker.initialize({\n        \"Apache Unomi\": {\n            scope,\n            url,\n            sessionId\n        }\n    });\n    uTracker.ready( () =>\n        dispatch({\n            case:\"ADD_CXS\",\n            payload:{\n                cxs:window.cxs\n            }\n        })\n    );\n};\n\nconst syncConsentStatus= ({typeIdentifier,scope,status}) => {\n    const statusDate = new Date();\n    const revokeDate = new Date(statusDate);\n    revokeDate.setFullYear(revokeDate.getFullYear() + 2);\n    console.debug(\"syncConsentStatus status :\", status);\n\n    uTracker.track(\"modifyConsent\", {\n        consent: {\n            typeIdentifier,\n            scope,\n            status,\n            statusDate: statusDate.toISOString(),//\"2018-05-22T09:27:09.473Z\",\n            revokeDate: revokeDate.toISOString()//\"2020-05-21T09:27:09.473Z\"\n        }\n    });\n};\n\nconst syncQuizScore = ({quizKey,split,quizScore}) =>\n    uTracker.track(\"setQuizScore\",{\n        score:`${quizKey}${split}${quizScore}`\n    });\n\nconst syncVideoStatus = ({content,parent,status,player}) =>\n    uTracker.track(\"video\",{\n        id:content.id,\n        type:content.type,\n        game4Quiz:{\n            id:content.id,\n            type:content.type\n        },\n        game4Warmup:{\n            id:parent\n        },\n        game4Video:{\n            duration: player.current.getDuration(),\n            currentTime: player.current.getCurrentTime(),\n            status: status\n        }\n    });\n\nconst syncVisitorData = ({propertyName,propertyValue}) =>\n    uTracker.track(\"updateVisitorData\",{\n        update : {\n            propertyName,\n            propertyValue\n        }\n    });\n\nexport {\n    syncTracker,\n    syncConsentStatus,\n    syncQuizScore,\n    syncVideoStatus,\n    syncVisitorData\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Form} from \"react-bootstrap\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_CONSENT} from \"components/Consent/ConsentGraphQL\";\nimport get from \"lodash.get\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport {StoreContext} from \"contexts\";\n\nconst Consent = (props)=> {\n    const {id, quizState, quizDispatch} = props;\n    const [consent={}] = quizState.consents.filter(consent => consent.id === id);\n\n    const { state } = React.useContext(StoreContext);\n\n    const {jContent,cxs} = state;\n    const {gql_variables,scope,consent_status} =  jContent;\n\n    const variables = Object.assign(gql_variables,{id})\n    const {loading, error, data} = useQuery(GET_CONSENT, {\n        variables:variables,\n    });\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const consentData = get(data, \"response.consent\", {});\n            quizDispatch({\n                case:\"DATA_READY_CONSENT\",\n                payload:{\n                    consentData,\n                    scope,\n                    cxs,\n                    consent_status\n                }\n            })\n        }\n\n    }, [loading,data]);\n\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.debug(\"*** paint consent : \",id);\n\n    const handleDenied = (consent) => {\n        syncConsentStatus({\n            scope,\n            typeIdentifier:consent.identifier,\n            status:consent_status.DENIED\n        });\n\n        quizDispatch({\n            case:\"DENIED_CONSENT\",\n            payload:{\n                id:consent.id\n            }\n        });\n    }\n\n    const handleChange= (e) => {\n        quizDispatch({\n            case:\"TOGGLE_CONSENT\",\n            payload:{\n                id:e.target.id\n            }\n        });\n    }\n\n    return(\n        <li>\n            {!consent.granted &&\n                <div className=\"consent-to-grant\">\n                    <Form.Check\n                        custom\n                        type=\"checkbox\"\n                        name={consent.identifier}\n                        id={consent.id}\n                        label={consent.title}\n                        onChange={handleChange}\n                        checked={consent.checked}\n                    />\n                    <i>{consent.description}</i>\n                </div>\n            }\n            {consent.granted &&\n                <p className=\"consent-granted\">\n                    <FontAwesomeIcon icon={['fas','check']}/>\n                    {consent.title}\n                    <FontAwesomeIcon className=\"consent-denied\" icon={['fas','ban']} onClick={()=> handleDenied(consent)}/>\n                    <i>{consent.description}</i>\n                </p>\n            }\n        </li>\n    )\n}\n\nConsent.propTypes={\n    id:PropTypes.string.isRequired,\n    quizState:PropTypes.object.isRequired,\n    quizDispatch:PropTypes.func.isRequired\n};\n\nexport default Consent;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nimport {StoreContext} from \"contexts\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Consent from \"components/Consent\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\n\nconst init = variables =>{\n    return {\n        ...variables,\n        consents:[]//list of consent\n    }\n}\n\nconst computeEnableStartBtn = (state) => {\n    const {showNext,workspace,consents} = state;\n\n    if(showNext && workspace !== \"LIVE\")\n        return true;\n\n    const granted = consents.filter( consent => consent.checked || consent.granted );\n    return consents.length === granted.length;\n}\n\n\nfunction reducer(state, action) {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY_CONSENT\":{\n            let {consents} = state;\n            const {consentData,scope,cxs,consent_status} = payload;\n            console.debug(\"[QUIZ] DATA_READY_CONSENT -> consentData :\",consentData);\n\n            const identifier = get(consentData, \"identifier\");\n\n            //compute granted\n            const consentPath = `consents[\"${scope}/${identifier}\"]`;\n            const cxsConsentStatus = get(cxs,`${consentPath}.status`);\n            const cxsConsentRevokeDate = get(cxs,`${consentPath}.revokeDate`);\n            const granted = consent_status.GRANTED === cxsConsentStatus\n                && Date.now() < Date.parse(cxsConsentRevokeDate)\n\n            consents = [...consents,{\n                id : get(consentData, \"id\"),\n                title : get(consentData, \"title\"),\n                description : get(consentData, \"description.value\"),\n                actived : JSON.parse(get(consentData, \"actived.value\", false)),\n                checked : false,\n                identifier,\n                granted\n            }];\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        case \"DENIED_CONSENT\":{\n            const {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] DENIED_CONSENT -> id :\",id);\n\n            return{\n                ...state,\n                consents:consents.map( consent => {\n                    if( consent.id === id)\n                        return {\n                            ...consent,\n                            granted:false\n                        };\n                    return consent\n                }),\n                enableStartBtn:false\n            }\n        }\n        case \"TOGGLE_CONSENT\": {\n            let {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] TOGGLE_CONSENT -> id :\",id);\n\n            consents = consents.map(consent => {\n                if(consent.id === id)\n                    return {\n                        ...consent,\n                        checked:!consent.checked\n                    };\n                return consent\n            });\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        default:\n            throw new Error(`[QUIZ] action case '${action.case}' is unknown `);\n    }\n}\n\n//TODO create a reducer to simplify the stuff!\nconst Quiz = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n\n    const {quiz,showNext,currentSlide,jContent,cxs} = state;\n    const {files_endpoint,consent_status,scope,gql_variables,language_bundle} = jContent;\n\n    const [quizState, quizDispatch] = React.useReducer(\n        reducer,\n        {\n            enableStartBtn: showNext && gql_variables.workspace !== \"LIVE\",\n            workspace:gql_variables.workspace,\n            showNext\n        },\n        init\n    );\n\n    console.debug(\"*** paint quiz : \",quiz.title);\n    const show = currentSlide === quiz.id;\n\n    const onClick = () => {\n        quizState.consents.forEach(consent=>{\n            //already granted nothing to do\n            if(consent.granted)\n                return;\n\n            syncConsentStatus({\n                scope,\n                typeIdentifier:consent.identifier,\n                status:consent_status.GRANTED\n            });\n        })\n\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n    };\n\n    return(\n        <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n            {quiz.cover &&\n                <img className=\"d-block w-100\"\n                     src={`${files_endpoint}${encodeURI(quiz.cover)}`}\n                     alt={quiz.title}/>\n            }\n\n            <div className=\"game4-quiz__caption\">\n                <h2 className=\"text-uppercase\">{quiz.title}\n                    <span className=\"subtitle\">{quiz.subtitle}</span>\n                </h2>\n\n                <div className={\"duration\"}>\n                    <FontAwesomeIcon icon={['far','clock']} />\n                    {quiz.duration}\n                </div>\n\n                <div className=\"lead\" dangerouslySetInnerHTML={{__html:quiz.description}}></div>\n\n                <Button variant=\"game4-quiz\"\n                        onClick={onClick}\n                        disabled={!quizState.enableStartBtn}>\n                    {language_bundle && language_bundle.btnStart}\n                </Button>\n            </div>\n            {\n                quiz.consents.length > 0 && cxs &&\n                <div className=\"game4-quiz__consent\">\n                    <h5>{language_bundle && language_bundle.consentTitle}</h5>\n                    <ul>\n                        {\n                            quiz.consents.map( consent =>{\n                                if(consent.actived)\n                                    return <Consent\n                                        key={consent.id}\n                                        id={consent.id}\n                                        quizState={quizState}\n                                        quizDispatch={quizDispatch}\n                                    />\n                                return <></>\n                            })\n                        }\n                    </ul>\n                </div>\n            }\n        </div>\n    );\n}\n\nQuiz.propTypes={}\n\nexport default Quiz;","import {gql} from 'apollo-boost';\n\n// const propsFragment = gql`\n//     fragment props on JCRNode{\n//         id:uuid\n//         key: property(language:$language, name:\"game4:quizKey\"){\n//             value\n//         }\n//         title:displayName(language:$language)\n//         subtitle: property(language:$language, name:\"game4:subtitle\"){\n//             value\n//         }\n//         description:property(language:$language,name:\"game4:description\"){\n//             value\n//         }\n//         duration:property(language:$language,name:\"game4:duration\"){\n//             value\n//         }\n//         cover: property(language:$language,name:\"game4:cover\"){\n//             node: refNode {\n//                 path\n//             }\n//         }\n//         consent: property(language:$language,name:\"game4:consentType\"){\n//             node: refNode {\n//                 uuid\n//             }\n//         }\n//         children{\n//             nodes {\n//                 id:uuid\n//                 type: primaryNodeType{\n//                     value:name\n//                 }\n//             }\n//         }\n//     }\n// `\n\nexport const GET_QNA = gql`\n    query getQna($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            qna: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                question: property(language:$language, name:\"game4:question\"){\n                    value\n                }\n                help: property(language:$language,name:\"game4:help\"){\n                    value\n                }\n                nbExpectedAnswer: property(name:\"game4:nbExpectedAnswer\"){\n                    value\n                }\n                answers: property(language:$language,name:\"game4:answers\"){\n                    values\n                }\n                randomSelection: property(name:\"game4:randomSelection\"){\n                    value\n                }\n                notUsedForScore: property(name:\"game4:notUsedForScore\"){\n                    value\n                }\n                cover: property(name:\"game4:cover\"){\n                    node: refNode {\n                        path\n                    }\n                }\n                jExpField2Map: property(name:\"game4:jExpProperty\"){\n                    value\n                }\n\n            }\n        }\n    }\n`\n// ${propsFragment}\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Form} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\nconst Answer = (props) =>{\n    const {qna, qnaDispatch,id} = props;\n    const [answer] = qna.answers.filter(answer => answer.id === id);\n\n    const isValid = answer.valid || (qna.notUsedForScore ? answer.checked : false);\n    const handleChange = () =>\n        qnaDispatch({\n            case:\"TOGGLE_ANSWER\",\n            payload:{\n                answer\n            }\n        });\n\n    return(\n        <li className={answer.checked?\"checked\":\"\"}>\n            <div className={`result ${isValid?\"valid\":\"\"}`}>\n                {isValid &&\n                    <FontAwesomeIcon icon={['fas','check']}/>\n                }\n                {!isValid &&\n                    <FontAwesomeIcon icon={['fas','times']}/>\n                }\n            </div>\n            <Form.Check\n                custom\n                type={qna.inputType}\n                name={qna.id}\n                id={answer.id}\n                label={answer.label}\n                onChange={handleChange}\n                checked={answer.checked}\n            />\n        </li>\n    );\n};\n\nAnswer.propTypes={\n    qna:PropTypes.object.isRequired,\n    qnaDispatch:PropTypes.func.isRequired,\n    id:PropTypes.string.isRequired,\n}\n\nexport default Answer;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace\n}","import get from \"lodash.get\";\nimport {getRandomString} from \"misc/utils\";\n\nexport default function(qnaData,quiz_validMark){\n    const randomSelection=JSON.parse(get(qnaData, \"randomSelection.value\", false));\n    const answers= get(qnaData, \"answers.values\", []).map(answer=>{\n        const id = getRandomString(5,\"#aA\");\n        const valid = answer.indexOf(quiz_validMark) === 0;\n        if(valid)\n            answer = answer.substring(quiz_validMark.length+1);//+1 is for space between mark and label\n\n        return {id,label:answer,checked:false,valid}\n    })\n\n    if(randomSelection)\n        answers.sort( (a,b) => a.id > b.id );\n\n    const inputType = answers.filter(answer => answer.valid).length > 1 ?\"checkbox\":\"radio\"\n\n    return {\n        id: get(qnaData, \"id\"),\n        title: get(qnaData, \"title\"),\n        question: get(qnaData, \"question.value\", \"\"),\n        help: get(qnaData, \"help.value\", \"\"),\n        notUsedForScore: JSON.parse(get(qnaData, \"notUsedForScore.value\", false)),\n        cover: get(qnaData, \"cover.node.path\", \"\"),\n        jExpField2Map: get(qnaData, \"jExpField2Map.value\", \"\"),\n        randomSelection,\n        answers,\n        inputType\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport {GET_QNA} from \"./QnaGraphQL\";\nimport Answer from \"./Answer\";\n\nimport QnaMapper from \"components/Qna/QnaModel\";\nimport {syncVisitorData} from \"misc/tracker\";\n\nconst initialQNA = {\n    enableSubmit:false,\n}\n\nconst reducer = (qna, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            const {qnaData,quiz_validMark} = payload;\n            console.debug(\"[QNA] DATA_READY -> qnaData :\",qnaData);\n\n            return {\n                ...qna,\n                ...QnaMapper(qnaData,quiz_validMark)\n            }\n        }\n        case \"TOGGLE_ANSWER\": {\n            const {answer} = payload;//answer id\n            console.debug(\"[QNA] TOGGLE_ANSWER -> answer :\",answer);\n            let {answers} = qna;\n            if(qna.inputType === \"radio\")\n                answers = answers.map( answer =>{ return {...answer,checked:false} });\n\n            answers = answers.map(_answer => {\n                if(_answer.id === answer.id)\n                    return {\n                        ..._answer,\n                        checked:!_answer.checked\n                    };\n                return _answer\n            });\n            const enableSubmit = answers.filter(answer => answer.checked).length > 0\n\n            return{\n                ...qna,\n                answers,\n                enableSubmit\n            }\n        }\n        case \"RESET\":{\n            const {qnaData,quiz_validMark} = payload;\n            console.debug(\"[QNA] RESET -> qnaData :\",qnaData);\n            return{\n                ...initialQNA,\n                ...QnaMapper(qnaData,quiz_validMark)\n            }\n        }\n        default:\n            throw new Error(`[QNA] action case '${action.case}' is unknown `);\n    };\n}\n\nconst Qna = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n    const { currentSlide,jContent,reset } = state;\n    const { gql_variables,files_endpoint,quiz_validMark,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    const {loading, error, data} = useQuery(GET_QNA, {\n        variables:variables,\n    });\n\n    const [qna, qnaDispatch] = React.useReducer(\n        reducer,\n        initialQNA\n    );\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    qnaData,\n                    quiz_validMark\n                }\n            });\n        }\n    }, [loading,data]);\n\n    React.useEffect(() => {\n        if(reset && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"RESET\",\n                payload:{\n                    qnaData,\n                    quiz_validMark\n                }\n            });\n        }\n    }, [reset,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint qna : \",qna.title);\n\n    const show = currentSlide === props.id;\n\n    const handleSubmit = () => {\n\n        dispatch({\n            case:\"SHOW_RESULT\",\n            payload:{\n                result:qna.notUsedForScore ?\n                        true :\n                        qna.answers\n                        .filter(answer => answer.valid)\n                        .reduce( (test,answer) => test && answer.checked,true)\n            }\n        });\n\n        // console.log(\"[handleSubmit] qna.jExpField2Map => \",qna.jExpField2Map);\n        if(qna.jExpField2Map){\n            //Get response label\n            //TODO manage case multiple later\n            const values =\n                qna.answers\n                .filter(answer => answer.checked)\n                .reduce(\n                    (label,answer) =>\n                        (answer.label && answer.label.length > 0) ?\n                            answer.label :\n                            null\n                    ,null\n                );\n            // console.debug(\"[handleSubmit] update : \",qna.jExpField2Map,\" with values : \",values);\n\n            //if tracker is not initialized the track event is not send\n            syncVisitorData({\n                propertyName:`properties.${qna.jExpField2Map}`,\n                propertyValue:values\n            })\n        }\n    }\n\n    return(\n        <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n            {qna.cover &&\n                <img className=\"d-block w-100\"\n                     src={`${files_endpoint}${encodeURI(qna.cover)}`}\n                     alt={qna.title}/>\n            }\n\n            <div className=\"game4-quiz__caption d-none d-md-block\">\n                <fieldset>\n                    <legend>{qna.question}\n                        <i>{qna.help}</i>\n                    </legend>\n                    {qna.answers &&\n                        <ol className=\"game4-quiz__answer-list\">\n                            {qna.answers.map( answer =>\n                                <Answer\n                                    key={answer.id}\n                                    id={answer.id}\n                                    qna={qna}\n                                    qnaDispatch={qnaDispatch}\n                                />)\n                            }\n                        </ol>\n                    }\n                </fieldset>\n\n                <Button variant=\"game4-quiz\"\n                        onClick={handleSubmit}\n                        disabled={!qna.enableSubmit}>\n                    {language_bundle && language_bundle.btnSubmit}\n                </Button>\n\n            </div>\n        </div>\n    );\n}\n\nQna.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Qna;","import {gql} from 'apollo-boost';\n\nexport const GET_WARMUP = gql`\n    query getWarmup($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            warmup: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                content: property(language:$language,name:\"game4:content\"){\n                    value\n                }\n                duration: property(name:\"game4:qnaDuration\"){\n                    value\n                }\n                videoLink: property(name:\"game4:videoLink\"){\n                    value\n                }\n                videoExtPath: property(language:$language,name:\"game4:videoExtPath\"){\n                    value\n                }\n                videoIntPath: property(language:$language,name:\"game4:videoIntPath\"){\n                    node: refNode {\n                        path\n                    }\n                }\n                cover: property(name:\"game4:masterQnaCover\"){\n                    node: refNode {\n                        path\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n    \n            }\n        }\n    }\n`","import React, {useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\n\nimport ReactPlayer from \"react-player\";\nimport {syncVideoStatus} from \"misc/tracker\";\n\nconst VideoPlayer = (props)=>{\n    const {warmupID,videoURL} = props;\n    const { state } = React.useContext(StoreContext);\n    const {quiz} = state;\n\n    const player = useRef(null);\n\n    const handleVideoStatus = ({status}) => {\n        syncVideoStatus({\n            content:{\n                id:quiz.id,\n                type:quiz.type\n            },\n            parent:warmupID,\n            player,\n            status\n        })\n    }\n\n    // const onReadyHandler = () => {\n    //     console.log(\"onReady seekTo 4.2s\")\n    //     player.current.seekTo(4.2,\"seconds\");\n    // }\n    const onStartHandler = () => {\n        // player.current.seekTo(4.2,\"seconds\");\n    }\n    const onPlayHandler = () => handleVideoStatus({status:\"started\"});\n    const onEndedHandler = () => handleVideoStatus({status:\"end\"});\n    const onPauseHandler = () => handleVideoStatus({status:\"pause\"});\n\n    return (\n        <div className='player-wrapper'>\n            <ReactPlayer\n                ref={player}\n                className='react-player'\n                url={videoURL}\n                controls\n                width='100%'\n                height='100%'\n                // onReady={onReadyHandler}\n                onStart={onStartHandler}\n                // onProgress={(object)=> console.log(\"onProgress : \",object)}\n                onPlay={onPlayHandler}\n                // onSeek={(seconds)=> console.log(\"onSeek : \",seconds)}\n                // onDuration={(seconds)=> console.log(\"onDuration :\",seconds)}\n                onPause={onPauseHandler}\n                onEnded={onEndedHandler}\n            />\n        </div>\n    )\n}\n\nVideoPlayer.propTypes={\n    videoURL:PropTypes.string.isRequired,\n    warmupID:PropTypes.string.isRequired\n}\n\nexport default VideoPlayer;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nimport get from \"lodash.get\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport {StoreContext} from \"contexts\";\nimport {GET_WARMUP} from \"./WarmupGraphQL\";\nimport VideoPlayer from \"components/VideoPlayer\";\nimport Qna from \"components/Qna\";\nimport WarmupMapper from \"components/Warmup/WarmupModel\";\n\nconst Warmup = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n    const { currentSlide,jContent} = state;\n    const { gql_variables,files_endpoint,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    // const query = loader(\"./Warmup.graphql.disabled\");\n    const {loading, error, data} = useQuery(GET_WARMUP, {\n        variables:variables,\n    });\n\n    const [warmup, setWarmup] = React.useState({childNodes:[]});\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const warmup = WarmupMapper(get(data, \"response.warmup\", {}),files_endpoint)\n            dispatch({\n                case:\"ADD_SLIDES\",\n                payload:{\n                    slides:warmup.childNodes.map(node=>node.id),\n                    parentSlide:warmup.id\n                }\n            });\n            // console.debug(\"warmup.id : \",warmup.id,\"; warmup.video : \",warmup.video);\n            setWarmup(warmup);\n        }\n    },[loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint warmup : \",warmup.title);\n\n    const show = currentSlide === props.id;\n    const handleCLick = () =>\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n\n    return(\n        <>\n            <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n                {warmup.cover &&\n                    <img className=\"d-block w-100\"\n                         src={`${files_endpoint}${encodeURI(warmup.cover)}`}\n                         alt={warmup.title}/>\n                }\n\n                <div className=\"game4-quiz__caption d-none d-md-block\">\n                    <h2 className=\"text-uppercase\">{warmup.title}<span className=\"subtitle\">{warmup.subtitle}</span></h2>\n                    <div className=\"lead\" dangerouslySetInnerHTML={{__html:warmup.content}}></div>\n                    { warmup.video != null &&\n                        <div>\n                            <VideoPlayer\n                                videoURL={warmup.video}\n                                warmupID={warmup.id}\n                            />\n                        </div>\n                    }\n                    <Button variant=\"game4-quiz\"\n                            onClick={ handleCLick }>\n                        {/*disabled={!props.showNext}*/}\n                        {language_bundle && language_bundle.btnQuestion}\n                    </Button>\n                </div>\n            </div>\n            {warmup.childNodes.map( node =>\n                <Qna\n                    key={node.id}\n                    id={node.id}\n                />\n            )}\n        </>\n    );\n}\n\nWarmup.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Warmup;","import get from \"lodash.get\";\n\nexport default function(warmupData,files_endpoint) {\n    let video = null;\n    const videoLink = get(warmupData, \"videoLink.value\", \"\");\n    const videoIntPath = get(warmupData, \"videoIntPath.node.path\");\n\n    if(videoLink)\n        video= videoIntPath ?\n            `${files_endpoint}${encodeURI(videoIntPath)}`:\n            get(warmupData, \"videoExtPath.value\")\n\n\n    return{\n        id: get(warmupData, \"id\", \"\"),\n        title: get(warmupData, \"title\", \"\"),\n        subtitle: get(warmupData, \"subtitle.value\", \"\"),\n        content: get(warmupData, \"content.value\", \"\"),\n        duration: get(warmupData, \"duration.value\", \"\"),\n        cover: get(warmupData, \"cover.node.path\", \"\"),\n        childNodes: get(warmupData,\"children.nodes\",[])\n                    .map(node => {\n                        return{\n                            id: get(node, \"id\"),\n                            type: get(node, \"type.value\")\n                        }\n                    }),\n        video\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport {StoreContext} from \"contexts\";\nimport {Button} from \"react-bootstrap\";\n\nconst Score = (props) => {\n    const { state,dispatch } = React.useContext(StoreContext);\n    const { quiz,currentSlide,score,scoreIndex,jContent } = state;\n    const { files_endpoint,language_bundle } =  jContent;\n\n    const show = currentSlide === scoreIndex;\n\n    const onClick = () => {\n        dispatch({\n            case:\"RESET\"\n        });\n    }\n\n    // console.log(\"Score props.show :\",props.show);\n    return(\n        <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n            {quiz.cover &&\n                <img className=\"d-block w-100\"\n                     src={`${files_endpoint}${encodeURI(quiz.cover)}`}\n                     alt={quiz.title}/>\n            }\n            <div className=\"game4-quiz__caption d-none d-md-block\">\n                <h2 className=\"text-uppercase\">{quiz.title}<span className=\"subtitle\">{quiz.subtitle}</span></h2>\n                <div className=\"game4-quiz__score-result col-6 offset-3 col-md-4 offset-md-4 mb-5\">\n                    <CircularProgressbar value={score} text={`${score}%`}/>\n                </div>\n\n                <Button variant=\"game4-quiz\"\n                        onClick={onClick}>\n                    {language_bundle && language_bundle.btnReset}\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nScore.propTypes={}\n\nexport default Score;","import React from 'react'; //useEffect,useContext\nimport PropTypes from \"prop-types\";\n\nimport {Button, Container, Row} from 'react-bootstrap';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faHandPointLeft,faCheckDouble,faCheck,faTimesCircle,faTimes,faBan } from '@fortawesome/free-solid-svg-icons';\nimport { faClock,faCheckCircle} from '@fortawesome/free-regular-svg-icons';\n\n//todo voir si je peux le desactiver dynamiquement\n//todo comment bootstrap to build to jahia view\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'components/App.scss';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport {GET_QUIZ} from \"components/Quiz/QuizGraphQL.js\";\nimport Quiz from \"components/Quiz\"\nimport Qna from \"components/Qna\";\nimport Warmup from \"components/Warmup\";\nimport Score from \"components/Score\";\nimport {syncTracker} from \"misc/tracker\";\n\n\nlibrary.add(\n    fab,\n    faClock,\n    faHandPointLeft,\n    faCheckCircle,\n    faCheckDouble,\n    faCheck,\n    faTimesCircle,\n    faTimes,\n    faBan\n);\n\nconst Indicator = (props) =>{\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {currentSlide} = state;\n    const {id,enabled} = props;\n\n    const active = currentSlide === id;\n    const handleCLick = () =>{\n        if(enabled)\n            dispatch({\n                case:\"SHOW_SLIDE\",\n                payload:{\n                    slide:id\n                }\n            });\n    };\n\n    return(\n        <li className={`${active ? 'active':''} ${enabled ? 'clickable':''}`}\n            onClick={handleCLick}>\n        </li>\n    )\n}\n\nIndicator.propTypes={\n    id:PropTypes.string.isRequired,\n    enabled:PropTypes.bool.isRequired\n}\n\nconst initLanguageBundle = quizData => {\n    const keys = [\n        \"btnStart\",\n        \"btnSubmit\",\n        \"btnQuestion\",\n        \"btnNextQuestion\",\n        \"btnShowResults\",\n        \"btnReset\",\n        \"consentTitle\",\n        \"correctAnswer\",\n        \"wrongAnswer\"\n    ];\n    return keys.reduce((bundle,key)=>{\n        bundle[key] = get(quizData,`${key}.value`);\n        // console.debug(\"bundle: \",bundle);\n        return bundle;\n    },{});\n}\n\n//NOPE ! TODO jCustomer/context.json -> context. jContext.value = {context,jCustomer}\nconst App = (props)=> {\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        quiz,\n        slideSet,\n        currentResult,\n        showResult,\n        showNext,\n        showScore\n    } = state;\n\n    const {loading, error, data} = useQuery(GET_QUIZ, {\n        variables:jContent.gql_variables,\n    });\n\n    React.useEffect(() => {\n        console.debug(\"App Quiz init !\");\n        if(loading === false && data){\n            console.debug(\"App Quiz init Set Data!\");\n\n            const quizData = get(data, \"response.quiz\", {});\n            const quizKey = get(quizData, \"key.value\");\n\n            jContent.language_bundle = initLanguageBundle(quizData);\n            console.debug(\"jContent.language_bundle: \",jContent.language_bundle);\n\n            dispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    quizData\n                }\n            });\n\n            //init unomi tracker\n            if(jContent.gql_variables.workspace === \"LIVE\")\n                syncTracker({\n                    scope: jContent.scope,\n                    url: jContent.cdp_endpoint,\n                    sessionId:`qZ-${quizKey}-${Date.now()}`,\n                    dispatch\n                });\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    const handleNextSlide = () =>\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n\n    const handleShowScore = () =>\n        dispatch({\n            case:\"SHOW_SCORE\"\n        });\n\n    return (\n        <Container>\n            <Row>\n                <div className={`game4-quiz slide ${showResult?\"show-result\":\"\"}`}>\n                    {jContent.language_bundle &&\n                        <div className=\"game4-quiz__header\">\n\n                                <span className=\"game4-quiz__header-result\">\n                                    {currentResult &&\n                                        jContent.language_bundle.correctAnswer}\n                                    {!currentResult &&\n                                        jContent.language_bundle.wrongAnswer}\n                                </span>\n                                {!showScore &&\n                                    <Button variant=\"game4-quiz-header\"\n                                        onClick={handleNextSlide}\n                                        disabled={!showNext}>\n                                        {jContent.language_bundle.btnNextQuestion}\n                                    </Button>\n                                }\n                                {showScore &&\n                                    <Button variant=\"game4-quiz-header\"\n                                        onClick={handleShowScore}\n                                        disabled={!showNext}>\n                                        {jContent.language_bundle.btnShowResults}\n                                    </Button>\n                                }\n\n                        </div>\n                    }\n                    <ol className=\"game4-quiz__indicators\">\n                        {slideSet.map( itemId =>\n                            <Indicator\n                                key={itemId}\n                                id={itemId}\n                                enabled={jContent.allow_indicator_browsing}\n                            />\n                        )}\n                    </ol>\n\n                    <div className=\"game4-quiz__inner\">\n                        <Quiz\n                            key={quiz.id}\n                        />\n                        {quiz.childNodes.map( (node,i) => {\n                            if(node.type === jContent.cnd_type.QNA)\n                                return <Qna\n                                        key={node.id}\n                                        id={node.id}\n                                    />\n\n                            if(node.type === jContent.cnd_type.WARMUP)\n                                return <Warmup\n                                    key={node.id}\n                                    id={node.id}\n                                />\n                            return <p className=\"text-danger\">node type {node.type} is not supported</p>\n                            })\n                        }\n                        <Score/>\n                    </div>\n                </div>\n            </Row>\n        </Container>\n    );\n};\n\nApp.propTypes={}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( (error,i) =>\n                    <li>\n                        {error.dataPath} : {error.message}\n                    </li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const validMark=\"[*]\";\nconst score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\nconst cnd_type = {\n    QNA:\"game4nt:qna\",\n    WARMUP:\"game4nt:warmup\"\n}\nconst consent_status={\n    GRANTED:\"GRANTED\",\n    DENIED:\"DENIED\",\n    REVOKED:\"REVOKED\"\n};\n\nexport {\n    workspace,\n    cnd_type,\n    validMark,\n    consent_status,\n    score_splitPattern\n}","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nexport default{\n    context:{\n        title:\"context validation schema \",\n        description:\"context is an object provided by the page in charge to load the app\",\n        // definitions: {\n        //     jContent:jContent,\n        //     jCustomer:jCustomer,\n        //     gql:gql\n        // },\n        type:\"object\",\n        // properties:{\n        //     jContent:{$ref:\"#jContent\"},\n        //     gql:{$ref:\"#gql\"},\n        //     jCustomer:{$ref:\"#jCustomer\"}\n        // },\n        properties:{\n            host:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n            },\n            allow_indicator_browsing:{\n                type:\"boolean\",\n                default:false\n            },\n            workspace:{\n                type:\"string\",\n                enum:workspace,\n                default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n            },\n            scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n            files_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n            },\n            gql_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n            },\n            gql_authorization:{\n                type:\"string\",\n                // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n            },\n            gql_variables:{\n                type:\"object\",\n                properties:{\n                    id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n                    language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n                },\n                required: [\"id\", \"language\"]\n            },\n            cdp_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n            }//,\n            // language_bundle:{\n            //     type:\"object\",\n            //     properties:{\n            //         btnStart:{type:\"string\"},//\"Démarrer\",\n            //         btnSubmit:{type:\"string\"},//\"Soumettre\",\n            //         btnQuestion:{type:\"string\"},//\"Question\",\n            //         btnNextQuestion:{type:\"string\"},//\"Question suivante\",\n            //         btnShowResults:{type:\"string\"},//\"Mon score\",\n            //         consentTitle:{type:\"string\"},//\"Consentement\",\n            //         correctAnswer:{type:\"string\"},//\"Correcte\",\n            //         wrongAnswer:{type:\"string\"}//\"Incorrecte\"\n            //     },\n            //     required: [\n            //         \"btnStart\",\n            //         \"btnSubmit\",\n            //         \"btnQuestion\",\n            //         \"btnNextQuestion\",\n            //         \"btnShowResults\",\n            //         \"consentTitle\",\n            //         \"correctAnswer\",\n            //         \"wrongAnswer\"\n            //     ],\n            //     additionalProperties:false\n            // }\n        },\n        required: [\n            \"host\",\n            \"allow_indicator_browsing\",\n            \"workspace\",\n            \"scope\",\n            \"files_endpoint\",\n            \"gql_endpoint\",\n            // \"gql_authorization\",\n            \"gql_variables\",\n            \"cdp_endpoint\",\n            // \"language_bundle\"\n        ],\n        additionalProperties:false\n    }\n}","import * as Ajv from \"ajv\";\nimport schema from  \"./lib/schema\"\nimport {getGQLWorkspace} from \"misc/utils\"\nimport {cnd_type,validMark,consent_status,score_splitPattern} from \"douane/lib/config\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(schema.context, context);\n    if (!valid)\n        // throw new Error(`An error occurred during the validation of context object, errors : ${JSON.stringify(ajv.errors)}`);\n        throw {item:\"Context configuration object\",errors:ajv.errors};\n\n    context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    context.cnd_type=cnd_type;\n    context.consent_status=consent_status;\n    context.quiz_validMark=validMark;\n    context.score_splitPattern=score_splitPattern;\n    return context;\n}\n\nexport {\n    contextValidator\n}","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nimport {getRandomString} from \"misc/utils\";\nimport {syncQuizScore} from \"misc/tracker\";\nimport QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = jContent => {\n    return {\n        jContent,\n        quiz:{consents:[],childNodes:[]},\n        resultSet:[],//array of boolean, order is the same a slideSet\n        currentResult:false,//previously result\n        slideSet:[],//previously slideIndex\n        currentSlide:null,//previously index\n        showResult:false,\n        showNext:false,\n        showScore:false,\n        max:-1,\n        score:0,\n        cxs:null,\n        reset:false,\n        scoreIndex:getRandomString(5,\"#aA\")\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    const showNext = ({slideSet,max,slide}) =>\n        slideSet.indexOf(slide) < max;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            //prepare slideIds\n            const {quizData} = payload;\n            console.debug(\"[STORE] DATA_READY - quizData: \",quizData);\n            const quiz = QuizMapper(quizData);\n\n            const slideSet = [quiz.id];\n            quiz.childNodes.forEach(node => slideSet.push(node.id));\n            slideSet.push(state.scoreIndex);\n\n            const max = slideSet.length -1;\n\n            return {\n                ...state,\n                quiz,\n                currentSlide:quiz.id,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:quiz.id}),\n                max\n            };\n        }\n        case \"ADD_CXS\": {\n            const cxs = payload.cxs;\n            console.debug(\"[STORE] ADD_CXS - cxs: \",cxs);\n            return {\n                ...state,\n                cxs\n            };\n        }\n        case \"ADD_SLIDES\": {\n            const slides = payload.slides;\n            const parentSlide = payload.parentSlide;\n            let slideSet = state.slideSet;\n\n            if (parentSlide && slideSet.includes(parentSlide)) {\n                const position = slideSet.indexOf(parentSlide) + 1;\n                slideSet.splice(position, 0, ...slides);\n            } else {\n                slideSet = [...slideSet, ...slides];\n            }\n\n            const max = slideSet.length -1;\n\n            console.debug(\"[STORE] ADD_SLIDE - slides: \",slides,\" parentSlide: \",parentSlide);\n            return {\n                ...state,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:state.currentSlide}),\n                max\n            };\n        }\n        case \"NEXT_SLIDE\":{\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            console.debug(\"[STORE] NEXT_SLIDE - currentIndex: \",currentIndex,\", max : \",state.max);\n\n            let nextSlide = state.currentSlide;\n\n            if(currentIndex  < state.max )\n                nextSlide = state.slideSet[nextIndex];\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showResult:false,\n                reset:false\n            };\n        }\n        case \"SHOW_SLIDE\": {\n            const slide = payload.slide\n            console.debug(\"[STORE] SHOW_SLIDE - slide: \",slide);\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide})\n            };\n        }\n        case \"SHOW_RESULT\": {\n            const currentResult = payload.result;\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const showScore = currentIndex === state.max-1;\n            console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n\n            return {\n                ...state,\n                showScore,\n                resultSet: [...state.resultSet, currentResult],\n                currentResult,\n                showResult: true\n            };\n        }\n        case \"SHOW_SCORE\": {\n            console.debug(\"[STORE] SHOW_SCORE\");\n            const [slide] = state.slideSet.slice(-1);\n\n            const goodAnswers = state.resultSet.filter(result => result).length;\n            const answers = state.resultSet.length;\n            const score = Math.floor((goodAnswers/answers)*100);\n\n            syncQuizScore({\n                quizKey:state.quiz.key,\n                split:state.jContent.score_splitPattern,\n                quizScore:score\n            });\n\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide}),\n                showResult:false,\n                score\n            };\n        }\n        case \"RESET\": {\n            console.debug(\"[STORE] RESET\");\n\n            const [currentSlide] = state.slideSet.slice(0,1);\n            console.debug(\"[STORE] RESET slideSet\",state.slideSet);\n\n            return {\n                ...state,\n                currentSlide,\n                resultSet:[],\n                currentResult:false,\n                reset:true\n            }\n        }\n        default:\n            throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.jContent,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import get from \"lodash.get\";\n\nexport default function(quizData) {\n    return{\n        //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n        id: get(quizData, \"id\"),\n        type: get(quizData, \"type.value\"),\n        key : get(quizData, \"key.value\", {}),\n        title: get(quizData, \"title\", \"\"),\n        subtitle: get(quizData, \"subtitle.value\", \"\"),\n        description: get(quizData, \"description.value\", \"\"),\n        duration: get(quizData, \"duration.value\", \"\"),\n        cover: get(quizData, \"cover.node.path\", \"\"),\n        consents: get(quizData, \"consents.nodes\", []).map(node =>{\n            return {\n                id:get(node,\"id\"),\n                actived:JSON.parse(get(node,\"actived.value\"))\n            }\n        }),\n        childNodes : get(quizData,\"children.nodes\",[]).map(node =>{\n            return {\n                id: get(node, \"id\"),\n                type: get(node, \"type.value\")\n            };\n        }),\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport AjvError from \"components/Error/Ajv\";\n\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport {contextValidator} from \"douane\";\n\nimport {Store} from \"components/Store\";\n\nimport 'index.css';\n\nconst render=(target,context)=>{\n  try{\n    // console.log(\"context : \",JSON.stringify(context));\n    context = contextValidator(context);\n    const headers={};\n    if(context.gql_authorization)\n      headers.Authorization=context.gql_authorization;\n\n    const client = new ApolloClient({\n      uri:context.gql_endpoint,\n      headers\n    })\n\n    // console.log(\"lesson : \",src.data.jcr.lesson);\n    ReactDOM.render(\n      <Store jContent={context}>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </Store>,\n      document.getElementById(target)\n    );\n\n  }catch(e){\n    console.error(\"error : \",e);\n    //TODO create a generic error handler\n    ReactDOM.render(\n      <AjvError\n        item={e.item}\n        errors={e.errors}\n      />,\n      document.getElementById(target)\n    );\n  }\n}\n\nwindow.quizUIApp = render;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}