{"version":3,"sources":["contexts/index.js","components/Quiz/QuizGraphQL.js","components/Consent/ConsentGraphQL.js","misc/wemAPI.js","components/Consent/Consent.jsx","components/Media/components/Image.jsx","components/VideoPlayer/VideoPlayer.jsx","components/Media/components/Video.jsx","components/Media/components/widen/WidenMediaGraphQL.js","components/Media/components/widen/WidenMediaModel.js","components/Media/components/widen/WidenImage.jsx","components/Media/components/widen/WidenVideo.jsx","components/Media/Media.jsx","components/cssSharedClasses.jsx","components/Header/Indicator/Indicator.jsx","misc/utils.js","components/Header/Header.jsx","components/Marketo/LoadScript.jsx","components/Quiz/Quiz.jsx","components/Qna/QnaGraphQL.js","components/Qna/Answer/Answer.jsx","components/Qna/QnaModel.js","components/Qna/Qna.jsx","components/Warmup/WarmupGraphQL.js","components/Warmup/WarmupModel.js","components/Warmup/Warmup.jsx","components/Score/personalized/PersonalizedGraphQL.js","components/Score/personalized/Personalized.jsx","components/Score/percentage/Percentage.jsx","components/Score/Score.jsx","components/theme.js","components/Transition/Transition.jsx","components/App.jsx","components/Error/Ajv.jsx","misc/serviceWorker.js","douane/lib/config.js","douane/lib/schema/context.js","exceptions/ContextException.js","douane/index.js","components/Quiz/QuizModel.js","store/Store.jsx","index.js"],"names":["StoreContext","React","createContext","GET_QUIZ","gql","GET_CONSENT","syncConsentStatus","wem","consents","statusDate","Date","revokeDate","setFullYear","getFullYear","console","debug","consentsEvents","map","consent","consentEvent","buildEvent","buildTarget","typeIdentifier","buildSourcePage","properties","scope","status","toISOString","collectEvents","xhr","error","useStyles","makeStyles","theme","granted","display","flexWrap","alignItems","margin","marginRight","flexBasis","fontSize","denied","cursor","color","palette","main","width","marginLeft","Consent","props","classes","id","quizState","quizDispatch","filter","state","useContext","jContent","gql_variables","consent_status","variables","Object","assign","useQuery","loading","data","useEffect","consentData","get","case","payload","FormGroup","aria-label","row","FormControlLabel","value","checked","control","Checkbox","label","title","labelPlacement","onChange","e","target","Typography","className","style","component","description","onClick","identifier","DENIED","handleDenied","Image","path","alt","files_endpoint","src","encodeURI","playerWrapper","VideoPlayer","ownerID","videoURL","quiz","player","useRef","handleVideoStatus","content","parent","videoEvent","type","game4Quiz","game4Warmup","game4Video","duration","current","getDuration","currentTime","getCurrentTime","syncVideoStatus","ref","url","controls","height","onStart","onPlay","onPause","onEnded","Video","GET_WIDEN_MEDIA","MediaMapper","mediaData","imageURL","WidenImage","uuid","useState","media","setMedia","replace","WidenVideo","Media","mixins","sourceID","cnd_type","WIDEN_IMAGE","WIDEN_VIDEO","EXT_VIDEO","JNT_FILE","includes","IMAGE","textUppercase","textTransform","subtitle","backgroundColor","primary","spacing","marginTop","item","minHeight","geometry","backfaceVisibility","objectFit","position","zIndex","flexDirection","wait","showOverlay","top","right","bottom","left","background","overlay","start","startMiddle","endMiddle","end","caption","maxWidth","breakpoints","values","lg","flexGrow","paddingRight","padding","paddingLeft","paddingBottom","between","xs","captionMain","text","borderColor","dark","textShadow","boxShadow","typography","body1","fontWeight","lineHeight","marginBottom","border","borderRadius","secondary","minWidth","fontFamily","indicator","boxSizing","flex","spacer","textIndent","common","white","backgroundClip","borderTop","hitAreaHeight","borderBottom","opacity","transition","transitions","create","long","easing","ease","grey","Indicator","dispatch","currentSlide","enabled","active","classnames","slide","getRandomString","length","format","mask","indexOf","result","i","Math","floor","random","manageTransition","transitionIsEnabled","transitionTimeout","setTimeout","header","justifyContent","headerIndicators","listStyle","headerResult","overflow","standard","headerText","fontWeightBold","Header","slideSet","currentResult","showNext","showScore","browsingIsEnabled","handleNextSlide","handleShowScore","itemId","language_bundle","variant","correctAnswer","wrongAnswer","Button","disabled","btnShowResults","btnNextQuestion","useMarketo","baseUrl","munchkinId","formId","callback","whenReadyCallback","handleSuccess","scriptLoaded","setScriptLoaded","window","MktoForms2","loadForm","whenReady","script","document","createElement","onload","body","appendChild","appendScript","consentTitle","textDecoration","wemError","init","computeEnableStartBtn","workspace","reducer","action","consentPath","cxsConsentStatus","cxsConsentRevokeDate","GRANTED","now","parse","actived","JSON","enableStartBtn","Error","MktoForm","Quiz","sharedClasses","cssSharedClasses","mktgForm","useReducer","show","handleMktoFormSuccess","targetPageUrl","handleMktoForm","form","addHiddenFields","location","href","profileId","onSuccess","mixin","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","ADD_ATTR","_wem","constructor","keys","MARKETO","mktoConfig","btnStart","getStartComponent","getConsent","GET_QNA","answerGroup","checkedAnswer","checkGroup","easeOut","borderStyle","borderWidth","verticalAlign","labelGroup","Answer","qna","qnaDispatch","answers","answer","isValid","isAnswer","notUsedForScore","inputType","Radio","QnAMapper","qnaData","randomSelection","controlledAnswer","sort","a","b","question","help","jExpField2Map","questionGroup","textAlign","formGroup","initialQNA","enableSubmit","QnaMapper","_answer","Qna","reset","getAnswers","syncData","propertyName","propertyValue","Promise","resolve","syncQuizVisitorData","update","syncVisitorData","waitSync","reduce","index","cdpValue","skipScore","test","btnSubmit","GET_WARMUP","WarmupMapper","warmupData","video","videoLink","videoIntPath","childNodes","node","contentGroup","Warmup","warmup","setWarmup","slides","parentSlide","btnQuestion","GET_PERSONALIZED_RESULT","Personalized","cxs","setResult","sessionId","fetchPolicy","persoData","fill","stroke","Percentage","score","Score","timer","setTimer","scoreIndex","resetBtnIsEnabled","personalizedResult","btnReset","getResetBtn","getTheme","userTheme","targetTheme","light","shadows","allVariants","join","h3","h4","overrides","MuiCheckbox","root","MuiRadio","MuiButton","contained","MuiTypography","disableRipple","createMuiTheme","_merge","childTiles","transitionRow","nb","obj","transitionDelay","Transition","transitionActive","transitionLabel","loader","icon","transform","transformOrigin","tile","App","showResult","quizData","bundle","key","initLanguageBundle","ThemeProvider","Grid","container","QNA","WARMUP","displayScore","Ajv","errors","additionalProperty","message","keyword","Boolean","hostname","match","REVOKED","context","host","default","process","enum","pattern","gql_endpoint","gql_authorization","language","required","cdp_endpoint","additionalProperties","ContextException","name","captureStackTrace","ajv","useDefaults","getMktoConfig","config","QuizMapper","resetIsEnabled","resultSet","max","Array","getScore","quizKey","goodAnswers","quizScore","syncScoreEvent","syncQuizScore","forEach","push","splice","currentIndex","nextIndex","nextSlide","slice","Store","Provider","children","quizUIApp","validate","contextSchema","toUpperCase","getGQLWorkspace","quiz_validMark","score_splitPattern","contextValidator","headers","Authorization","client","ApolloClient","uri","generateClassName","createGenerateClassName","seed","ReactDOM","render","StylesProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.111810b2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:cover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_QUIZ = gql`\n    query getQuiz($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            quiz: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                key: property(name:\"game4:quizKey\"){\n                    value\n                }\n                title: displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                description: property(language:$language,name:\"game4:description\"){\n                    value\n                }\n                duration: property(name:\"game4:duration\"){\n                    value\n                }\n                userTheme: property(name:\"game4:webappTheme\"){\n                    value\n                }\n                transition: property(name:\"game4:transition\"){\n                    value\n                }\n                transitionLabel: property(name:\"game4:transitionLabel\"){\n                    value\n                }\n                reset: property(name:\"game4:reset\"){\n                    value\n                }\n                browsing: property(name:\"game4:browsing\"){\n                    value\n                }\n                mktgForm: property(name:\"game4:marketingFormChoice\"){\n                    value\n                }\n                mktoConfig: property(language:$language,name:\"game4:mktoConfig\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                consents: property(name:\"game4:consentType\"){\n                    nodes: refNodes {\n                        id: uuid\n                        actived: property(language:$language,name:\"wem:activated\"){\n                            value\n                        }\n                    }\n                }\n                personalizedResult: property(name:\"game4:personalizedResultContent\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                },\n                btnStart: property(language:$language, name:\"game4:btnStart\"){\n                    value\n                },\n                btnSubmit: property(language:$language, name:\"game4:btnSubmit\"){\n                    value\n                },\n                btnQuestion: property(language:$language, name:\"game4:btnQuestion\"){\n                    value\n                },\n                btnNextQuestion: property(language:$language, name:\"game4:btnNextQuestion\"){\n                    value\n                },\n                btnShowResults: property(language:$language, name:\"game4:btnShowResults\"){\n                    value\n                },\n                btnReset: property(language:$language, name:\"game4:btnReset\"){\n                    value\n                },\n                consentTitle: property(language:$language, name:\"game4:consentTitle\"){\n                    value\n                },\n                correctAnswer: property(language:$language, name:\"game4:correctAnswer\"){\n                    value\n                },\n                wrongAnswer: property(language:$language, name:\"game4:wrongAnswer\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import {gql} from 'apollo-boost';\n\nexport const GET_CONSENT = gql`\n    query getConsent($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            consent: nodeById(uuid: $id) {\n                id: uuid\n                identifier:name\n                title:displayName(language:$language)\n                description: property(language:$language, name:\"jcr:description\"){\n                    value\n                }\n                actived: property(language:$language,name:\"wem:activated\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","// import uTracker from \"unomi-analytics\";\n\n// const syncTracker = ({scope,url,sessionId,dispatch}) => {\n//     uTracker.initialize({\n//         \"Apache Unomi\": {\n//             scope,\n//             url,\n//             // sessionId\n//         }\n//     });\n//\n//     uTracker.ready( () =>\n//         dispatch({\n//             case:\"ADD_CXS\",\n//             payload:{\n//                 cxs:window.cxs\n//             }\n//         })\n//     );\n// };\n\nconst syncConsentStatus= ({wem,consents}) => {\n    const statusDate = new Date();\n    const revokeDate = new Date(statusDate);\n    revokeDate.setFullYear(revokeDate.getFullYear() + 2);\n    console.debug(\"syncConsentStatus consents :\", consents);\n\n    const consentsEvents = consents.map(consent =>{\n        const consentEvent = wem.buildEvent(\"modifyConsent\",\n            wem.buildTarget(consent.typeIdentifier, 'consent'),\n            wem.buildSourcePage()\n        );\n        consentEvent.properties={\n            consent: {\n                typeIdentifier:consent.typeIdentifier,\n                scope:consent.scope,\n                status:consent.status,\n                statusDate: statusDate.toISOString(),//\"2018-05-22T09:27:09.473Z\",\n                revokeDate: revokeDate.toISOString()//\"2020-05-21T09:27:09.473Z\"\n            }\n        }\n        return consentEvent;\n    });\n    wem.collectEvents(consentsEvents, function () {\n        console.debug(\"consents status updated\");\n    }, function (xhr) {\n        console.error(\"oups something get wrong : \",xhr);\n    })\n\n\n\n};\n\n// const syncQuizScore = ({quizKey,split,quizScore}) =>\n//     uTracker.track(\"setQuizScore\",{\n//         score:`${quizKey}${split}${quizScore}`\n//     });\n\nconst syncQuizScore = ({wem,quizKey,quizScore}) =>{\n    const syncScoreEvent = wem.buildEvent(\"setQuizScore\",\n        wem.buildTarget(quizKey, 'quiz'),\n        wem.buildSourcePage()\n    );\n    syncScoreEvent.properties={\n        update : {\n            [`properties.quiz-score-${quizKey}`]:quizScore\n        }\n    };\n    wem.collectEvents(syncScoreEvent, function () {\n        console.debug(\"score updated\");\n    }, function (xhr) {\n        console.error(\"oups something get wrong : \",xhr);\n    })\n}\n\n\nconst syncVideoStatus = ({wem,content,parent,status,player}) =>{\n    const videoEvent = wem.buildEvent(\"video\",\n        wem.buildTarget(content.id, content.type,{\n            game4Quiz:{\n                id:content.id,\n                type:content.type\n            },\n            game4Warmup:{\n                id:parent\n            },\n            game4Video:{\n                duration: player.current.getDuration(),\n                currentTime: player.current.getCurrentTime(),\n                status: status\n            }\n        }),\n        wem.buildSourcePage()\n    );\n    // syncQuizVisitorData.properties={\n    //     update : {\n    //         [propertyName]:propertyValue\n    //     }\n    // };\n    wem.collectEvents(videoEvent, function () {\n        console.debug(\"video data synch\");\n    }, function (xhr) {\n        console.error(\"oups something get wrong : \",xhr);\n    })\n};\n    // uTracker.track(\"video\",{\n    //     id:content.id,\n    //     type:content.type,\n    //     game4Quiz:{\n    //         id:content.id,\n    //         type:content.type\n    //     },\n    //     game4Warmup:{\n    //         id:parent\n    //     },\n    //     game4Video:{\n    //         duration: player.current.getDuration(),\n    //         currentTime: player.current.getCurrentTime(),\n    //         status: status\n    //     }\n    // });\n\nconst syncVisitorData = ({wem,propertyName,propertyValue,resolve}) =>{\n    const syncQuizVisitorData = wem.buildEvent(\"syncVisitorData\",\n        wem.buildTarget(propertyName, 'quizAnswer'),\n        wem.buildSourcePage()\n    );\n    syncQuizVisitorData.properties={\n        update : {\n            [propertyName]:propertyValue\n        }\n    };\n    wem.collectEvents(syncQuizVisitorData, resolve , function (xhr) {\n        console.error(\"oups something get wrong : \",xhr);\n    })\n};\n\nexport {\n    // syncTracker,\n    syncConsentStatus,\n    syncQuizScore,\n    syncVideoStatus,\n    syncVisitorData\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_CONSENT} from \"components/Consent/ConsentGraphQL\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/wemAPI\";\nimport {StoreContext} from \"contexts\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport {Typography,FormGroup,FormControlLabel,Checkbox} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    granted:{\n        display:\"flex\",\n        flexWrap:\"wrap\",\n        alignItems: 'center',\n        margin:0,\n        \"& svg\":{\n            marginRight: '.5rem',\n        },\n        \"& i\":{\n            flexBasis: '100%',\n            fontSize: '.85rem',\n        }\n    },\n    denied:{\n        cursor: 'pointer',\n        color: theme.palette.error.main,\n        width: '1rem',\n        marginLeft:'.5rem',\n    }\n}));\n\nconst Consent = (props)=> {\n    const classes = useStyles(props);\n\n    const {id, quizState, quizDispatch} = props;\n    const [consent={}] = quizState.consents.filter(consent => consent.id === id);\n\n    const { state } = React.useContext(StoreContext);\n\n    const {jContent,wem} = state;\n    const {gql_variables,scope,consent_status} =  jContent;\n\n    const variables = Object.assign(gql_variables,{id})\n    const {loading, error, data} = useQuery(GET_CONSENT, {\n        variables:variables,\n    });\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const consentData = get(data, \"response.consent\", {});\n            quizDispatch({\n                case:\"DATA_READY_CONSENT\",\n                payload:{\n                    consentData,\n                    scope,\n                    wem,\n                    consent_status\n                }\n            })\n        }\n\n    }, [loading,data]);\n\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.debug(\"*** paint consent : \",id);\n\n    const handleDenied = (consent) => {\n        syncConsentStatus(wem,[{\n            scope,\n            typeIdentifier:consent.identifier,\n            status:consent_status.DENIED\n        }]);\n\n        quizDispatch({\n            case:\"DENIED_CONSENT\",\n            payload:{\n                id:consent.id\n            }\n        });\n    }\n\n    const handleChange= (e) => {\n        quizDispatch({\n            case:\"TOGGLE_CONSENT\",\n            payload:{\n                id:e.target.id\n            }\n        });\n    }\n    return(\n        <li>\n            {!consent.granted &&\n            <div>\n                <FormGroup aria-label=\"position\" row>\n                    <FormControlLabel\n                        value={consent.checked}\n                        control={<Checkbox id={consent.id} />}\n                        label={consent.title}\n                        labelPlacement=\"end\"\n                        onChange={handleChange}\n                    />\n                </FormGroup>\n                <Typography className={classes.granted}\n                            style={{fontSize: '.85rem'}}\n                            component=\"i\">\n                    {consent.description}\n                </Typography>\n            </div>\n            }\n            {consent.granted &&\n                <Typography className={classes.granted}\n                            component=\"p\">\n                    <CheckIcon />\n                    {consent.title}\n                    <BackspaceIcon className={classes.denied}\n                                   onClick={()=> handleDenied(consent)} />\n                    <i>{consent.description}</i>\n                </Typography>\n            }\n        </li>\n    )\n};\n\nConsent.propTypes={\n    id:PropTypes.string.isRequired,\n    quizState:PropTypes.object.isRequired,\n    quizDispatch:PropTypes.func.isRequired\n};\n\nexport default Consent;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nconst Image = ({path,alt}) =>{\n    const { state} = React.useContext(StoreContext);\n    const {files_endpoint} = state.jContent;\n    return(\n        <img className=\"d-block w-100\"\n             src={`${files_endpoint}${encodeURI(path)}`}\n             alt={alt}/>\n    )\n}\nexport default Image;","import React, {useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport ReactPlayer from \"react-player\";\nimport {syncVideoStatus} from \"misc/wemAPI\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    playerWrapper:{}\n}));\n\nconst VideoPlayer = (props)=>{\n    const classes = useStyles(props);\n    const {ownerID,videoURL} = props;\n    const { state } = React.useContext(StoreContext);\n    const {quiz,wem} = state;\n\n    const player = useRef(null);\n\n    const handleVideoStatus = ({status}) => {\n        syncVideoStatus({\n            wem,\n            content:{\n                id:quiz.id,\n                type:quiz.type\n            },\n            parent:ownerID,\n            player,\n            status\n        })\n    }\n\n    // const onReadyHandler = () => {\n    //     console.log(\"onReady seekTo 4.2s\")\n    //     player.current.seekTo(4.2,\"seconds\");\n    // }\n    const onStartHandler = () => {\n        // player.current.seekTo(4.2,\"seconds\");\n    }\n    const onPlayHandler = () => handleVideoStatus({status:\"started\"});\n    const onEndedHandler = () => handleVideoStatus({status:\"end\"});\n    const onPauseHandler = () => handleVideoStatus({status:\"pause\"});\n\n    return (\n        <div className={classes.playerWrapper}>\n            <ReactPlayer\n                ref={player}\n                className='react-player'\n                url={videoURL}\n                controls\n                width='100%'\n                height='100%'\n                // onReady={onReadyHandler}\n                onStart={onStartHandler}\n                // onProgress={(object)=> console.log(\"onProgress : \",object)}\n                onPlay={onPlayHandler}\n                // onSeek={(seconds)=> console.log(\"onSeek : \",seconds)}\n                // onDuration={(seconds)=> console.log(\"onDuration :\",seconds)}\n                onPause={onPauseHandler}\n                onEnded={onEndedHandler}\n            />\n        </div>\n    )\n}\n\nVideoPlayer.propTypes={\n    videoURL:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired\n}\n\nexport default VideoPlayer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\nconst Video = ({url,ownerID}) =>{\n\n\n    return(\n        <VideoPlayer\n            videoURL={url}\n            ownerID={ownerID}\n        />\n    )\n}\nVideo.propTypes={\n    url:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default Video;","import {gql} from 'apollo-boost';\n\nexport const GET_WIDEN_MEDIA = gql`\n    query getWidenMedia($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            media: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                title:displayName(language:$language)\n                imageURL: property(name:\"wden:templatedUrl\"){\n                    value\n                }\n                videoURL: property(name:\"wden:videoStreamURL\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import get from \"lodash.get\";\n\nconst MediaMapper = (mediaData) => ({\n    id: get(mediaData, \"id\"),\n    type: get(mediaData, \"type.value\"),\n    imageURL: get(mediaData, \"imageURL.value\"),\n    videoURL: get(mediaData, \"videoURL.value\")\n})\n\nexport default MediaMapper;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\n\n\nconst WidenImage = ({uuid}) => {\n    const _SIZE_ = '{size}';\n    const _SCALE_ = '{scale}';\n    const _QUALITY_ = '{quality}';\n    const width = '1024';\n    const scale = '1';\n    const quality = '72';\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            media.imageURL=media.imageURL\n                .replace(_SIZE_,width)\n                .replace(_SCALE_,scale)\n                .replace(_QUALITY_,quality);\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <img src={`https://via.placeholder.com/${width}x768/09f/fff?text=Loading`} alt=\"loading\"/>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media &&\n            <img className=\"d-block w-100\"\n             src={media.imageURL}\n             alt={media.title}/>\n        }\n        </>\n    )\n}\n\nWidenImage.propTypes={\n    uuid:PropTypes.string.isRequired\n}\n\nexport default WidenImage;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\n\nconst WidenVideo = ({uuid, ownerID}) => {\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media.videoURL &&\n            <VideoPlayer\n                videoURL={media.videoURL}\n                ownerID={ownerID}\n            />\n        }\n        </>\n    )\n}\n\nWidenVideo.propTypes={\n    uuid:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default WidenVideo;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport Image from './components/Image';\nimport Video from './components/Video';\nimport WidenImage from './components/widen/WidenImage';\nimport WidenVideo from './components/widen/WidenVideo';\n\nconst Media = ({id,type,mixins,path,sourceID,alt}) => {\n    const { state } = React.useContext(StoreContext);\n    const {cnd_type,files_endpoint} = state.jContent;\n\n    // console.log(\"Media equals: \",type === cnd_type.WIDEN_IMAGE)\n    let component = <></>;\n    switch(type){\n        case cnd_type.WIDEN_IMAGE :\n            component = <WidenImage uuid={id} />\n            break;\n\n        case cnd_type.WIDEN_VIDEO :\n            component = <WidenVideo uuid={id} ownerID={sourceID} />\n            break;\n\n        case cnd_type.EXT_VIDEO:\n            component = <Video url={path} ownerID={sourceID} />\n            break;\n            \n        case cnd_type.JNT_FILE:\n            if(mixins.includes(cnd_type.IMAGE)){\n                component = <Image path={path} alt={alt}/>\n            }else{\n                component = <Video url={files_endpoint+encodeURI(path)} ownerID={sourceID} />\n            }\n            break;\n            \n        default:\n            if(path)\n                component = <Image path={path} alt={alt}/>\n            break;\n    }\n    // console.log(\"Media component: \",component)\n    return(component)\n}\n\nMedia.propTypes={\n    id:PropTypes.string,\n    type:PropTypes.string,\n    mixins:PropTypes.array,\n    path:PropTypes.string,\n    sourceID:PropTypes.string,\n    alt:PropTypes.string\n}\n\nexport default Media;","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme)=> ({\n    textUppercase: {\n        textTransform: \"uppercase\"\n    },\n    subtitle: {\n        //, &::after\n        \"&::before\":{\n            backgroundColor:theme.palette.primary.main,\n            display: 'block',\n            width:`${theme.spacing(3)}px`,\n            height: `${theme.spacing(.25)}px`,\n            content:'\"\"',\n            margin: \"auto\",\n            marginTop: `${theme.spacing(1)}px`,\n        },\n    },\n    item:{\n        display: 'none',\n        minHeight:theme.geometry.item.minHeight,\n        width: '100%',\n        backfaceVisibility: 'hidden',\n        // transition:theme.transitions.create(['opacity','visibility'],{\n        //     // duration: theme.transitions.duration.long,\n        //     easing: theme.transitions.easing.easeInOut,\n        // }),\n        \"& img\":{\n            objectFit: 'cover',\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            zIndex: -1,\n        },\n        \"&.active\":{\n            display:'flex',\n            flexWrap:'wrap',\n            flexDirection:'column',\n        }\n    },\n    wait: {\n        marginTop:theme.spacing(3)\n    },\n    showOverlay:{\n        \"&::before\":{\n            position:'absolute',\n            top:0, right:0, bottom:0, left:0,\n            content:'\"\"',\n            background: `linear-gradient(90deg, ${theme.palette.background.overlay.start} 0, ${theme.palette.background.overlay.startMiddle} 30%, ${theme.palette.background.overlay.endMiddle} 60%, ${theme.palette.background.overlay.end} 100%)`,\n\n            // backgroundColor: theme.palette.background.overlay,\n            // boxShadow: theme.palette.shadows.overlay.lg,\n            // [theme.breakpoints.between('xs', 'sm')]: {\n            //     boxShadow: theme.palette.shadows.overlay.xs,\n            // }\n        }\n    },\n    caption:{\n        width:'100%',\n        maxWidth:theme.breakpoints.values.lg,\n        margin:\"auto\",\n        flexGrow:2,\n        paddingRight:theme.geometry.caption.padding.lg,\n        paddingLeft:theme.geometry.caption.padding.lg,\n        paddingBottom:theme.geometry.caption.padding.lg,\n        [theme.breakpoints.between('xs', 'sm')]: {\n            paddingRight:theme.geometry.caption.padding.xs,\n            paddingLeft:theme.geometry.caption.padding.xs,\n            paddingBottom:theme.geometry.caption.padding.xs,\n        },\n        zIndex: 10,\n        textAlign: 'center',\n\n        \".showResult &\": {\n            \"& button\":{\n                display:'none',\n            }\n        }\n    },\n    captionMain:{\n        [theme.breakpoints.between('xs', 'sm')]: {\n            \"& h3\": {\n                fontSize:'2.125rem'\n            },\n            \"& h4\": {\n                fontSize:'1.875rem'\n            },\n            paddingRight:theme.geometry.caption.padding.main,\n            paddingLeft:theme.geometry.caption.padding.main\n        },\n\n        //Marketo Style override\n        \"& .mktoForm\":{\n            margin:'auto',\n            color:`${theme.palette.text.primary} !important`,\n            \"& .mktoAsterix\":{\n                color:theme.palette.primary.main,\n            },\n            \"& .mktoError\":{\n                \"& .mktoErrorArrow\":{\n                    background:theme.palette.primary.main,\n                    borderColor:theme.palette.primary.dark,\n                },\n                \"& .mktoErrorMsg\":{\n                    background:theme.palette.primary.main,\n                    textShadow : \"unset\",\n                    borderColor:theme.palette.primary.dark,\n                    boxShadow: `rgba(0,0,0,0.65) 0 2px 7px, inset ${theme.palette.primary.dark} 0 1px 0px`\n                },\n            },\n            \"& .mktoRequiredField\":{},\n            \"& .mktoLabel\":{\n                fontSize: theme.typography.body1.fontSize,\n                fontWeight: \"400 !important\",\n                lineHeight: \"1.2rem\",\n                marginBottom: \"5px\",\n            },\n            \"& .mktoField\":{\n                lineHeight: \"1.5rem\",\n                fontSize: theme.typography.body1.fontSize,\n                padding: \"8px 3px\",\n                border:0,\n                borderRadius:\"5px\"\n            },\n            \"& .mktoButtonWrap.mktoBluePill\":{\n                \"& .mktoButton\":{\n                    border:0,\n                    background:theme.palette.primary.main,\n                    borderRadius:\"4px\",\n                    color:theme.palette.text.secondary,\n                    fontSize: \"0.875rem\",\n                    fontWeight: \"500\",\n                    lineHeight: 1.75,\n                    padding:\"6px 16px\",\n                    minWidth:\"64px\",\n                    textTransform: \"uppercase\",\n                    boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n                    textShadow: \"unset\",\n                    fontFamily: theme.typography.fontFamily,\n                    \"&:hover\":{\n                        border:0,\n                        background:theme.palette.primary.dark,\n                        boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n                    }\n                }\n            }\n        }\n\n    }\n}));","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    indicator: {\n        boxSizing: 'content-box !important',\n        flex: '0 1 auto',\n        width: theme.geometry.indicator.width,\n        height: theme.geometry.indicator.height,\n        marginRight: theme.geometry.indicator.spacer,\n        marginLeft: theme.geometry.indicator.spacer,\n        textIndent: '-999px',\n\n        backgroundColor: theme.palette.common.white,\n        backgroundClip: 'padding-box',\n        // Use transparent borders to increase the hit area by 10px on top and bottom.\n        borderTop: `${theme.geometry.indicator.hitAreaHeight} solid transparent`,\n        borderBottom: `${theme.geometry.indicator.hitAreaHeight} solid transparent`,\n        opacity: '.5',\n        transition:theme.transitions.create(['opacity','height'],{\n            duration: theme.transitions.duration.long,\n            easing: theme.transitions.easing.ease,\n        }),\n        \".showResult &\": {\n            backgroundColor:theme.palette.grey[900],\n        },\n        \"&.clickable\":{\n            cursor: 'pointer',\n        },\n        \"&.active\": {\n            opacity: 1\n        }\n    }\n}));\n\nconst Indicator = (props) =>{\n    const classes = useStyles(props);\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {currentSlide} = state;\n    const {id,enabled} = props;\n\n    const active = currentSlide === id;\n    const handleCLick = () =>{\n        if(enabled)\n            dispatch({\n                case:\"SHOW_SLIDE\",\n                payload:{\n                    slide:id\n                }\n            });\n    };\n\n    return(\n        <li className={classnames(\n            classes.indicator,\n            (active ? 'active':''),\n            (enabled ? 'clickable':'')\n        )}\n            onClick={handleCLick}>\n        </li>\n    )\n}\n\nIndicator.propTypes={\n    id:PropTypes.string.isRequired,\n    enabled:PropTypes.bool.isRequired\n}\n\nexport default Indicator;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nfunction manageTransition({state,dispatch,payload}){\n    const {\n        transitionIsEnabled,\n        transitionTimeout\n    }=state;\n\n    if(transitionIsEnabled){\n        dispatch({\n            case:\"TOGGLE_TRANSITION\"\n        });\n        setTimeout(()=>dispatch({\n            case:\"TOGGLE_TRANSITION\"\n        }),transitionTimeout);\n        setTimeout(()=>dispatch(payload),transitionTimeout);\n    }else{\n        dispatch(payload)\n    }\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace,\n    manageTransition\n}","import Indicator from \"components/Header/Indicator\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {manageTransition} from \"misc/utils\";\n\nconst useStyles = makeStyles(theme => ({\n    header:{\n        zIndex: 2,\n        display: 'flex',\n        flexDirection:'column',\n        justifyContent: 'center',\n        width:'100%',\n        padding: `${theme.spacing(2)}px ${theme.geometry.caption.padding.lg}`,\n        [theme.breakpoints.between('xs', 'sm')]: {\n            padding: `${theme.spacing(2)}px ${theme.geometry.caption.padding.main}`,\n        },\n        '.showResult &':{\n            backgroundColor: theme.palette.grey['300'],\n        }\n    },\n    headerIndicators: {\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex:1,\n        listStyle: 'none',\n        padding:0,\n        marginTop:0,\n        marginBottom: `${theme.spacing(2)}px`,\n        '.showResult &':{\n            marginBottom:0,\n            [theme.breakpoints.between('xs', 'sm')]: {\n                marginBottom:`${theme.spacing(1)}px`\n            }\n        }\n    },\n    headerResult:{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        height: 0,\n        width:'100%',\n        overflow:\"hidden\",\n        transition:theme.transitions.create(['height'],{\n            duration: theme.transitions.duration.standard,//'10s',//\n            easing: theme.transitions.easing.header,\n        }),\n        \".showResult &\":{\n            height: theme.geometry.header.result.height,//'45px',//'auto',\n            marginBottom: `${theme.spacing(1)}px`\n\n        }\n    },\n    headerText:{\n        textTransform: 'capitalize',\n        fontWeight: theme.typography.fontWeightBold,\n        color: theme.palette.grey[700],\n        [theme.breakpoints.between('xs', 'sm')]: {\n            fontSize:'1.75rem'\n        }\n    },\n}));\n\nconst Header = (props) => {\n    const classes = useStyles(props);\n    // const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        slideSet,\n        currentResult,\n        showNext,\n        showScore,\n        // transitionTimeout,\n        // transitionIsEnabled,\n        browsingIsEnabled\n    } = state;\n\n    const handleNextSlide = () =>\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n    // {\n    //     if(transitionIsEnabled){\n    //         dispatch({\n    //             case:\"TOGGLE_TRANSITION\"\n    //         });\n    //         setTimeout(()=>dispatch({\n    //             case:\"TOGGLE_TRANSITION\"\n    //         }),transitionTimeout);\n    //         setTimeout(()=>dispatch({\n    //             case:\"NEXT_SLIDE\"\n    //         }),transitionTimeout);\n    //     }else{\n    //         dispatch({\n    //             case:\"NEXT_SLIDE\"\n    //         })\n    //     }\n    // }\n\n    const handleShowScore = () =>\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"SHOW_SCORE\"\n            }\n        });\n        // if(transitionIsEnabled){\n        //     dispatch({\n        //         case:\"TOGGLE_TRANSITION\"\n        //     });\n        //     setTimeout(()=>dispatch({\n        //         case:\"TOGGLE_TRANSITION\"\n        //     }),transitionTimeout);\n        //     setTimeout(()=>dispatch({\n        //         case:\"SHOW_SCORE\"\n        //     }),transitionTimeout);\n        // }else{\n        //     dispatch({\n        //         case:\"SHOW_SCORE\"\n        //     })\n        // }\n\n\n    const getHeaderResultLabel=()=>{\n        if(currentResult)\n            return jContent.language_bundle.correctAnswer;\n        return jContent.language_bundle.wrongAnswer;\n    }\n\n    const getHeaderBtnNext=()=>{\n        if(showScore)\n            return  <Button onClick={handleShowScore}\n                            disabled={!showNext}>\n                {jContent.language_bundle.btnShowResults}\n            </Button>\n        return  <Button onClick={handleNextSlide}\n                        disabled={!showNext}>\n            {jContent.language_bundle.btnNextQuestion}\n        </Button>\n    }\n\n    return(\n        <div className={classes.header}>\n            <ol className={classes.headerIndicators}>\n                {slideSet.map( itemId =>\n                    <Indicator\n                        key={itemId}\n                        id={itemId}\n                        enabled={browsingIsEnabled}\n                    />\n                )}\n            </ol>\n            {jContent.language_bundle &&\n            <div className={classes.headerResult}>\n                <Typography className={classes.headerText}\n                            variant=\"h4\">\n                    {getHeaderResultLabel()}\n                </Typography>\n\n                {getHeaderBtnNext()}\n            </div>\n            }\n        </div>\n    )\n};\nexport default Header;","import { useState, useEffect } from \"react\";\n\nconst appendScript = (baseUrl, setScriptLoaded) => {\n    if (window.MktoForms2) return setScriptLoaded(true);\n\n    const script = document.createElement(\"script\");\n    script.src = `${baseUrl}/js/forms2/js/forms2.min.js`;\n    script.onload = () => (window.MktoForms2 ? setScriptLoaded(true) : null);\n    document.body.appendChild(script);\n}\n\nconst useMarketo = ({ baseUrl, munchkinId, formId, callback, whenReadyCallback,handleSuccess }) => {\n    const [scriptLoaded, setScriptLoaded] = useState(false);\n\n    useEffect(() => {\n        if (!(baseUrl && munchkinId && formId))\n            return \"Fill the fields and a form should appear\";\n\n        if (scriptLoaded) {\n            window.MktoForms2.loadForm(baseUrl, munchkinId, formId, callback);\n            window.MktoForms2.whenReady( whenReadyCallback );\n\n            return;\n        }\n        appendScript(baseUrl, setScriptLoaded);\n    }, [scriptLoaded, baseUrl, munchkinId, formId, callback,handleSuccess]);\n}\n\nexport default useMarketo;","import React from 'react';\n// import PropTypes from \"prop-types\";\n\nimport {Button,Typography} from \"@material-ui/core\";\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {StoreContext} from \"contexts\";\nimport Consent from \"components/Consent\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/wemAPI\";\nimport Media from '../Media'\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"components/Header/Header\";\nimport {manageTransition} from \"misc/utils\";\nimport useMarketo from \"components/Marketo/LoadScript\";\n// import {mktgForm} from \"douane/lib/config\";\n\nconst useStyles = makeStyles(theme => ({\n    duration:{\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& svg': {\n            marginRight: '3px',\n        },\n        marginTop:`${theme.spacing(3)}px`,\n    },\n    description:{\n        // textAlign: 'left',\n        maxWidth:'500px',\n        margin:`${theme.spacing(4)}px auto`,\n\n    },\n    consent:{\n        width:'100%',\n        paddingRight:`${theme.spacing(4)}px`,\n        paddingLeft:`${theme.spacing(4)}px`,\n        zIndex: 10,\n        \"& ul\":{\n            listStyle: 'none',\n            padding:0,\n        },\n        \"& li\":{\n            marginBottom: '.5rem'\n        }\n    },\n    consentTitle:{\n        textTransform:'capitalize',\n        textDecoration:'underline'\n    },\n    wemError:{\n        backgroundColor:theme.palette.error.dark,\n        borderRadius:'3px',\n        display: 'inline',\n        padding: '5px 10px'\n    }\n}));\n\nconst init = variables =>{\n    return {\n        ...variables,\n        consents:[]//list of consent\n    }\n}\n\nconst computeEnableStartBtn = (state) => {\n    const {showNext,workspace,consents} = state;\n\n    if(showNext && workspace !== \"LIVE\")\n        return true;\n\n    const granted = consents.filter( consent => consent.checked || consent.granted );\n    return consents.length === granted.length;\n}\n\nfunction reducer(state, action) {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY_CONSENT\":{\n            let {consents} = state;\n            const {consentData,scope,wem,consent_status} = payload;\n            console.debug(\"[QUIZ] DATA_READY_CONSENT -> consentData :\",consentData);\n\n            const identifier = get(consentData, \"identifier\");\n\n            //compute granted\n            const consentPath = `consents[\"${scope}/${identifier}\"]`;\n\n            //TODO verifier la structure, je ne pense pas avoir le context ici\n            const cxsConsentStatus = get(wem,`${consentPath}.status`);\n            const cxsConsentRevokeDate = get(wem,`${consentPath}.revokeDate`);\n\n            const granted = consent_status.GRANTED === cxsConsentStatus\n                && Date.now() < Date.parse(cxsConsentRevokeDate)\n\n            consents = [...consents,{\n                id : get(consentData, \"id\"),\n                title : get(consentData, \"title\"),\n                description : get(consentData, \"description.value\"),\n                actived : JSON.parse(get(consentData, \"actived.value\", false)),\n                checked : false,\n                identifier,\n                granted\n            }];\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        case \"DENIED_CONSENT\":{\n            const {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] DENIED_CONSENT -> id :\",id);\n\n            return{\n                ...state,\n                consents:consents.map( consent => {\n                    if( consent.id === id)\n                        return {\n                            ...consent,\n                            granted:false\n                        };\n                    return consent\n                }),\n                enableStartBtn:false\n            }\n        }\n        case \"TOGGLE_CONSENT\": {\n            let {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] TOGGLE_CONSENT -> id :\",id);\n\n            consents = consents.map(consent => {\n                if(consent.id === id)\n                    return {\n                        ...consent,\n                        checked:!consent.checked\n                    };\n                return consent\n            });\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        default:\n            throw new Error(`[QUIZ] action case '${action.case}' is unknown `);\n    }\n}\n\nconst MktoForm = (props) => {\n\n    // const { baseUrl, munchkinId, formId } = props;\n    const { formId } = props;\n    useMarketo(props);\n    return <form id={`mktoForm_${formId}`} />;\n}\n\nconst Quiz = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n\n    const {\n        quiz,\n        showNext,\n        currentSlide,\n        jContent,\n        wem\n    } = state;\n\n    const {\n        consent_status,\n        scope,\n        gql_variables,\n        language_bundle,\n        mktgForm\n    } = jContent;\n\n    const enableStartBtn = showNext &&\n        // !quiz.mktoForm &&\n        quiz.consents.length > 0? gql_variables.workspace !== \"LIVE\" : true;\n\n    const [quizState, quizDispatch] = React.useReducer(\n        reducer,\n        {\n            enableStartBtn,//: showNext && gql_variables.workspace !== \"LIVE\",\n            workspace:gql_variables.workspace,\n            showNext,\n        },\n        init\n    );\n\n    console.debug(\"*** paint quiz : \",quiz.title);\n    const show = currentSlide === quiz.id;\n\n    const onClick = () => {\n        const consents = quizState\n                            .consents\n                            .filter(consent => !consent.granted)\n                            .map(consent => {\n                                return {\n                                    scope,\n                                    typeIdentifier:consent.identifier,\n                                    status:consent_status.GRANTED\n                                }\n                        })\n        syncConsentStatus({wem,consents})\n        // quizState.consents.forEach(consent=>{\n        //     //already granted nothing to do\n        //     if(consent.granted)\n        //         return;\n        //\n        //     syncConsentStatus({\n        //         scope,\n        //         typeIdentifier:consent.identifier,\n        //         status:consent_status.GRANTED\n        //     });\n        // })\n\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n\n    };\n    const handleMktoFormSuccess = (values,targetPageUrl) =>{\n        console.debug(\"[handleMktoFormSuccess] values : \",values);\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n        return false;\n    }\n\n    const handleMktoForm = (form) =>{\n        form.addHiddenFields({\n            'pageURL' : document.location.href,\n            'cxsProfileId' : wem?wem.profileId:'',\n        });\n        form.onSuccess(handleMktoFormSuccess);\n    }\n\n    const getStartComponent = () => {\n\n        const _wem = window.wem || false;\n        if(!state.wem &&\n            _wem.constructor === Object &&\n            Object.keys(_wem).length === 0)\n            return <Typography className={classes.wemError}\n                               variant=\"h5\">\n                Internal jExperience connection issue\n            </Typography>\n\n        if(!quiz.mktgForm)\n            return <Button onClick={onClick}\n                           disabled={!quizState.enableStartBtn}>\n                {language_bundle && language_bundle.btnStart}\n            </Button>\n\n        if(quiz.mktgForm === mktgForm.MARKETO && quiz.mktoConfig && wem)\n            return <MktoForm\n                baseUrl={quiz.mktoConfig.baseUrl}\n                munchkinId={quiz.mktoConfig.munchkinId}\n                formId={quiz.mktoConfig.formId}\n                whenReadyCallback={handleMktoForm}\n            />\n    }\n\n    const getConsent = () =>{\n        if(quiz.mktgForm)\n            return;\n        if(quiz.consents.length > 0 && wem)\n            return <div className={classes.consent}>\n                        <Typography className={classes.consentTitle}\n                                    variant=\"h5\">\n                            {language_bundle && language_bundle.consentTitle}\n                        </Typography>\n                        <ul>\n                            {\n                                quiz.consents.map( consent =>{\n                                    if(consent.actived)\n                                        return <Consent\n                                            key={consent.id}\n                                            id={consent.id}\n                                            quizState={quizState}\n                                            quizDispatch={quizDispatch}\n                                        />\n                                    return <></>\n                                })\n                            }\n                        </ul>\n                    </div>\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type?quiz.media.type.value:null}\n                   mixins={quiz.media.mixins?quiz.media.mixins.map(mixin=>mixin.value):[]}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n\n\n            <div className={classnames(\n                sharedClasses.caption,\n                sharedClasses.captionMain\n            )}>\n                <Typography className={sharedClasses.textUppercase}\n                            variant=\"h3\">\n                    {quiz.title}\n                </Typography>\n                <Typography className={sharedClasses.subtitle}\n                            color=\"primary\"\n                            variant=\"h4\">\n                    {quiz.subtitle}\n                </Typography>\n\n                <Typography component=\"div\"\n                            className={classes.duration}>\n                    <AccessTimeIcon />\n                    {quiz.duration}\n                </Typography>\n\n                <Typography component=\"div\"\n                            className={classes.description}\n                            dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(quiz.description, { ADD_ATTR: ['target'] })}}/>\n\n                {getStartComponent()}\n            </div>\n            {getConsent()}\n        </div>\n    );\n}\n\n// Quiz.propTypes={}\n\nexport default Quiz;","import {gql} from 'apollo-boost';\n\n// const propsFragment = gql`\n//     fragment props on JCRNode{\n//         id:uuid\n//         key: property(language:$language, name:\"game4:quizKey\"){\n//             value\n//         }\n//         title:displayName(language:$language)\n//         subtitle: property(language:$language, name:\"game4:subtitle\"){\n//             value\n//         }\n//         description:property(language:$language,name:\"game4:description\"){\n//             value\n//         }\n//         duration:property(language:$language,name:\"game4:duration\"){\n//             value\n//         }\n//         cover: property(language:$language,name:\"game4:cover\"){\n//             node: refNode {\n//                 path\n//             }\n//         }\n//         consent: property(language:$language,name:\"game4:consentType\"){\n//             node: refNode {\n//                 uuid\n//             }\n//         }\n//         children{\n//             nodes {\n//                 id:uuid\n//                 type: primaryNodeType{\n//                     value:name\n//                 }\n//             }\n//         }\n//     }\n// `\n\nexport const GET_QNA = gql`\n    query getQna($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            qna: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                question: property(language:$language, name:\"game4:question\"){\n                    value\n                }\n                help: property(language:$language,name:\"game4:help\"){\n                    value\n                }\n                nbExpectedAnswer: property(name:\"game4:nbExpectedAnswer\"){\n                    value\n                }\n                answers: property(language:$language,name:\"game4:answers\"){\n                    values\n                }\n                randomSelection: property(name:\"game4:randomSelection\"){\n                    value\n                }\n                notUsedForScore: property(name:\"game4:notUsedForScore\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                jExpField2Map: property(name:\"game4:jExpProperty\"){\n                    value\n                }\n\n            }\n        }\n    }\n`\n// ${propsFragment}\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {Radio, Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    answerGroup: {\n        display:\"flex\",\n        alignItems:\"center\",\n        flexWrap:'wrap',\n        \".showResult &\":{\n            \"&.checked\":{\n                backgroundColor: theme.palette.background.checkedAnswer,\n                borderRadius: theme.geometry.checkedAnswer.borderRadius,\n                \"& .MuiTypography-body1\":{\n                    color: theme.palette.grey[900],\n                },\n                \"& + div::before\":{\n                    borderTop: '2px solid transparent',\n                },\n                \"&:last-child\":{\n                        borderBottom: '2px solid transparent',\n                    },\n                \"::before\":{\n                        borderTop: '2px solid transparent',\n                }\n            }\n        }\n    },\n    checkGroup:{\n        position:\"relative\",\n        height: '28px',//'1.5rem',\n        padding: '2px 4px 2px 2px',//'.15rem .25rem .15rem .15rem',\n        marginLeft:\"-32px\",\n        opacity: 0,\n        // transform: none,\n        transition:theme.transitions.create(['opacity'],{\n            easing: theme.transitions.easing.easeOut,\n        }),\n        borderRadius: '5px 0px 0px 5px',\n        backgroundColor: theme.palette.grey[300],\n        zIndex: 1,\n        \".showResult &\":{\n            opacity: 1,\n        },\n        \"&::after\":{\n            content: '\"\"',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid',\n            borderWidth: '14px 0 14px 18px',//'.9rem 0 .9rem 1.15rem',\n            position: 'absolute',\n            top: 0,\n            // right:'-1.1rem',\n            left:'30px',//'1.9rem',\n            borderColor:  `transparent transparent transparent ${theme.palette.grey[300]}`\n        },\n        \"&.valid\":{\n            backgroundColor:theme.palette.primary.main,\n            color:\"rgba(255, 255, 255, 0.87)\",\n            \"&::after\":{\n               borderColor:  `transparent transparent transparent ${theme.palette.primary.main}`\n            }\n        },\n        \"& svg\":{\n            verticalAlign:'unset',\n            overflow:'unset'\n        }\n    },\n    labelGroup:{\n        margin:'unset',\n        marginLeft:\"12px\"\n    }\n}));\n\nconst Answer = (props) =>{\n    const classes = useStyles(props);\n    const {qna, qnaDispatch,id} = props;\n    const [answer] = qna.answers.filter(answer => answer.id === id);\n\n    const isValid = answer.isAnswer || (qna.notUsedForScore ? answer.checked : false);\n    const handleChange = () =>\n        qnaDispatch({\n            case:\"TOGGLE_ANSWER\",\n            payload:{\n                answer\n            }\n        });\n\n    const getResultIcon = () =>{\n        if(isValid)\n            return <CheckIcon />\n        return <ClearIcon />\n    };\n\n    const getControl = () =>{\n        if(\"checkbox\"===qna.inputType)\n            return <Checkbox id={answer.id} />\n        return <Radio id={answer.id}/>\n    };\n\n    return(\n        <div className={classnames(\n            classes.answerGroup,\n            (answer.checked?\"checked\":\"\")\n        )}>\n            <div className={classnames(\n                classes.checkGroup,\n                (isValid?\"valid\":\"\")\n            )}>\n                {getResultIcon()}\n            </div>\n            <FormControlLabel\n                className={classes.labelGroup}\n                // value={answer.checked}\n                control={getControl()}\n                label={answer.label}\n                labelPlacement=\"end\"\n                onChange={handleChange}\n                checked={answer.checked}\n            />\n        </div>\n    );\n};\n\nAnswer.propTypes={\n    qna:PropTypes.object.isRequired,\n    qnaDispatch:PropTypes.func.isRequired,\n    id:PropTypes.string.isRequired,\n}\n\nexport default Answer;","import get from \"lodash.get\";\nimport {getRandomString} from \"misc/utils\";\n\nconst QnAMapper = (qnaData) => {\n    const randomSelection=JSON.parse(get(qnaData, \"randomSelection.value\", false));\n    const answers= get(qnaData, \"answers.values\", []).map(answer=>{\n        const controlledAnswer = JSON.parse(answer);\n        return {\n            ...controlledAnswer,\n            id:getRandomString(5,\"#aA\"),\n            checked:false\n        }\n    })\n\n    if(randomSelection)\n        answers.sort( (a,b) => a.id > b.id );\n\n    const inputType = answers.filter(answer => answer.isAnswer).length > 1 ?\"checkbox\":\"radio\"\n\n    return {\n        id: get(qnaData, \"id\"),\n        title: get(qnaData, \"title\"),\n        question: get(qnaData, \"question.value\", \"\"),\n        help: get(qnaData, \"help.value\", \"\"),\n        notUsedForScore: JSON.parse(get(qnaData, \"notUsedForScore.value\", false)),\n        // cover: get(qnaData, \"cover.node.path\", \"\"),\n        media: get(qnaData, \"media.node\", {}),\n        jExpField2Map: get(qnaData, \"jExpField2Map.value\", \"\"),\n        randomSelection,\n        answers,\n        inputType\n    }\n}\nexport default QnAMapper;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport {GET_QNA} from \"./QnaGraphQL\";\nimport Answer from \"./Answer\";\n\nimport QnaMapper from \"components/Qna/QnaModel\";\nimport {syncVisitorData} from \"misc/wemAPI\";\nimport Media from \"components/Media\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport classnames from \"clsx\";\nimport {FormGroup, Typography,Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Header from \"components/Header/Header\";\nimport {manageTransition} from \"misc/utils\";\n\n\nconst useStyles = makeStyles(theme => ({\n    questionGroup:{\n        textAlign:'left',\n        marginTop: `${theme.spacing(2)}px`,\n        marginBottom: `${theme.spacing(4)}px`,\n    },\n    question:{\n        marginBottom: `${theme.spacing(2)}px`,\n    },\n    formGroup: {\n        textAlign:'left',\n        \"& > div::before\":{\n            flexBasis:'100%',\n            content:'\"\"',\n            height: '2px',\n            marginLeft : '50px',\n            borderTop: '2px solid rgba(255,255,255,.2)',\n        },\n        \"&  > div:first-child::before\":{\n            borderTop: 'none',\n        },\n        \"&  > div:last-child::after\":{\n            flexBasis:'100%',\n            content:'\"\"',\n            height: '2px',\n            marginLeft : '50px',\n            borderBottom: '2px solid rgba(255,255,255,.2)',\n        },\n        marginBottom:`${theme.spacing(4)}px`\n    },\n}));\n\n\nconst initialQNA = {\n    enableSubmit:false,\n}\n\nconst reducer = (qna, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            // const {qnaData,quiz_validMark} = payload;\n            const {qnaData} = payload;\n            console.debug(\"[QNA] DATA_READY -> qnaData :\",qnaData);\n\n            return {\n                ...qna,\n                ...QnaMapper(qnaData)\n            }\n        }\n        case \"TOGGLE_ANSWER\": {\n            const {answer} = payload;//answer id\n            console.debug(\"[QNA] TOGGLE_ANSWER -> answer :\",answer);\n            let {answers} = qna;\n            if(qna.inputType === \"radio\")\n                answers = answers.map( answer =>{ return {...answer,checked:false} });\n\n            answers = answers.map(_answer => {\n                if(_answer.id === answer.id)\n                    return {\n                        ..._answer,\n                        checked:!_answer.checked\n                    };\n                return _answer\n            });\n            const enableSubmit = answers.filter(answer => answer.checked).length > 0\n\n            return{\n                ...qna,\n                answers,\n                enableSubmit\n            }\n        }\n        case \"RESET\":{\n            const {qnaData} = payload;\n            console.debug(\"[QNA] RESET -> qnaData :\",qnaData);\n            return{\n                ...initialQNA,\n                ...QnaMapper(qnaData)\n            }\n        }\n        default:\n            throw new Error(`[QNA] action case '${action.case}' is unknown `);\n    };\n}\n\nconst Qna = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        currentSlide,\n        jContent,\n        reset,\n        wem\n    } = state;\n    const { gql_variables,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    const {loading, error, data} = useQuery(GET_QNA, {\n        variables:variables,\n    });\n\n    const [qna, qnaDispatch] = React.useReducer(\n        reducer,\n        initialQNA\n    );\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [loading,data]);\n\n    React.useEffect(() => {\n        if(reset && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"RESET\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [reset,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint qna : \",qna.title);\n\n    const show = currentSlide === props.id;\n\n    const handleSubmit = () => {\n\n        // console.log(\"[handleSubmit] qna.jExpField2Map => \",qna.jExpField2Map);\n        if(qna.jExpField2Map){\n            //Get response cdpValue\n            //Note case multiple is manage by comma separated case\n            const values =\n                qna.answers\n                .filter(answer => answer.checked)\n                .reduce(\n                    (item,answer,index) =>{\n                        if(answer.cdpValue && answer.cdpValue.length > 0) {\n                            if (index === 0) {\n                                item = answer.cdpValue\n                            } else {\n                                item = `${item}, ${answer.cdpValue}`\n                            }\n                        }\n                        return item;\n                    },null\n                );\n            // console.debug(\"[handleSubmit] update : \",qna.jExpField2Map,\" with values : \",values);\n\n            //if tracker is not initialized the track event is not send\n            function syncData({propertyName,propertyValue}) {\n                return new Promise(resolve =>\n                    syncVisitorData({\n                        wem,\n                        propertyName,\n                        propertyValue,\n                        resolve\n                    })\n                );\n            }\n            async function waitSync(){\n                const xhr = await syncData({\n                    propertyName:`properties.${qna.jExpField2Map}`,\n                    propertyValue:values\n                });\n                console.debug(\"xhr :\",xhr);\n            }\n            waitSync();\n        }\n\n        const payload = {\n            case:\"SHOW_RESULT\",\n            payload:{\n                skipScore:qna.notUsedForScore,\n                result: qna.answers\n                    .filter(answer => answer.isAnswer)\n                    .reduce( (test,answer) => test && answer.checked,true)\n            }\n        }\n\n        if(qna.notUsedForScore){\n            console.debug(\"data synch continue!\");\n            manageTransition({\n                state,\n                dispatch,\n                payload\n            });\n        }else{\n            dispatch(payload);\n        }\n    }\n\n    const getAnswers = () => {\n        if(qna.answers)\n            return qna.answers.map( answer =>\n                <Answer\n                    key={answer.id}\n                    id={answer.id}\n                    qna={qna}\n                    qnaDispatch={qnaDispatch}\n                />);\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n\n            {qna.media &&\n                <Media id={qna.media.id}\n                       type={qna.media.type?qna.media.type.value:null}\n                       mixins={qna.media.mixins?qna.media.mixins.map(mixin=>mixin.value):[]}\n                       path={qna.media.path}\n                       alt={qna.title}\n                />\n            }\n            <div className={sharedClasses.caption}>\n                <div className={classes.questionGroup}>\n                    <Typography  className={classes.question}\n                                 variant=\"h4\">\n                        {qna.question}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                        {qna.help}\n                    </Typography>\n                </div>\n\n                <FormGroup className={classes.formGroup}\n                           style={{}}\n                           aria-label=\"answer\">\n                    {getAnswers()}\n                </FormGroup>\n\n                <Button onClick={handleSubmit}\n                        disabled={!qna.enableSubmit}>\n                    {language_bundle && language_bundle.btnSubmit}\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nQna.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Qna;","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:masterQnaCover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_WARMUP = gql`\n    query getWarmup($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            warmup: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                content: property(language:$language,name:\"game4:content\"){\n                    value\n                }\n                duration: property(name:\"game4:qnaDuration\"){\n                    value\n                }\n                videoLink: property(name:\"game4:videoLink\"){\n                    value\n                }\n                videoExtPath: property(language:$language,name:\"game4:videoExtPath\"){\n                    value\n                }\n                videoIntPath: property(language:$language,name:\"game4:videoIntPath\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n    \n            }\n        }\n    }\n`","import get from \"lodash.get\";\n\nconst WarmupMapper = (warmupData,cnd_type) => {\n    let video = null;\n    const videoLink = get(warmupData, \"videoLink.value\", \"\");\n    const videoIntPath = get(warmupData, \"videoIntPath.node\");\n\n    if(videoLink)\n        video= videoIntPath ?\n            videoIntPath:{\n                id:null,\n                type:{\n                    value:cnd_type.EXT_VIDEO\n                },\n                path:get(warmupData, \"videoExtPath.value\")\n            }\n\n    return{\n        id: get(warmupData, \"id\", \"\"),\n        title: get(warmupData, \"title\", \"\"),\n        subtitle: get(warmupData, \"subtitle.value\", \"\"),\n        content: get(warmupData, \"content.value\", \"\"),\n        duration: get(warmupData, \"duration.value\", \"\"),\n        media: get(warmupData, \"media.node\", {}),\n        childNodes: get(warmupData,\"children.nodes\",[])\n            .map(node => {\n                return{\n                    id: get(node, \"id\"),\n                    type: get(node, \"type.value\")\n                }\n            }),\n        video\n    }\n}\nexport default WarmupMapper;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport get from \"lodash.get\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport {StoreContext} from \"contexts\";\nimport {GET_WARMUP} from \"./WarmupGraphQL\";\nimport Qna from \"components/Qna\";\nimport WarmupMapper from \"components/Warmup/WarmupModel\";\nimport Media from \"components/Media\";\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography, Button} from \"@material-ui/core\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"components/Header/Header\";\nimport {manageTransition} from \"misc/utils\";\n\nconst useStyles = makeStyles(theme => ({\n    contentGroup:{\n        textAlign:'justify',\n        maxWidth:'800px',\n        margin:\"auto\",\n        marginTop:`${theme.spacing(3)}px`,\n        marginBottom:`${theme.spacing(4)}px`\n    }\n}));\n\nconst Warmup = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        currentSlide,\n        jContent\n    } = state;\n    const { gql_variables,cnd_type,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n\n    const {loading, error, data} = useQuery(GET_WARMUP, {\n        variables:variables,\n    });\n\n    const [warmup, setWarmup] = React.useState({childNodes:[]});\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const warmup = WarmupMapper(get(data, \"response.warmup\", {}),cnd_type)\n            dispatch({\n                case:\"ADD_SLIDES\",\n                payload:{\n                    slides:warmup.childNodes.map(node=>node.id),\n                    parentSlide:warmup.id\n                }\n            });\n            // console.debug(\"warmup.id : \",warmup.id,\"; warmup.video : \",warmup.video);\n            setWarmup(warmup);\n        }\n    },[loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint warmup : \",warmup.title);\n\n    const show = currentSlide === props.id;\n    const handleCLick = () =>\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n\n    return(\n        <>\n            <div className={classnames(\n                sharedClasses.item,\n                sharedClasses.showOverlay,\n                (show ? 'active':'')\n            )}>\n                <Header/>\n                {warmup.media &&\n                    <Media id={warmup.media.id}\n                           type={warmup.media.type?warmup.media.type.value:null}\n                           mixins={warmup.media.mixins?warmup.media.mixins.map(mixin=>mixin.value):[]}\n                           path={warmup.media.path}\n                           alt={warmup.title}\n                    />\n                }\n\n                <div className={classnames(\n                    sharedClasses.caption,\n                    sharedClasses.captionMain\n                )}>\n                    <Typography className={sharedClasses.textUppercase}\n                                variant=\"h3\">\n                        {warmup.title}\n                    </Typography>\n                    <Typography className={sharedClasses.subtitle}\n                                color=\"primary\"\n                                variant=\"h4\">\n                        {warmup.subtitle}\n                    </Typography>\n\n                    <div className={classes.contentGroup}>\n                        <Typography component=\"div\"\n                                    className={classes.content}\n                                    dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(warmup.content, { ADD_ATTR: ['target'] })}}/>\n\n                        { warmup.video != null &&\n                        <div>\n                            <Media id={warmup.video.id || null}\n                                   type={warmup.video.type.value}\n                                   mixins={[]}\n                                   path={warmup.video.path}\n                                   sourceID={warmup.id}\n                            />\n                        </div>\n                        }\n                    </div>\n\n                    <Button onClick={ handleCLick }>\n                        {language_bundle && language_bundle.btnQuestion}\n                    </Button>\n                </div>\n            </div>\n            {warmup.childNodes.map( node =>\n                <Qna\n                    key={node.id}\n                    id={node.id}\n                />\n            )}\n        </>\n    );\n}\n\nWarmup.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Warmup;","import {gql} from 'apollo-boost';\n\nexport const GET_PERSONALIZED_RESULT = gql`\n    query getPersonalizedResultContent($workspace: Workspace!, $id: String!, $language: String!,$profileId: String,$sessionId: String) {\n        response: jcr(workspace: $workspace) {\n            result: nodeById(uuid: $id) {\n                jExperience: jExperience(profileId: $profileId, sessionId: $sessionId) {\n                    variant:personalizedVariant{\n                        id: uuid\n                        title:displayName(language:$language)\n                        text:property(language:$language,name:\"text\"){\n                            value\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_PERSONALIZED_RESULT} from \"./PersonalizedGraphQL\";\nimport get from \"lodash.get\";\nimport DOMPurify from \"dompurify\";\nimport {Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\n\nconst useStyles = makeStyles(theme => ({\n    result:{\n        marginTop: `${theme.spacing(4)}px`,\n    }\n}));\n\nconst Personalized = (props) => {\n    const {id,cxs}=props;\n    const sharedClasses = cssSharedClasses(props);\n    const classes = useStyles(props);\n    const { state } = React.useContext(StoreContext);\n    const { jContent } = state;\n\n    const [result, setResult] = React.useState({});\n\n    const {loading, error, data} = useQuery(GET_PERSONALIZED_RESULT, {\n        variables:Object.assign(jContent.gql_variables,{\n            profileId:cxs.profileId,\n            sessionId:cxs.sessionId,\n            id\n        }),\n        fetchPolicy: \"no-cache\"\n    });\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const persoData = get(data, \"response.result.jExperience.variant\", {});\n            setResult({\n                ...persoData,\n                text:persoData.text.value\n            });\n        }\n    }, [loading,data]);\n\n    if (loading) return <Typography className={classnames(\n                            sharedClasses.wait,\n                            sharedClasses.textUppercase)}\n                            variant=\"body2\">\n                                score calculation in progress...\n                        </Typography>;\n    if (error) return <Typography className={classnames(\n                            sharedClasses.wait,\n                            sharedClasses.textUppercase)}\n                            variant=\"body2\">\n                                Error getting your result.\n                        </Typography>;\n    console.debug(\"*** paint personalized result : \",result.title);\n\n    // console.log(\"Personalized props.show :\",props.show);\n\n    return(\n        <Typography className={classes.result}\n                    component=\"div\"\n                    dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(result.text, { ADD_ATTR: ['target'] })}}/>\n    );\n\n    // return(\n    //     <div className=\"game4-quiz__score-result col-6 offset-3 col-md-4 offset-md-4 mb-5\"\n    //          dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(result.text, { ADD_ATTR: ['target'] })}}>\n    //     </div>\n    // );\n}\n\nPersonalized.propTypes={\n    id:PropTypes.string.isRequired,\n    cxs:PropTypes.object.isRequired\n}\n\nexport default Personalized;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    result:{\n        marginTop: `${theme.spacing(4)}px`,\n        maxWidth: '300px',\n        margin: '32px auto',\n        \"& .CircularProgressbar\":{\n            \"& .CircularProgressbar\":{\n                \"&-text\":{\n                    fill: theme.palette.primary.main,\n                    fontFamily: theme.typography.fontFamily,\n                },\n                \"&-trail\": {\n                    stroke: theme.palette.grey[300],\n                },\n                \"&-path\": {\n                    stroke: theme.palette.primary.main,\n                },\n            }\n        }\n    }\n}));\n\nconst Percentage = (props) => {\n    const {score} = props\n    const classes = useStyles(props);\n    console.debug(\"*** paint percentage result : \",score);\n    return(\n            <div className={classes.result}>\n                <CircularProgressbar value={score} text={`${score}%`}/>\n            </div>\n    );\n}\n\nPercentage.propTypes={\n    score:PropTypes.number.isRequired\n}\n\nexport default Percentage;","import React from 'react';\nimport {StoreContext} from \"contexts\";\n\nimport Media from \"components/Media\";\nimport Personalized from \"components/Score/personalized/Personalized\";\nimport Percentage from \"components/Score/percentage/Percentage\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport classnames from \"clsx\";\nimport {Typography,Button} from \"@material-ui/core\";\nimport Header from \"components/Header/Header\";\n\nconst Score = (props) => {\n    const sharedClasses = cssSharedClasses(props);\n    const { state,dispatch } = React.useContext(StoreContext);\n    const [timer, setTimer] = React.useState(false);\n    const {\n        quiz,\n        currentSlide,\n        score,\n        scoreIndex,\n        jContent,\n        cxs,\n        transitionIsEnabled,\n        transitionTimeout,\n        resetBtnIsEnabled\n    } = state;\n    const { language_bundle } =  jContent;\n\n    const show = currentSlide === scoreIndex;\n//wait 1s before to call jExp in order to have time to synch user profile with answer\n    React.useEffect(() => {\n        if(quiz.personalizedResult.id)\n            setTimeout(\n                () => setTimer(true),\n                1000\n            );\n    },[])\n\n    const onClick = () => {\n        if(transitionIsEnabled){\n            dispatch({\n                case:\"TOGGLE_TRANSITION\"\n            });\n            setTimeout(()=>dispatch({\n                case:\"TOGGLE_TRANSITION\"\n            }),transitionTimeout);\n            setTimeout(()=>dispatch({\n                case:\"RESET\"\n            }),transitionTimeout);\n        }else{\n            dispatch({\n                case:\"RESET\"\n            })\n        }\n    }\n    const displayResult = () => {\n        if(quiz.personalizedResult.id){\n            if(cxs && timer)\n                return <Personalized id={quiz.personalizedResult.id} cxs={cxs}/>\n            return <Typography className={classnames(\n                        sharedClasses.wait,\n                        sharedClasses.textUppercase)}\n                               variant=\"body2\">\n                        score calculation in progress...\n                    </Typography>\n        }\n        return <Percentage score={score}/>\n    }\n\n    const getResetBtn = () => {\n        if(!resetBtnIsEnabled)\n            return;\n\n        return <Button onClick={onClick}>\n            {language_bundle && language_bundle.btnReset}\n        </Button>\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type?quiz.media.type.value:null}\n                   mixins={quiz.media.mixins?quiz.media.mixins.map(mixin=>mixin.value):[]}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n            <div className={classnames(\n                sharedClasses.caption,\n                sharedClasses.captionMain\n            )}>\n                <Typography className={sharedClasses.textUppercase}\n                            variant=\"h3\">\n                    {quiz.title}\n                </Typography>\n                <Typography className={sharedClasses.subtitle}\n                            color=\"primary\"\n                            variant=\"h4\">\n                    {quiz.subtitle}\n                </Typography>\n\n                {displayResult()}\n\n                {getResetBtn()}\n            </div>\n        </div>\n    );\n\n}\n\n// Personalized.propTypes={}\n\nexport default Score;","import { createMuiTheme } from '@material-ui/core/styles';\nimport _merge from \"lodash.merge\";\n\nconst defaultTheme = () =>({\n    geometry:{\n        header:{\n          result:{\n              height:\"45px\",\n          }\n        },\n        item:{\n            minHeight:\"700px\",\n        },\n        caption:{\n            // minHeight:\"700px\",\n            padding:{\n                lg:\"60px\",\n                xs:\"45px\",\n                main:\"20px\"\n            }\n            // width:\"calc(100% - 120px)\",\n        },\n        indicator:{\n            width:\"30px\",\n            height:\"3px\",\n            hitAreaHeight:\"10px\",\n            spacer:\"3px\",\n        },\n        checkedAnswer:{\n            borderRadius:\"10px\"\n        }\n    },\n    palette: {\n        primary:{\n            light: \"#009bdc\",\n            main: \"#007cb0\",\n            dark: \"#005f87\"\n        },\n        secondary:{\n            light: \"#f57c30\",\n            main: \"#e57834\",\n            dark: \"#bd5715\"\n        },\n        text:{\n            primary:\"rgba(255, 255, 255, 0.87)\",\n            secondary:\"rgba(0, 0, 0, 0.87)\"\n        },\n        background:{\n            overlay: {\n                start:\"rgba(0,0,0,.95)\",\n                startMiddle:\"rgba(0,0,0,.9)\",\n                endMiddle:\"rgba(0,0,0,.85)\",\n                end:\"rgba(0,0,0,.75)\",\n            },\n            checkedAnswer: \"rgba(255,255,255,1)\",\n        },\n        shadows:{\n            overlay:{\n                lg:\"inset 1140px 0 570px -570px rgba(0,0,0,.5)\",\n                xs:\"inset 500px 0 250px -250px rgba(0,0,0,.5)\",\n            }\n        }\n    },\n    typography:{\n        allVariants:{\n            color:\"rgba(255, 255, 255, 0.87)\"\n        },\n        fontFamily:[\"Lato\",\"Helvetica\",\"Arial\",\"sans-serif\"].join(\",\"),\n        h3:{\n            fontWeight: 300\n        },\n        h4:{\n            fontWeight: 300\n        },\n        body1:{\n            fontSize:\"1.1rem\",\n        }\n    },\n    // shape:{\n    //     borderRadius:3\n    // }\n    transitions:{\n        easing:{\n            ease:\"cubic-bezier(0.25, 0.1, 0.25, 1)\",\n            header:\"cubic-bezier(.23,1,.32,1)\"\n        },\n        duration:{\n            long:600\n        }\n    },\n    spacing: 8,\n    overrides: {\n        MuiCheckbox:{\n            root:{\n                color:\"rgba(255, 255, 255, 0.87)\"\n            }\n        },\n        MuiRadio:{\n            root:{\n                color:\"rgba(255, 255, 255, 0.87)\"\n            }\n        },\n        MuiButton:{\n            contained:{\n                \"&$disabled\": {\n                    color: \"rgba(255, 255, 255, 0.26)\",\n                    backgroundColor: \"rgba(255, 255, 255, 0.12)\"\n                }\n            }\n\n        },\n        MuiTypography:{\n            body1:{\n                \"& a\":{\n                    color:\"#007cb0\",\n                }\n            }\n        },\n        // MuiCssBaseline: {\n        //     '@global': {\n        //         // '@font-face': ['Lato'],\n        //         '.Mui-disabled': {\n        //             color: \"rgba(255, 255, 255, 0.26)\",\n        //             backgroundColor: \"rgba(255, 255, 255, 0.12)\"\n        //         }\n        //\n        //     },\n        // },\n    },\n    props:{\n        MuiButton:{\n            disableRipple:true,\n            color:\"primary\",\n            variant:\"contained\",\n        },\n\n        MuiCheckbox:{\n            disableRipple:true,\n            color:\"primary\",\n        },\n        MuiRadio:{\n            disableRipple:true,\n            color:\"primary\",\n        }\n    }\n});\n\nconst getTheme = (userTheme) =>{\n    const targetTheme = defaultTheme();\n    const theme = createMuiTheme( _merge(targetTheme,userTheme));\n    return theme;\n}\n\nexport default getTheme;","import {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from \"clsx\";\nimport React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {Typography} from \"@material-ui/core\";\n// import PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\n\nconst childTiles = (transitionRow) =>{\n    const nb = transitionRow.length;\n    const reducer =transitionRow.reduce((obj,item,i) =>{\n        const index = i+1;\n        const key = `&:nth-child(${index})`;\n        obj[key]={\n            top: `calc(${(index-1)} * ${100/nb}%)`,\n            transitionDelay: `${(index-1)*0.1}s`\n        }\n        return obj;\n    },{})\n    return reducer;\n};\n\nconst Transition = (props) => {\n\n\n    const { state } = React.useContext(StoreContext);\n    const {\n        transitionActive,\n        transitionRow,\n        transitionLabel\n    } = state;\n\n    const useStyles = makeStyles(theme => ({\n        loader: {\n            position: 'absolute',\n            zIndex: '999',\n            top: 0,\n            left: 0,\n            bottom:0,\n            width: 0,\n            transition: 'width 0s 1.4s ease',\n            \"&.active\":{\n                width: '100%',\n                transitionDelay: '0s',\n            }\n        },\n        icon: {\n            position: 'absolute',\n            zIndex: 1,\n            top: '50%',\n            left: '50%',\n            transform: 'translateX(-50%) translateY(-50%)',\n            opacity: 0,\n            transition: 'opacity .5s ease',\n\n            \"& svg\":{\n                transformOrigin: '0 0',\n            },\n\n            \".active &\":{\n                opacity: 1,\n                // transition: 'opacity .5s 1.4s ease',\n            },\n        },\n        text:{\n            textTransform:'uppercase'\n        },\n        tile: {\n            position: 'absolute',\n            left: 0,\n            width: 0,\n            height: `${100/transitionRow.length}%`,\n            backgroundColor: theme.palette.primary.main,\n            transition: 'width .3s ease',\n            ...childTiles(transitionRow),\n\n            \".active &\":{\n                width: '100%',\n            }\n        }\n    }));\n    const classes = useStyles(props);\n\n    return (\n        <div className={classnames(\n            classes.loader,\n            (transitionActive?'active':'')\n        )}>\n            <div className={classes.icon}>\n                <Typography variant=\"h4\" className={classes.text}>\n                    {/*<PowerSettingsNewIcon/>*/}\n                    {transitionLabel}\n                </Typography>\n            {/*    <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\"*/}\n            {/*         xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\"*/}\n            {/*         viewBox=\"0 0 40 40\" enableBackground=\"new 0 0 40 40\" xmlSpace=\"preserve\">*/}\n            {/*        <path opacity=\"0.2\" fill=\"#000\"*/}\n            {/*d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"></path>*/}\n            {/*        <path fill=\"#000\"*/}\n            {/*              d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0C22.32,8.481,24.301,9.057,26.013,10.047z\"></path>*/}\n            {/*        <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 20 20\"*/}\n            {/*                          to=\"360 20 20\" dur=\"0.5s\" repeatCount=\"indefinite\"></animateTransform>*/}\n            {/*    </svg>*/}\n            </div>\n            {transitionRow.map((row,i)=><div key={i} className={classes.tile}></div>)}\n        </div>\n    )\n};\nexport default Transition;","import React from 'react'; //useEffect,useContext\n// import PropTypes from \"prop-types\";\n\nimport {Grid,Typography} from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport {GET_QUIZ} from \"components/Quiz/QuizGraphQL.js\";\n\nimport Quiz from \"components/Quiz\"\nimport Qna from \"components/Qna\";\nimport Warmup from \"components/Warmup\";\nimport Score from \"components/Score\";\nimport {syncTracker} from \"misc/tracker\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'components/theme';\nimport Transition from \"components/Transition\";\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: \"relative\",\n        \"& *, &::after, &::before\":{\n            boxSizing:\"border-box\",\n        }\n    },\n}));\n\nconst initLanguageBundle = quizData => {\n    const keys = [\n        \"btnStart\",\n        \"btnSubmit\",\n        \"btnQuestion\",\n        \"btnNextQuestion\",\n        \"btnShowResults\",\n        \"btnReset\",\n        \"consentTitle\",\n        \"correctAnswer\",\n        \"wrongAnswer\"\n    ];\n    return keys.reduce((bundle,key)=>{\n        bundle[key] = get(quizData,`${key}.value`);\n        // console.debug(\"bundle: \",bundle);\n        return bundle;\n    },{});\n}\n\nconst App = (props)=> {\n    const classes = useStyles(props);\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        quiz,\n        showResult,\n        showScore\n    } = state;\n\n    const {loading, error, data} = useQuery(GET_QUIZ, {\n        variables:jContent.gql_variables,\n    });\n\n    React.useEffect(() => {\n        console.debug(\"App Quiz init !\");\n        if(loading === false && data){\n            console.debug(\"App Quiz init Set Data!\");\n\n            const quizData = get(data, \"response.quiz\", {});\n            // const quizKey = get(quizData, \"key.value\");\n\n            jContent.language_bundle = initLanguageBundle(quizData);\n            console.debug(\"jContent.language_bundle: \",jContent.language_bundle);\n\n            dispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    quizData\n                }\n            });\n\n            //setup wem\n            if(jContent.gql_variables.workspace === \"LIVE\")\n                dispatch({\n                    case:\"ADD_WEM\",\n                    payload:{\n                        wem:window.wem\n                    }\n                })\n\n                // syncTracker({\n                //     scope: jContent.scope,\n                //     url: jContent.cdp_endpoint,\n                //     // sessionId:`qZ-${quizKey}-${Date.now()}`,\n                //     dispatch\n                // });\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    const displayScore=()=>{\n        if(showScore)\n            return <Score/>\n    }\n\n    return (\n        <ThemeProvider theme={theme(quiz?quiz.userTheme:{})}>\n        <Grid container spacing={3}>\n            <Grid item xs style={{margin:'auto'}}>\n\n                <div className={classnames(\n                    classes.main,\n                    (showResult?'showResult':'')\n                )}>\n                    <Transition/>\n                    {quiz &&\n                        <>\n                        <Quiz\n                            key={quiz.id}\n                        />\n                        {quiz.childNodes.map( (node,i) => {\n                            if(node.type === jContent.cnd_type.QNA)\n                                return <Qna\n                                    key={node.id}\n                                    id={node.id}\n                                />\n\n                            if(node.type === jContent.cnd_type.WARMUP)\n                                return <Warmup\n                                    key={node.id}\n                                    id={node.id}\n                                />\n                            return <Typography color=\"error\"\n                                               component=\"p\">\n                                node type {node.type} is not supported\n                            </Typography>\n\n                        })\n                        }\n                        {displayScore()}\n\n                        </>\n                    }\n                </div>\n            </Grid>\n        </Grid>\n        </ThemeProvider>\n    );\n};\n\nApp.propTypes={}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport get from \"lodash.get\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( error =>{\n                    const additionalProperty = get(error,\"params.additionalProperty\");\n                    return  <li key={`${error.keyword}_${additionalProperty}`}>\n                        {error.message}<b>{additionalProperty ? `: ${additionalProperty}`:\"\"}</b>\n                    </li>})\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const validMark=\"[*]\";\nconst score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\nconst cnd_type = {\n    QNA:\"game4nt:qna\",\n    WARMUP:\"game4nt:warmup\",\n    WIDEN_IMAGE:\"wdennt:image\",\n    WIDEN_VIDEO:\"wdennt:video\",\n    EXT_VIDEO:'ext:video',\n    JNT_FILE:'jnt:file',\n    IMAGE:'jmix:image'\n}\nconst consent_status={\n    GRANTED:\"GRANTED\",\n    DENIED:\"DENIED\",\n    REVOKED:\"REVOKED\"\n};\nconst mktgForm={\n    MARKETO:\"mkto\",\n}\n\nexport {\n    workspace,\n    cnd_type,\n    validMark,\n    consent_status,\n    score_splitPattern,\n    mktgForm\n}","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nconst context = {\n    title:\"context validation schema \",\n    description:\"context is an object provided by the page in charge to load the app\",\n    // definitions: {\n    //     jContent:jContent,\n    //     jCustomer:jCustomer,\n    //     gql:gql\n    // },\n    type:\"object\",\n    // properties:{\n    //     jContent:{$ref:\"#jContent\"},\n    //     gql:{$ref:\"#gql\"},\n    //     jCustomer:{$ref:\"#jCustomer\"}\n    // },\n    properties:{\n        host:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n        },\n        workspace:{\n            type:\"string\",\n            enum:workspace,\n            default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n        },\n        scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n        files_endpoint:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n        },\n        gql_endpoint:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n        },\n        gql_authorization:{\n            type:\"string\",\n            // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n        },\n        gql_variables:{\n            type:\"object\",\n            properties:{\n                id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n                language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n            },\n            required: [\"id\", \"language\"]\n        },\n        cdp_endpoint:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n        },\n    },\n    required: [\n        \"host\",\n        \"workspace\",\n        \"scope\",\n        \"files_endpoint\",\n        \"gql_endpoint\",\n        \"gql_authorization\",\n        \"gql_variables\",\n        \"cdp_endpoint\"\n    ],\n    additionalProperties:false\n};\nexport default context;\n\n// export default{\n//     context:{\n//         title:\"context validation schema \",\n//         description:\"context is an object provided by the page in charge to load the app\",\n//         // definitions: {\n//         //     jContent:jContent,\n//         //     jCustomer:jCustomer,\n//         //     gql:gql\n//         // },\n//         type:\"object\",\n//         // properties:{\n//         //     jContent:{$ref:\"#jContent\"},\n//         //     gql:{$ref:\"#gql\"},\n//         //     jCustomer:{$ref:\"#jCustomer\"}\n//         // },\n//         properties:{\n//             host:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n//             },\n//             workspace:{\n//                 type:\"string\",\n//                 enum:workspace,\n//                 default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n//             },\n//             scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n//             files_endpoint:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n//             },\n//             gql_endpoint:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n//             },\n//             gql_authorization:{\n//                 type:\"string\",\n//                 // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n//             },\n//             gql_variables:{\n//                 type:\"object\",\n//                 properties:{\n//                     id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n//                     language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n//                 },\n//                 required: [\"id\", \"language\"]\n//             },\n//             cdp_endpoint:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n//             },\n//         },\n//         required: [\n//             \"host\",\n//             \"workspace\",\n//             \"scope\",\n//             \"files_endpoint\",\n//             \"gql_endpoint\",\n//             \"gql_authorization\",\n//             \"gql_variables\",\n//             \"cdp_endpoint\",\n//         ],\n//         additionalProperties:false\n//     }\n// }","class ContextException extends Error {\n    constructor({message, errors}) {\n        // Calling parent constructor of base Error class.\n        super(message);\n        // Saving class name in the property of our custom error as a shortcut.\n        this.name = this.constructor.name;\n        // Capturing stack trace, excluding constructor call from it.\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n\n        this.errors = errors;\n    }\n}\n\nexport {\n    ContextException\n};\n","import * as Ajv from \"ajv\";\nimport contextSchema from \"douane/lib/schema/context\";\nimport {getGQLWorkspace} from \"misc/utils\";\nimport {ContextException} from 'exceptions/ContextException';\nimport {cnd_type,validMark,consent_status,score_splitPattern,mktgForm} from \"douane/lib/config\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(contextSchema, context);\n    if (!valid) {\n        throw new ContextException({\n            message: 'Context configuration object',\n            errors: ajv.errors\n        });\n    }\n\n    context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    context.cnd_type=cnd_type;\n    context.consent_status=consent_status;\n    context.quiz_validMark=validMark;\n    context.score_splitPattern=score_splitPattern;\n    context.mktgForm=mktgForm;\n    return context;\n}\n\nexport {\n    contextValidator\n}","import get from \"lodash.get\";\n\nconst getTheme = (theme)=>{\n    if(typeof theme === 'string'){\n        try{\n            return JSON.parse(theme);\n        }catch(e){\n            console.error(\"the user theme => \\n\"+theme+\"\\n => is not a json object : \",e);\n        }\n    };\n    return theme;\n}\n\nconst getMktoConfig = (config)=>{\n    if(!config)\n        return;\n\n    if(typeof config === 'string'){\n        try{\n            return JSON.parse(config);\n        }catch(e){\n            console.error(\"the marketo config => \\n\"+config+\"\\n => is not a json object : \",e);\n        }\n    };\n}\n\n\nconst QuizMapper = (quizData) => ({\n    //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n    id: get(quizData, \"id\"),\n    type: get(quizData, \"type.value\"),\n    key : get(quizData, \"key.value\", {}),\n    title: get(quizData, \"title\", \"\"),\n    subtitle: get(quizData, \"subtitle.value\", \"\"),\n    description: get(quizData, \"description.value\", \"\"),\n    duration: get(quizData, \"duration.value\", \"\"),\n    userTheme: getTheme(get(quizData, \"userTheme.value\", {})),\n    transitionIsEnabled: JSON.parse(get(quizData, \"transition.value\", false)),\n    transitionLabel: get(quizData, \"transitionLabel.value\", \"\"),\n    resetIsEnabled: JSON.parse(get(quizData, \"reset.value\", false)),\n    browsingIsEnabled: JSON.parse(get(quizData, \"browsing.value\", false)),\n    //cover: get(quizData, \"cover.node.path\", \"\"),\n    media: get(quizData, \"media.node\", {}),\n    mktgForm: get(quizData, \"mktgForm.value\"),\n    mktoConfig: getMktoConfig(get(quizData, \"mktoConfig.value\")),\n    consents: get(quizData, \"consents.nodes\", []).map(node =>{\n        return {\n            id:get(node,\"id\"),\n            actived:JSON.parse(get(node,\"actived.value\"))\n        }\n    }),\n    personalizedResult :{\n        id:get(quizData, \"personalizedResult.node.id\", null),\n        type:get(quizData, \"personalizedResult.node.type.value\", null)\n    },\n    childNodes : get(quizData,\"children.nodes\",[]).map(node =>{\n        return {\n            id: get(node, \"id\"),\n            type: get(node, \"type.value\")\n        };\n    }),\n})\nexport default QuizMapper;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nimport {getRandomString} from \"misc/utils\";\nimport {syncQuizScore} from \"misc/wemAPI\";\nimport QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = jContent => {\n    // console.log(\"jContent.transition : \",jContent.transition);\n    return {\n        jContent,\n        quiz: null,//{consents:[],childNodes:[]},\n        resultSet:[],//array of boolean, order is the same a slideSet\n        currentResult:false,//previously result\n        slideSet:[],//previously slideIndex\n        currentSlide:null,//previously index\n        showResult:false,\n        showNext:false,\n        showScore:false,\n        max:-1,\n        score:0,\n        wem:null,\n        // cxs:null,\n        reset:false,\n        resetBtnIsEnabled:false,//jContent.reset,\n        transitionActive:false,\n        transitionIsEnabled:false,//jContent.transition,\n        transitionLabel:\"jahia\",\n        transitionTimeout:1000,\n        transitionRow : [...Array(5)],\n        browsingIsEnabled:false,\n        scoreIndex:getRandomString(5,\"#aA\")\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    const showNext = ({slideSet,max,slide}) =>\n        slideSet.indexOf(slide) < max;\n\n    const getScore = ({wem,resultSet,quizKey}) =>{\n        const goodAnswers = resultSet.filter(result => result).length;\n        const answers = resultSet.length;\n        const score = Math.floor((goodAnswers/answers)*100);\n\n        syncQuizScore({\n            wem,\n            quizKey,//:state.quiz.key,\n            quizScore:score\n        });\n\n        return score;\n    }\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            //prepare slideIds\n            const {quizData} = payload;\n            console.debug(\"[STORE] DATA_READY - quizData: \",quizData);\n            const quiz = QuizMapper(quizData);\n\n            const slideSet = [quiz.id];\n            quiz.childNodes.forEach(node => slideSet.push(node.id));\n            slideSet.push(state.scoreIndex);\n\n            const max = slideSet.length -1;\n\n            return {\n                ...state,\n                quiz,\n                currentSlide:quiz.id,\n                transitionIsEnabled:quiz.transitionIsEnabled,\n                transitionLabel:quiz.transitionLabel,\n                resetBtnIsEnabled:quiz.resetIsEnabled,\n                browsingIsEnabled:quiz.browsingIsEnabled,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:quiz.id}),\n                max\n            };\n        }\n        case \"ADD_WEM\": {\n            const wem = payload.wem;\n            console.debug(\"[STORE] ADD_WEM - wem: \",wem);\n            return {\n                ...state,\n                wem\n            };\n        }\n        // case \"ADD_CXS\": {\n        //     const cxs = payload.cxs;\n        //     console.debug(\"[STORE] ADD_CXS - cxs: \",cxs);\n        //     return {\n        //         ...state,\n        //         cxs\n        //     };\n        // }\n        case \"ADD_SLIDES\": {\n            const slides = payload.slides;\n            const parentSlide = payload.parentSlide;\n            let slideSet = state.slideSet;\n\n            if (parentSlide && slideSet.includes(parentSlide)) {\n                const position = slideSet.indexOf(parentSlide) + 1;\n                slideSet.splice(position, 0, ...slides);\n            } else {\n                slideSet = [...slideSet, ...slides];\n            }\n\n            const max = slideSet.length -1;\n\n            console.debug(\"[STORE] ADD_SLIDE - slides: \",slides,\" parentSlide: \",parentSlide);\n            return {\n                ...state,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:state.currentSlide}),\n                max\n            };\n        }\n        case \"NEXT_SLIDE\":{\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            console.debug(\"[STORE] NEXT_SLIDE - currentIndex: \",currentIndex,\", max : \",state.max);\n\n            let nextSlide = state.currentSlide;\n\n            if(currentIndex  < state.max )\n                nextSlide = state.slideSet[nextIndex];\n\n            // const showScore = nextIndex === state.max-1;\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showResult:false,\n                // showScore,\n                // score,\n                reset:false,\n            };\n        }\n        case \"SHOW_SCORE\": {\n            console.debug(\"[STORE] SHOW_SCORE\");\n            const [slide] = state.slideSet.slice(-1);\n            const {quiz,wem} = state;\n            let {score} = state;\n\n            if(!quiz.personalizedResult || !quiz.personalizedResult.id)\n                score = getScore({\n                    wem,\n                    resultSet:state.resultSet,\n                    quizKey:state.quiz.key,\n                    // split:state.jContent.score_splitPattern\n                });\n\n            // const goodAnswers = state.resultSet.filter(result => result).length;\n            // const answers = state.resultSet.length;\n            // const score = Math.floor((goodAnswers/answers)*100);\n            //\n            // syncQuizScore({\n            //     quizKey:state.quiz.key,\n            //     split:state.jContent.score_splitPattern,\n            //     quizScore:score\n            // });\n\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide}),\n                showResult:false,\n                score\n            };\n        }\n        case \"SHOW_SLIDE\": {\n            const slide = payload.slide\n            console.debug(\"[STORE] SHOW_SLIDE - slide: \",slide);\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide})\n            };\n        }\n        case \"SHOW_RESULT\": {\n            const {result:currentResult,skipScore} = payload;\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            const showScore = nextIndex === state.max;\n\n            console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n\n            const resultSet = [...state.resultSet, currentResult];\n            const {quiz,wem} = state;\n            let {score,currentSlide:nextSlide} = state;\n\n            if(skipScore) {\n                if(showScore){\n                    if(!quiz.personalizedResult || !quiz.personalizedResult.id)\n                            score = getScore({\n                                wem,\n                                resultSet: resultSet,\n                                quizKey: state.quiz.key,\n                                // split: state.jContent.score_splitPattern\n                            });\n                    [nextSlide] = state.slideSet.slice(-1);\n                }else{\n                    nextSlide=state.slideSet[nextIndex]\n                }\n            }\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showScore,\n                resultSet,\n                currentResult,\n                score,\n                showResult: !skipScore\n            };\n        }\n        // case \"SHOW_RESULT\": {\n        //     const currentResult = payload.result;\n        //     const currentIndex = state.slideSet.indexOf(state.currentSlide);\n        //     const showScore = currentIndex === state.max-1;\n        //     console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n        //\n        //     return {\n        //         ...state,\n        //         showScore,\n        //         resultSet: [...state.resultSet, currentResult],\n        //         currentResult,\n        //         showResult: true\n        //     };\n        // }\n        case \"RESET\": {\n            console.debug(\"[STORE] RESET\");\n\n            const [currentSlide] = state.slideSet.slice(0,1);\n            console.debug(\"[STORE] RESET slideSet\",state.slideSet);\n\n            return {\n                ...state,\n                currentSlide,\n                resultSet:[],\n                showScore:false,\n                currentResult:false,\n                reset:true\n            }\n        }\n        case \"TOGGLE_TRANSITION\": {\n            console.debug(\"[STORE] TOGGLE_TRANSITION\");\n            return {\n                ...state,\n                transitionActive:!state.transitionActive\n            }\n        }\n        default:\n            throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.jContent,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport AjvError from \"components/Error/Ajv\";\n\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport {StylesProvider, createGenerateClassName} from '@material-ui/core/styles';\nimport {getRandomString} from 'misc/utils';\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport {contextValidator} from \"douane\";\nimport {Store} from \"store\";\n\nimport 'index.css';\n\n\n\nconst render=(target,context)=>{\n  try{\n    // console.log(\"context : \",JSON.stringify(context));\n    context = contextValidator(context);\n    const headers={};\n    if(context.gql_authorization)\n      headers.Authorization=context.gql_authorization;\n\n    const client = new ApolloClient({\n      uri:context.gql_endpoint,\n      headers\n    })\n\n    const generateClassName = createGenerateClassName({\n      // disableGlobal:true,\n      seed: getRandomString(8, 'aA')\n    });\n\n    // console.log(\"context.theme : \",context.theme);\n    // console.log(\"typeof context.theme : \",typeof context.theme);\n    ReactDOM.render(\n      <StylesProvider generateClassName={generateClassName}>\n        <Store jContent={context}>\n          <ApolloProvider client={client}>\n            {/*<ThemeProvider theme={theme(context.theme)}>*/}\n            <div style={{overflow:'hidden'}}>\n              <App />\n            </div>\n\n            {/*</ThemeProvider>*/}\n          </ApolloProvider>\n        </Store>\n      </StylesProvider>,\n      document.getElementById(target)\n    );\n\n  }catch(e){\n    console.error(\"error : \",e);\n    //Note: create a generic error handler\n    ReactDOM.render(\n      <AjvError\n        item={e.message}\n        errors={e.errors}\n      />,\n      document.getElementById(target)\n    );\n  }\n}\n\nwindow.quizUIApp = render;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}