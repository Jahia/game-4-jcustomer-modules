{"version":3,"sources":["contexts/index.js","components/Quiz/QuizGraphQL.js","components/Consent/ConsentGraphQL.js","misc/tracker.js","components/Consent/Consent.jsx","components/Media/components/Image.jsx","components/VideoPlayer/VideoPlayer.jsx","components/Media/components/Video.jsx","components/Media/components/widen/WidenMediaGraphQL.js","components/Media/components/widen/WidenMediaModel.js","components/Media/components/widen/WidenImage.jsx","components/Media/components/widen/WidenVideo.jsx","components/Media/Media.jsx","components/cssSharedClasses.jsx","components/Header/Indicator/Indicator.jsx","components/Header/Header.jsx","components/Quiz/Quiz.jsx","components/Qna/QnaGraphQL.js","components/Qna/Answer/Answer.jsx","misc/utils.js","components/Qna/QnaModel.js","components/Qna/Qna.jsx","components/Warmup/WarmupGraphQL.js","components/Warmup/Warmup.jsx","components/Warmup/WarmupModel.js","components/Score/personalized/PersonalizedGraphQL.js","components/Score/personalized/Personalized.jsx","components/Score/percentage/Percentage.jsx","components/Score/Score.jsx","components/theme.js","components/App.jsx","components/Error/Ajv.jsx","misc/serviceWorker.js","douane/lib/config.js","douane/lib/schema/index.js","douane/index.js","components/Store/Store.jsx","components/Quiz/QuizModel.js","index.js"],"names":["StoreContext","React","createContext","GET_QUIZ","gql","GET_CONSENT","syncConsentStatus","typeIdentifier","scope","status","statusDate","Date","revokeDate","setFullYear","getFullYear","console","debug","uTracker","track","consent","toISOString","useStyles","makeStyles","theme","granted","display","flexWrap","alignItems","margin","marginRight","flexBasis","fontSize","denied","cursor","color","palette","error","main","width","marginLeft","Consent","props","classes","id","quizState","quizDispatch","consents","filter","state","useContext","jContent","cxs","gql_variables","consent_status","variables","Object","assign","useQuery","loading","data","useEffect","consentData","get","case","payload","FormGroup","aria-label","row","FormControlLabel","value","checked","control","Checkbox","label","title","labelPlacement","onChange","e","target","Typography","className","style","component","description","onClick","identifier","DENIED","handleDenied","Image","path","alt","files_endpoint","src","encodeURI","playerWrapper","VideoPlayer","ownerID","videoURL","quiz","player","useRef","handleVideoStatus","content","parent","type","game4Quiz","game4Warmup","game4Video","duration","current","getDuration","currentTime","getCurrentTime","syncVideoStatus","ref","url","controls","height","onStart","onPlay","onPause","onEnded","Video","GET_WIDEN_MEDIA","mediaData","imageURL","WidenImage","uuid","useState","media","setMedia","MediaMapper","replace","WidenVideo","Media","mixins","sourceID","cnd_type","WIDEN_IMAGE","WIDEN_VIDEO","EXT_VIDEO","JNT_FILE","includes","IMAGE","textUppercase","textTransform","subtitle","backgroundColor","primary","spacing","marginTop","item","minHeight","geometry","backfaceVisibility","objectFit","position","zIndex","flexDirection","showOverlay","top","right","bottom","left","background","overlay","boxShadow","shadows","caption","flexGrow","paddingRight","padding","paddingLeft","paddingBottom","textAlign","indicator","boxSizing","flex","spacer","textIndent","common","white","backgroundClip","borderTop","hitAreaHeight","borderBottom","opacity","transition","transitions","create","long","easing","ease","grey","Indicator","dispatch","currentSlide","enabled","active","classnames","slide","header","justifyContent","headerIndicators","listStyle","marginBottom","headerResult","overflow","standard","result","headerText","fontWeight","typography","fontWeightBold","Header","slideSet","currentResult","showNext","showScore","handleNextSlide","handleShowScore","map","itemId","allow_indicator_browsing","language_bundle","variant","correctAnswer","wrongAnswer","Button","disabled","btnShowResults","btnNextQuestion","maxWidth","consentTitle","textDecoration","init","computeEnableStartBtn","workspace","length","reducer","action","consentPath","cxsConsentStatus","cxsConsentRevokeDate","GRANTED","now","parse","actived","JSON","enableStartBtn","Error","Quiz","sharedClasses","cssSharedClasses","useReducer","show","mixin","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","ADD_ATTR","forEach","btnStart","GET_QNA","answerGroup","checkedAnswer","borderRadius","checkGroup","easeOut","borderStyle","borderWidth","borderColor","verticalAlign","labelGroup","Answer","qna","qnaDispatch","answers","answer","isValid","isAnswer","notUsedForScore","inputType","Radio","getRandomString","format","mask","indexOf","i","Math","floor","random","qnaData","randomSelection","controlledAnswer","sort","a","b","question","help","jExpField2Map","questionGroup","formGroup","initialQNA","enableSubmit","QnaMapper","_answer","Qna","reset","getAnswers","reduce","test","values","index","cdpValue","propertyName","propertyValue","update","syncVisitorData","btnSubmit","GET_WARMUP","contentGroup","Warmup","childNodes","warmup","setWarmup","warmupData","video","videoLink","videoIntPath","node","WarmupMapper","slides","parentSlide","btnQuestion","GET_PERSONALIZED_RESULT","Personalized","setResult","profileId","sessionId","fetchPolicy","persoData","text","fill","fontFamily","stroke","Percentage","score","Score","scoreIndex","personalizedResult","btnReset","defaultTheme","light","dark","secondary","allVariants","join","h3","h4","body1","overrides","MuiCheckbox","root","MuiRadio","MuiButton","contained","MuiTypography","disableRipple","getTheme","userTheme","createMuiTheme","_merge","App","showResult","quizData","quizKey","bundle","key","initLanguageBundle","initialize","ready","window","syncTracker","cdp_endpoint","ThemeProvider","Grid","container","xs","QNA","WARMUP","displayScore","Ajv","errors","dataPath","message","Boolean","location","hostname","match","REVOKED","context","properties","host","default","process","enum","pattern","gql_endpoint","gql_authorization","language","required","additionalProperties","ajv","useDefaults","resultSet","max","QuizMapper","push","splice","currentIndex","nextIndex","nextSlide","slice","goodAnswers","split","quizScore","syncQuizScore","score_splitPattern","Store","Provider","children","quizUIApp","validate","schema","toUpperCase","getGQLWorkspace","quiz_validMark","contextValidator","headers","Authorization","client","ApolloClient","uri","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d6e3fd34.chunk.js","sourcesContent":["import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:cover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_QUIZ = gql`\n    query getQuiz($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            quiz: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                key: property(name:\"game4:quizKey\"){\n                    value\n                }\n                title: displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                description: property(language:$language,name:\"game4:description\"){\n                    value\n                }\n                duration: property(name:\"game4:duration\"){\n                    value\n                }\n                userTheme: property(name:\"game4:webappTheme\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                consents: property(name:\"game4:consentType\"){\n                    nodes: refNodes {\n                        id: uuid\n                        actived: property(language:$language,name:\"wem:activated\"){\n                            value\n                        }\n                    }\n                }\n                personalizedResult: property(name:\"game4:personalizedResultContent\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                },\n                btnStart: property(language:$language, name:\"game4:btnStart\"){\n                    value\n                },\n                btnSubmit: property(language:$language, name:\"game4:btnSubmit\"){\n                    value\n                },\n                btnQuestion: property(language:$language, name:\"game4:btnQuestion\"){\n                    value\n                },\n                btnNextQuestion: property(language:$language, name:\"game4:btnNextQuestion\"){\n                    value\n                },\n                btnShowResults: property(language:$language, name:\"game4:btnShowResults\"){\n                    value\n                },\n                btnReset: property(language:$language, name:\"game4:btnReset\"){\n                    value\n                },\n                consentTitle: property(language:$language, name:\"game4:consentTitle\"){\n                    value\n                },\n                correctAnswer: property(language:$language, name:\"game4:correctAnswer\"){\n                    value\n                },\n                wrongAnswer: property(language:$language, name:\"game4:wrongAnswer\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import {gql} from 'apollo-boost';\n\nexport const GET_CONSENT = gql`\n    query getConsent($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            consent: nodeById(uuid: $id) {\n                id: uuid\n                identifier:name\n                title:displayName(language:$language)\n                description: property(language:$language, name:\"jcr:description\"){\n                    value\n                }\n                actived: property(language:$language,name:\"wem:activated\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import uTracker from \"unomi-analytics\";\n\nconst syncTracker = ({scope,url,sessionId,dispatch}) => {\n    uTracker.initialize({\n        \"Apache Unomi\": {\n            scope,\n            url,\n            sessionId\n        }\n    });\n    uTracker.ready( () =>\n        dispatch({\n            case:\"ADD_CXS\",\n            payload:{\n                cxs:window.cxs\n            }\n        })\n    );\n};\n\nconst syncConsentStatus= ({typeIdentifier,scope,status}) => {\n    const statusDate = new Date();\n    const revokeDate = new Date(statusDate);\n    revokeDate.setFullYear(revokeDate.getFullYear() + 2);\n    console.debug(\"syncConsentStatus status :\", status);\n\n    uTracker.track(\"modifyConsent\", {\n        consent: {\n            typeIdentifier,\n            scope,\n            status,\n            statusDate: statusDate.toISOString(),//\"2018-05-22T09:27:09.473Z\",\n            revokeDate: revokeDate.toISOString()//\"2020-05-21T09:27:09.473Z\"\n        }\n    });\n};\n\nconst syncQuizScore = ({quizKey,split,quizScore}) =>\n    uTracker.track(\"setQuizScore\",{\n        score:`${quizKey}${split}${quizScore}`\n    });\n\nconst syncVideoStatus = ({content,parent,status,player}) =>\n    uTracker.track(\"video\",{\n        id:content.id,\n        type:content.type,\n        game4Quiz:{\n            id:content.id,\n            type:content.type\n        },\n        game4Warmup:{\n            id:parent\n        },\n        game4Video:{\n            duration: player.current.getDuration(),\n            currentTime: player.current.getCurrentTime(),\n            status: status\n        }\n    });\n\nconst syncVisitorData = ({propertyName,propertyValue}) =>\n    uTracker.track(\"updateVisitorData\",{\n        update : {\n            propertyName,\n            propertyValue\n        }\n    });\n\nexport {\n    syncTracker,\n    syncConsentStatus,\n    syncQuizScore,\n    syncVideoStatus,\n    syncVisitorData\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_CONSENT} from \"components/Consent/ConsentGraphQL\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport {StoreContext} from \"contexts\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport {Typography,FormGroup,FormControlLabel,Checkbox} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    granted:{\n        display:\"flex\",\n        flexWrap:\"wrap\",\n        alignItems: 'center',\n        margin:0,\n        \"& svg\":{\n            marginRight: '.5rem',\n        },\n        \"& i\":{\n            flexBasis: '100%',\n            fontSize: '.85rem',\n        }\n    },\n    denied:{\n        cursor: 'pointer',\n        color: theme.palette.error.main,\n        width: '1rem',\n        marginLeft:'.5rem',\n    }\n}));\n\nconst Consent = (props)=> {\n    const classes = useStyles(props);\n\n    const {id, quizState, quizDispatch} = props;\n    const [consent={}] = quizState.consents.filter(consent => consent.id === id);\n\n    const { state } = React.useContext(StoreContext);\n\n    const {jContent,cxs} = state;\n    const {gql_variables,scope,consent_status} =  jContent;\n\n    const variables = Object.assign(gql_variables,{id})\n    const {loading, error, data} = useQuery(GET_CONSENT, {\n        variables:variables,\n    });\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const consentData = get(data, \"response.consent\", {});\n            quizDispatch({\n                case:\"DATA_READY_CONSENT\",\n                payload:{\n                    consentData,\n                    scope,\n                    cxs,\n                    consent_status\n                }\n            })\n        }\n\n    }, [loading,data]);\n\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.debug(\"*** paint consent : \",id);\n\n    const handleDenied = (consent) => {\n        syncConsentStatus({\n            scope,\n            typeIdentifier:consent.identifier,\n            status:consent_status.DENIED\n        });\n\n        quizDispatch({\n            case:\"DENIED_CONSENT\",\n            payload:{\n                id:consent.id\n            }\n        });\n    }\n\n    const handleChange= (e) => {\n        quizDispatch({\n            case:\"TOGGLE_CONSENT\",\n            payload:{\n                id:e.target.id\n            }\n        });\n    }\n    return(\n        <li>\n            {!consent.granted &&\n            <div>\n                <FormGroup aria-label=\"position\" row>\n                    <FormControlLabel\n                        value={consent.checked}\n                        control={<Checkbox id={consent.id} />}\n                        label={consent.title}\n                        labelPlacement=\"end\"\n                        onChange={handleChange}\n                    />\n                </FormGroup>\n                <Typography className={classes.granted}\n                            style={{fontSize: '.85rem'}}\n                            component=\"i\">\n                    {consent.description}\n                </Typography>\n            </div>\n            }\n            {consent.granted &&\n                <Typography className={classes.granted}\n                            component=\"p\">\n                    <CheckIcon />\n                    {consent.title}\n                    <BackspaceIcon className={classes.denied}\n                                   onClick={()=> handleDenied(consent)} />\n                    <i>{consent.description}</i>\n                </Typography>\n            }\n        </li>\n    )\n\n    // return(\n    //     <li>\n    //         {!consent.granted &&\n    //             <div className=\"consent-to-grant\">\n    //                 <Form.Check\n    //                     custom\n    //                     type=\"checkbox\"\n    //                     name={consent.identifier}\n    //                     id={consent.id}\n    //                     label={consent.title}\n    //                     onChange={handleChange}\n    //                     checked={consent.checked}\n    //                 />\n    //                 <i>{consent.description}</i>\n    //             </div>\n    //         }\n    //         {consent.granted &&\n    //             <p className=\"consent-granted\">\n    //\n    //                 <FontAwesomeIcon icon={['fas','check']}/>\n    //                 {consent.title}\n    //                 <FontAwesomeIcon className=\"consent-denied\" icon={['fas','ban']} onClick={()=> handleDenied(consent)}/>\n    //                 <i>{consent.description}</i>\n    //             </p>\n    //         }\n    //     </li>\n    // )\n}\n\nConsent.propTypes={\n    id:PropTypes.string.isRequired,\n    quizState:PropTypes.object.isRequired,\n    quizDispatch:PropTypes.func.isRequired\n};\n\nexport default Consent;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nconst Image = ({path,alt}) =>{\n    const { state} = React.useContext(StoreContext);\n    const {files_endpoint} = state.jContent;\n    return(\n        <img className=\"d-block w-100\"\n             src={`${files_endpoint}${encodeURI(path)}`}\n             alt={alt}/>\n    )\n}\nexport default Image;","import React, {useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport ReactPlayer from \"react-player\";\nimport {syncVideoStatus} from \"misc/tracker\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    playerWrapper:{}\n}));\n\nconst VideoPlayer = (props)=>{\n    const classes = useStyles(props);\n    const {ownerID,videoURL} = props;\n    const { state } = React.useContext(StoreContext);\n    const {quiz} = state;\n\n    const player = useRef(null);\n\n    const handleVideoStatus = ({status}) => {\n        syncVideoStatus({\n            content:{\n                id:quiz.id,\n                type:quiz.type\n            },\n            parent:ownerID,\n            player,\n            status\n        })\n    }\n\n    // const onReadyHandler = () => {\n    //     console.log(\"onReady seekTo 4.2s\")\n    //     player.current.seekTo(4.2,\"seconds\");\n    // }\n    const onStartHandler = () => {\n        // player.current.seekTo(4.2,\"seconds\");\n    }\n    const onPlayHandler = () => handleVideoStatus({status:\"started\"});\n    const onEndedHandler = () => handleVideoStatus({status:\"end\"});\n    const onPauseHandler = () => handleVideoStatus({status:\"pause\"});\n\n    return (\n        <div className={classes.playerWrapper}>\n            <ReactPlayer\n                ref={player}\n                className='react-player'\n                url={videoURL}\n                controls\n                width='100%'\n                height='100%'\n                // onReady={onReadyHandler}\n                onStart={onStartHandler}\n                // onProgress={(object)=> console.log(\"onProgress : \",object)}\n                onPlay={onPlayHandler}\n                // onSeek={(seconds)=> console.log(\"onSeek : \",seconds)}\n                // onDuration={(seconds)=> console.log(\"onDuration :\",seconds)}\n                onPause={onPauseHandler}\n                onEnded={onEndedHandler}\n            />\n        </div>\n    )\n}\n\nVideoPlayer.propTypes={\n    videoURL:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired\n}\n\nexport default VideoPlayer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\nconst Video = ({url,ownerID}) =>{\n\n\n    return(\n        <VideoPlayer\n            videoURL={url}\n            ownerID={ownerID}\n        />\n    )\n}\nVideo.propTypes={\n    url:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default Video;","import {gql} from 'apollo-boost';\n\nexport const GET_WIDEN_MEDIA = gql`\n    query getWidenMedia($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            media: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                title:displayName(language:$language)\n                imageURL: property(name:\"wden:templatedUrl\"){\n                    value\n                }\n                videoURL: property(name:\"wden:videoStreamURL\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import get from \"lodash.get\";\n\nexport default function(mediaData) {\n// console.log(\"mediaData: \",mediaData);\n    return{\n        //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n        id: get(mediaData, \"id\"),\n        type: get(mediaData, \"type.value\"),\n        imageURL: get(mediaData, \"imageURL.value\"),\n        videoURL: get(mediaData, \"videoURL.value\")\n    }\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\n\n\nconst WidenImage = ({uuid}) => {\n    const _SIZE_ = '{size}';\n    const _SCALE_ = '{scale}';\n    const _QUALITY_ = '{quality}';\n    const width = '1024';\n    const scale = '1';\n    const quality = '72';\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            media.imageURL=media.imageURL\n                .replace(_SIZE_,width)\n                .replace(_SCALE_,scale)\n                .replace(_QUALITY_,quality);\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <img src={`https://via.placeholder.com/${width}x768/09f/fff?text=Loading`} alt=\"loading\"/>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media &&\n            <img className=\"d-block w-100\"\n             src={media.imageURL}\n             alt={media.title}/>\n        }\n        </>\n    )\n}\n\nWidenImage.propTypes={\n    uuid:PropTypes.string.isRequired\n}\n\nexport default WidenImage;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\n\nconst WidenVideo = ({uuid, ownerID}) => {\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media.videoURL &&\n            <VideoPlayer\n                videoURL={media.videoURL}\n                ownerID={ownerID}\n            />\n        }\n        </>\n    )\n}\n\nWidenVideo.propTypes={\n    uuid:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default WidenVideo;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport Image from './components/Image';\nimport Video from './components/Video';\nimport WidenImage from './components/widen/WidenImage';\nimport WidenVideo from './components/widen/WidenVideo';\n\nconst Media = ({id,type,mixins,path,sourceID,alt}) => {\n    const { state } = React.useContext(StoreContext);\n    const {cnd_type,files_endpoint} = state.jContent;\n\n    // console.log(\"Media equals: \",type === cnd_type.WIDEN_IMAGE)\n    let component;\n    switch(type){\n        case cnd_type.WIDEN_IMAGE :\n            component = <WidenImage uuid={id} />\n            break;\n\n        case cnd_type.WIDEN_VIDEO :\n            component = <WidenVideo uuid={id} ownerID={sourceID} />\n            break;\n\n        case cnd_type.EXT_VIDEO:\n            component = <Video url={path} ownerID={sourceID} />\n            break;\n            \n        case cnd_type.JNT_FILE:\n            if(mixins.includes(cnd_type.IMAGE)){\n                component = <Image path={path} alt={alt}/>\n            }else{\n                component = <Video url={files_endpoint+encodeURI(path)} ownerID={sourceID} />\n            }\n            break;\n            \n        default:\n            component = <Image path={path} alt={alt}/>\n            break;\n    }\n    // console.log(\"Media component: \",component)\n    return(component)\n}\n\nMedia.propTypes={\n    id:PropTypes.string,\n    type:PropTypes.string.isRequired,\n    mixins:PropTypes.array.isRequired,\n    path:PropTypes.string,\n    sourceID:PropTypes.string,\n    alt:PropTypes.string\n}\n\nexport default Media;","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme)=> ({\n    textUppercase: {\n        textTransform: \"uppercase\"\n    },\n    subtitle: {\n        //, &::after\n        \"&::before\":{\n            backgroundColor:theme.palette.primary.main,\n            display: 'block',\n            width:`${theme.spacing(3)}px`,\n            height: `${theme.spacing(.25)}px`,\n            content:'\"\"',\n            margin: \"auto\",\n            marginTop: `${theme.spacing(1)}px`,\n        },\n    },\n    item:{\n        //TODO manage transition\n\n        // position: 'absolute',\n        // right:'-105%',\n        // transform: 'translateX(-100%)',\n        // visibility:'hidden',\n        // opacity:0,\n        display: 'none',\n        minHeight:theme.geometry.item.minHeight,//'700px',\n        // float: 'left',\n        width: '100%',\n        // marginRight: '-100%',\n        backfaceVisibility: 'hidden',\n        // transition:theme.transitions.create(['opacity','visibility'],{\n        //     // duration: theme.transitions.duration.long,\n        //     easing: theme.transitions.easing.easeInOut,\n        // }),\n        \"& img\":{\n            objectFit: 'cover',\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            zIndex: -1,\n        },\n        \"&.active\":{\n            // display:'block'\n            // right:0,\n            // visibility:'visible',\n            // opacity:1,\n            // transform: 'translateX(0%)',\n            display:'flex',\n            flexWrap:'wrap',\n            flexDirection:'column',\n        }\n    },\n    showOverlay:{\n        \"&::before\":{\n            position:'absolute',\n            top:0, right:0, bottom:0, left:0,\n            content:'\"\"',\n            backgroundColor: theme.palette.background.overlay,\n            // TODO works see better choice\n            boxShadow: theme.palette.shadows.overlay,\n\n        }\n    },\n    caption:{\n        flexGrow:2,\n        paddingRight:theme.geometry.caption.padding,\n        paddingLeft:theme.geometry.caption.padding,\n        paddingBottom:theme.geometry.caption.padding,\n        zIndex: 10,\n        textAlign: 'center',\n\n        \".showResult &\": {\n            \"& button\":{\n                display:'none',\n            }\n        }\n    },\n}));","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    indicator: {\n        boxSizing: 'content-box !important',\n        flex: '0 1 auto',\n        width: theme.geometry.indicator.width,\n        height: theme.geometry.indicator.height,\n        marginRight: theme.geometry.indicator.spacer,\n        marginLeft: theme.geometry.indicator.spacer,\n        textIndent: '-999px',\n\n        backgroundColor: theme.palette.common.white,\n        backgroundClip: 'padding-box',\n        // Use transparent borders to increase the hit area by 10px on top and bottom.\n        borderTop: `${theme.geometry.indicator.hitAreaHeight} solid transparent`,\n        borderBottom: `${theme.geometry.indicator.hitAreaHeight} solid transparent`,\n        opacity: '.5',\n        transition:theme.transitions.create(['opacity'],{\n            duration: theme.transitions.duration.long,\n            easing: theme.transitions.easing.ease,\n        }),\n        \".showResult &\": {\n            backgroundColor:theme.palette.grey[900],\n        },\n        \"&.clickable\":{\n            cursor: 'pointer',\n        },\n        \"&.active\": {\n            opacity: 1\n        }\n    }\n}));\n\nconst Indicator = (props) =>{\n    const classes = useStyles(props);\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {currentSlide} = state;\n    const {id,enabled} = props;\n\n    const active = currentSlide === id;\n    const handleCLick = () =>{\n        if(enabled)\n            dispatch({\n                case:\"SHOW_SLIDE\",\n                payload:{\n                    slide:id\n                }\n            });\n    };\n\n    return(\n        <li className={classnames(\n            classes.indicator,\n            (active ? 'active':''),\n            (enabled ? 'clickable':'')\n        )}\n            onClick={handleCLick}>\n        </li>\n    )\n}\n\nIndicator.propTypes={\n    id:PropTypes.string.isRequired,\n    enabled:PropTypes.bool.isRequired\n}\n\nexport default Indicator;","import Indicator from \"components/Header/Indicator\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    header:{\n        zIndex: 2,\n        display: 'flex',\n        flexDirection:'column',\n        justifyContent: 'center',\n        padding: `${theme.spacing(2)}px ${theme.geometry.caption.padding}`,\n        '.showResult &':{\n            backgroundColor: theme.palette.grey['300'],\n        }\n    },\n    headerIndicators: {\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex:1,\n        listStyle: 'none',\n        padding:0,\n        marginTop:0,\n        marginBottom: `${theme.spacing(2)}px`,\n        '.showResult &':{\n            marginBottom:0,\n        }\n    },\n    headerResult:{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        height: 0,\n        width:'100%',\n        overflow:\"hidden\",\n        transition:theme.transitions.create(['height'],{\n            duration: theme.transitions.duration.standard,//'10s',//\n            easing: theme.transitions.easing.header,\n        }),\n        \".showResult &\":{\n            height: theme.geometry.header.result.height,//'45px',//'auto',\n            marginBottom: `${theme.spacing(1)}px`\n\n        }\n    },\n    headerText:{\n        textTransform: 'capitalize',\n        fontWeight: theme.typography.fontWeightBold,\n        color: theme.palette.grey[700],\n    },\n}));\n\nconst Header = (props) => {\n    const classes = useStyles(props);\n    // const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        slideSet,\n        currentResult,\n        showNext,\n        showScore\n    } = state;\n\n    const handleNextSlide = () =>\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n\n    const handleShowScore = () =>\n        dispatch({\n            case:\"SHOW_SCORE\"\n        });\n\n    const getHeaderResultLabel=()=>{\n        if(currentResult)\n            return jContent.language_bundle.correctAnswer;\n        return jContent.language_bundle.wrongAnswer;\n    }\n\n    const getHeaderBtnNext=()=>{\n        if(showScore)\n            return  <Button onClick={handleShowScore}\n                            disabled={!showNext}>\n                {jContent.language_bundle.btnShowResults}\n            </Button>\n        return  <Button onClick={handleNextSlide}\n                        disabled={!showNext}>\n            {jContent.language_bundle.btnNextQuestion}\n        </Button>\n    }\n\n    return(\n        <div className={classes.header}>\n            <ol className={classes.headerIndicators}>\n                {slideSet.map( itemId =>\n                    <Indicator\n                        key={itemId}\n                        id={itemId}\n                        enabled={jContent.allow_indicator_browsing}\n                    />\n                )}\n            </ol>\n            {jContent.language_bundle &&\n            <div className={classes.headerResult}>\n                <Typography className={classes.headerText}\n                            variant=\"h4\">\n                    {getHeaderResultLabel()}\n                </Typography>\n\n                {getHeaderBtnNext()}\n            </div>\n            }\n        </div>\n    )\n};\nexport default Header;","import React from 'react';\n// import PropTypes from \"prop-types\";\n\nimport {Button,Typography} from \"@material-ui/core\";\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {StoreContext} from \"contexts\";\nimport Consent from \"components/Consent\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport Media from '../Media'\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"components/Header/Header\";\n\nconst useStyles = makeStyles(theme => ({\n    duration:{\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& svg': {\n            marginRight: '3px',\n        },\n        marginTop:`${theme.spacing(3)}px`,\n    },\n    description:{\n        // textAlign: 'left',\n        maxWidth:'500px',\n        margin:`${theme.spacing(4)}px auto`,\n\n    },\n    consent:{\n        // position: 'absolute',\n        // bottom: '.5rem',\n        // '--percentage':`calc(100% - ${theme.geometry.caption.width})`,\n        // right: 'calc(var(--percentage) / 2)',\n        // left: 'calc(var(--percentage) / 2)',\n        // paddingRight:theme.geometry.caption.padding,\n        // paddingLeft:theme.geometry.caption.padding,\n        paddingRight:`${theme.spacing(4)}px`,\n        paddingLeft:`${theme.spacing(4)}px`,\n        zIndex: 10,\n        \"& ul\":{\n            listStyle: 'none',\n            padding:0,\n        },\n        \"& li\":{\n            marginBottom: '.5rem'\n        }\n    },\n    consentTitle:{\n        textTransform:'capitalize',\n        textDecoration:'underline'\n    }\n}));\n\nconst init = variables =>{\n    return {\n        ...variables,\n        consents:[]//list of consent\n    }\n}\n\n\nconst computeEnableStartBtn = (state) => {\n    const {showNext,workspace,consents} = state;\n\n    if(showNext && workspace !== \"LIVE\")\n        return true;\n\n    const granted = consents.filter( consent => consent.checked || consent.granted );\n    return consents.length === granted.length;\n}\n\n\nfunction reducer(state, action) {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY_CONSENT\":{\n            let {consents} = state;\n            const {consentData,scope,cxs,consent_status} = payload;\n            console.debug(\"[QUIZ] DATA_READY_CONSENT -> consentData :\",consentData);\n\n            const identifier = get(consentData, \"identifier\");\n\n            //compute granted\n            const consentPath = `consents[\"${scope}/${identifier}\"]`;\n            const cxsConsentStatus = get(cxs,`${consentPath}.status`);\n            const cxsConsentRevokeDate = get(cxs,`${consentPath}.revokeDate`);\n            const granted = consent_status.GRANTED === cxsConsentStatus\n                && Date.now() < Date.parse(cxsConsentRevokeDate)\n\n            consents = [...consents,{\n                id : get(consentData, \"id\"),\n                title : get(consentData, \"title\"),\n                description : get(consentData, \"description.value\"),\n                actived : JSON.parse(get(consentData, \"actived.value\", false)),\n                checked : false,\n                identifier,\n                granted\n            }];\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        case \"DENIED_CONSENT\":{\n            const {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] DENIED_CONSENT -> id :\",id);\n\n            return{\n                ...state,\n                consents:consents.map( consent => {\n                    if( consent.id === id)\n                        return {\n                            ...consent,\n                            granted:false\n                        };\n                    return consent\n                }),\n                enableStartBtn:false\n            }\n        }\n        case \"TOGGLE_CONSENT\": {\n            let {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] TOGGLE_CONSENT -> id :\",id);\n\n            consents = consents.map(consent => {\n                if(consent.id === id)\n                    return {\n                        ...consent,\n                        checked:!consent.checked\n                    };\n                return consent\n            });\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        default:\n            throw new Error(`[QUIZ] action case '${action.case}' is unknown `);\n    }\n}\n\nconst Quiz = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n\n    const {quiz,showNext,currentSlide,jContent,cxs} = state;\n    const {consent_status,scope,gql_variables,language_bundle} = jContent;\n\n    const [quizState, quizDispatch] = React.useReducer(\n        reducer,\n        {\n            enableStartBtn: showNext && gql_variables.workspace !== \"LIVE\",\n            workspace:gql_variables.workspace,\n            showNext\n        },\n        init\n    );\n\n    console.debug(\"*** paint quiz : \",quiz.title);\n    const show = currentSlide === quiz.id;\n\n    const onClick = () => {\n        quizState.consents.forEach(consent=>{\n            //already granted nothing to do\n            if(consent.granted)\n                return;\n\n            syncConsentStatus({\n                scope,\n                typeIdentifier:consent.identifier,\n                status:consent_status.GRANTED\n            });\n        })\n\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n    };\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type.value}\n                   mixins={quiz.media.mixins.map(mixin=>mixin.value)}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n\n\n            <div className={sharedClasses.caption}>\n                <Typography className={sharedClasses.textUppercase}\n                            variant=\"h3\">\n                    {quiz.title}\n                </Typography>\n                <Typography className={sharedClasses.subtitle}\n                            color=\"primary\"\n                            variant=\"h4\">\n                    {quiz.subtitle}\n                </Typography>\n\n                <Typography component=\"div\"\n                            className={classes.duration}>\n                    <AccessTimeIcon />\n                    {quiz.duration}\n                </Typography>\n\n                <Typography component=\"div\"\n                            className={classes.description}\n                            dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(quiz.description, { ADD_ATTR: ['target'] })}}/>\n\n                <Button onClick={onClick}\n                        disabled={!quizState.enableStartBtn}>\n                    {language_bundle && language_bundle.btnStart}\n                </Button>\n            </div>\n            {\n                quiz.consents.length > 0 && cxs &&\n                <div className={classes.consent}>\n                    <Typography className={classes.consentTitle}\n                                variant=\"h5\">\n                        {language_bundle && language_bundle.consentTitle}\n                    </Typography>\n                    <ul>\n                        {\n                            quiz.consents.map( consent =>{\n                                if(consent.actived)\n                                    return <Consent\n                                        key={consent.id}\n                                        id={consent.id}\n                                        quizState={quizState}\n                                        quizDispatch={quizDispatch}\n                                    />\n                                return <></>\n                            })\n                        }\n                    </ul>\n                </div>\n            }\n        </div>\n    );\n\n\n    // return(\n    //     <div className={classnames(\n    //         sharedClasses.item,\n    //         sharedClasses.showOverlay,\n    //         (show ? 'active':'')\n    //     )}>\n    //         {quiz.media &&\n    //         <Media id={quiz.media.id}\n    //                type={quiz.media.type.value}\n    //                mixins={quiz.media.mixins.map(mixin=>mixin.value)}\n    //                path={quiz.media.path}\n    //                alt={quiz.title}\n    //         />\n    //         }\n    //\n    //         <div className={sharedClasses.caption}>\n    //             <Typography className={sharedClasses.textUppercase}\n    //                         variant=\"h3\">\n    //                 {quiz.title}\n    //             </Typography>\n    //             <Typography className={sharedClasses.subtitle}\n    //                         color=\"primary\"\n    //                         variant=\"h4\">\n    //                 {quiz.subtitle}\n    //             </Typography>\n    //\n    //             <Typography component=\"div\"\n    //                         className={classes.duration}>\n    //                 <AccessTimeIcon />\n    //                 {quiz.duration}\n    //             </Typography>\n    //\n    //             <Typography component=\"div\"\n    //                         className={classes.description}\n    //                         dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(quiz.description, { ADD_ATTR: ['target'] })}}/>\n    //\n    //             <Button onClick={onClick}\n    //                     disabled={!quizState.enableStartBtn}>\n    //                 {language_bundle && language_bundle.btnStart}\n    //             </Button>\n    //         </div>\n    //         {\n    //             quiz.consents.length > 0 && cxs &&\n    //             <div className={classes.consent}>\n    //                 <Typography className={classes.consentTitle}\n    //                             variant=\"h5\">\n    //                     {language_bundle && language_bundle.consentTitle}\n    //                 </Typography>\n    //                 <ul>\n    //                     {\n    //                         quiz.consents.map( consent =>{\n    //                             if(consent.actived)\n    //                                 return <Consent\n    //                                     key={consent.id}\n    //                                     id={consent.id}\n    //                                     quizState={quizState}\n    //                                     quizDispatch={quizDispatch}\n    //                                 />\n    //                             return <></>\n    //                         })\n    //                     }\n    //                 </ul>\n    //             </div>\n    //         }\n    //     </div>\n    // );\n\n}\n\n// Quiz.propTypes={}\n\nexport default Quiz;","import {gql} from 'apollo-boost';\n\n// const propsFragment = gql`\n//     fragment props on JCRNode{\n//         id:uuid\n//         key: property(language:$language, name:\"game4:quizKey\"){\n//             value\n//         }\n//         title:displayName(language:$language)\n//         subtitle: property(language:$language, name:\"game4:subtitle\"){\n//             value\n//         }\n//         description:property(language:$language,name:\"game4:description\"){\n//             value\n//         }\n//         duration:property(language:$language,name:\"game4:duration\"){\n//             value\n//         }\n//         cover: property(language:$language,name:\"game4:cover\"){\n//             node: refNode {\n//                 path\n//             }\n//         }\n//         consent: property(language:$language,name:\"game4:consentType\"){\n//             node: refNode {\n//                 uuid\n//             }\n//         }\n//         children{\n//             nodes {\n//                 id:uuid\n//                 type: primaryNodeType{\n//                     value:name\n//                 }\n//             }\n//         }\n//     }\n// `\n\nexport const GET_QNA = gql`\n    query getQna($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            qna: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                question: property(language:$language, name:\"game4:question\"){\n                    value\n                }\n                help: property(language:$language,name:\"game4:help\"){\n                    value\n                }\n                nbExpectedAnswer: property(name:\"game4:nbExpectedAnswer\"){\n                    value\n                }\n                answers: property(language:$language,name:\"game4:answers\"){\n                    values\n                }\n                randomSelection: property(name:\"game4:randomSelection\"){\n                    value\n                }\n                notUsedForScore: property(name:\"game4:notUsedForScore\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                jExpField2Map: property(name:\"game4:jExpProperty\"){\n                    value\n                }\n\n            }\n        }\n    }\n`\n// ${propsFragment}\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {Radio, Checkbox, FormControlLabel, FormGroup} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    answerGroup: {\n        display:\"flex\",\n        alignItems:\"center\",\n        flexWrap:'wrap',\n        \".showResult &\":{\n            \"&.checked\":{\n                backgroundColor: theme.palette.background.checkedAnswer,\n                borderRadius: theme.geometry.checkedAnswer.borderRadius,\n                \"& .MuiTypography-body1\":{\n                    color: theme.palette.grey[900],\n                },\n                \"& + div::before\":{\n                    borderTop: '2px solid transparent',\n                },\n                \"&:last-child\":{\n                        borderBottom: '2px solid transparent',\n                    },\n                \"::before\":{\n                        borderTop: '2px solid transparent',\n                }\n            }\n        }\n    },\n    checkGroup:{\n        position:\"relative\",\n        height: '28px',//'1.5rem',\n        padding: '2px 4px 2px 2px',//'.15rem .25rem .15rem .15rem',\n        marginLeft:\"-32px\",\n        opacity: 0,\n        // transform: none,\n        transition:theme.transitions.create(['opacity'],{\n            easing: theme.transitions.easing.easeOut,\n        }),\n        borderRadius: '5px 0px 0px 5px',\n        backgroundColor: theme.palette.grey[300],\n        zIndex: 1,\n        \".showResult &\":{\n            opacity: 1,\n        },\n        \"&::after\":{\n            content: '\"\"',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid',\n            borderWidth: '14px 0 14px 18px',//'.9rem 0 .9rem 1.15rem',\n            position: 'absolute',\n            top: 0,\n            // right:'-1.1rem',\n            left:'30px',//'1.9rem',\n            borderColor:  `transparent transparent transparent ${theme.palette.grey[300]}`\n        },\n        \"&.valid\":{\n            backgroundColor:theme.palette.primary.main,\n            color:\"rgba(255, 255, 255, 0.87)\",\n            \"&::after\":{\n               borderColor:  `transparent transparent transparent ${theme.palette.primary.main}`\n            }\n        },\n        \"& svg\":{\n            verticalAlign:'unset',\n            overflow:'unset'\n        }\n    },\n    labelGroup:{\n        margin:'unset',\n        marginLeft:\"12px\"\n    }\n}));\n\nconst Answer = (props) =>{\n    const classes = useStyles(props);\n    const {qna, qnaDispatch,id} = props;\n    const [answer] = qna.answers.filter(answer => answer.id === id);\n\n    const isValid = answer.isAnswer || (qna.notUsedForScore ? answer.checked : false);\n    const handleChange = () =>\n        qnaDispatch({\n            case:\"TOGGLE_ANSWER\",\n            payload:{\n                answer\n            }\n        });\n\n    const getResultIcon = () =>{\n        if(isValid)\n            return <CheckIcon />\n        return <ClearIcon />\n    };\n\n    const getControl = () =>{\n        if(\"checkbox\"===qna.inputType)\n            return <Checkbox id={answer.id} />\n        return <Radio id={answer.id}/>\n    };\n\n    return(\n        // <li className={answer.checked?\"checked\":\"\"}>\n        //     <FormGroup row aria-label=\"answer\">\n        <div className={classnames(\n            classes.answerGroup,\n            (answer.checked?\"checked\":\"\")\n        )}>\n            <div className={classnames(\n                classes.checkGroup,\n                (isValid?\"valid\":\"\")\n            )}>\n                {getResultIcon()}\n            </div>\n            <FormControlLabel\n                className={classes.labelGroup}\n                // value={answer.checked}\n                control={getControl()}\n                label={answer.label}\n                labelPlacement=\"end\"\n                onChange={handleChange}\n                checked={answer.checked}\n            />\n        </div>\n\n            // </FormGroup>\n        // </li>\n    );\n\n    // return(\n    //     <li className={answer.checked?\"checked\":\"\"}>\n    //         <div className={`result ${isValid?\"valid\":\"\"}`}>\n    //             {isValid &&\n    //                 <FontAwesomeIcon icon={['fas','check']}/>\n    //             }\n    //             {!isValid &&\n    //                 <FontAwesomeIcon icon={['fas','times']}/>\n    //             }\n    //         </div>\n    //         <Form.Check\n    //             custom\n    //             type={qna.inputType}\n    //             name={qna.id}\n    //             id={answer.id}\n    //             label={answer.label}\n    //             onChange={handleChange}\n    //             checked={answer.checked}\n    //         />\n    //     </li>\n    // );\n};\n\nAnswer.propTypes={\n    qna:PropTypes.object.isRequired,\n    qnaDispatch:PropTypes.func.isRequired,\n    id:PropTypes.string.isRequired,\n}\n\nexport default Answer;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace\n}","import get from \"lodash.get\";\nimport {getRandomString} from \"misc/utils\";\n\nexport default function(qnaData){\n    const randomSelection=JSON.parse(get(qnaData, \"randomSelection.value\", false));\n    const answers= get(qnaData, \"answers.values\", []).map(answer=>{\n        const controlledAnswer = JSON.parse(answer);\n        return {\n            ...controlledAnswer,\n            id:getRandomString(5,\"#aA\"),\n            checked:false\n        }\n\n        // const id = getRandomString(5,\"#aA\");\n        // const valid = answer.indexOf(quiz_validMark) === 0;\n        // if(valid)\n        //     answer = answer.substring(quiz_validMark.length+1);//+1 is for space between mark and label\n\n        // return {id,label:answer,checked:false,valid}\n    })\n\n    if(randomSelection)\n        answers.sort( (a,b) => a.id > b.id );\n\n    const inputType = answers.filter(answer => answer.isAnswer).length > 1 ?\"checkbox\":\"radio\"\n\n    return {\n        id: get(qnaData, \"id\"),\n        title: get(qnaData, \"title\"),\n        question: get(qnaData, \"question.value\", \"\"),\n        help: get(qnaData, \"help.value\", \"\"),\n        notUsedForScore: JSON.parse(get(qnaData, \"notUsedForScore.value\", false)),\n        // cover: get(qnaData, \"cover.node.path\", \"\"),\n        media: get(qnaData, \"media.node\", {}),\n        jExpField2Map: get(qnaData, \"jExpField2Map.value\", \"\"),\n        randomSelection,\n        answers,\n        inputType\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport {GET_QNA} from \"./QnaGraphQL\";\nimport Answer from \"./Answer\";\n\nimport QnaMapper from \"components/Qna/QnaModel\";\nimport {syncVisitorData} from \"misc/tracker\";\nimport Media from \"components/Media\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport classnames from \"clsx\";\nimport {FormGroup, Typography,Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Header from \"components/Header/Header\";\n\n\nconst useStyles = makeStyles(theme => ({\n    questionGroup:{\n        textAlign:'left',\n        marginTop: `${theme.spacing(2)}px`,\n        marginBottom: `${theme.spacing(4)}px`,\n    },\n    question:{\n        marginBottom: `${theme.spacing(1)}px`,\n    },\n    formGroup: {\n        textAlign:'left',\n        \"& > div::before\":{\n            flexBasis:'100%',\n            content:'\"\"',\n            height: '2px',\n            marginLeft : '50px',\n            borderTop: '2px solid rgba(255,255,255,.2)',\n        },\n        \"&  > div:first-child::before\":{\n            borderTop: 'none',\n        },\n        \"&  > div:last-child::after\":{\n            flexBasis:'100%',\n            content:'\"\"',\n            height: '2px',\n            marginLeft : '50px',\n            borderBottom: '2px solid rgba(255,255,255,.2)',\n        },\n        marginBottom:`${theme.spacing(4)}px`\n    },\n}));\n\n\nconst initialQNA = {\n    enableSubmit:false,\n}\n\nconst reducer = (qna, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            // const {qnaData,quiz_validMark} = payload;\n            const {qnaData} = payload;\n            console.debug(\"[QNA] DATA_READY -> qnaData :\",qnaData);\n\n            return {\n                ...qna,\n                ...QnaMapper(qnaData)\n            }\n        }\n        case \"TOGGLE_ANSWER\": {\n            const {answer} = payload;//answer id\n            console.debug(\"[QNA] TOGGLE_ANSWER -> answer :\",answer);\n            let {answers} = qna;\n            if(qna.inputType === \"radio\")\n                answers = answers.map( answer =>{ return {...answer,checked:false} });\n\n            answers = answers.map(_answer => {\n                if(_answer.id === answer.id)\n                    return {\n                        ..._answer,\n                        checked:!_answer.checked\n                    };\n                return _answer\n            });\n            const enableSubmit = answers.filter(answer => answer.checked).length > 0\n\n            return{\n                ...qna,\n                answers,\n                enableSubmit\n            }\n        }\n        case \"RESET\":{\n            const {qnaData} = payload;\n            console.debug(\"[QNA] RESET -> qnaData :\",qnaData);\n            return{\n                ...initialQNA,\n                ...QnaMapper(qnaData)\n            }\n        }\n        default:\n            throw new Error(`[QNA] action case '${action.case}' is unknown `);\n    };\n}\n\nconst Qna = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const { currentSlide,jContent,reset,showScore } = state;\n    const { gql_variables,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    const {loading, error, data} = useQuery(GET_QNA, {\n        variables:variables,\n    });\n\n    const [qna, qnaDispatch] = React.useReducer(\n        reducer,\n        initialQNA\n    );\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [loading,data]);\n\n    React.useEffect(() => {\n        if(reset && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"RESET\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [reset,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint qna : \",qna.title);\n\n    const show = currentSlide === props.id;\n\n    const handleSubmit = () => {\n        if(qna.notUsedForScore){\n            if(showScore){\n                dispatch({\n                    case:\"SHOW_SCORE\"\n                });\n            }else{\n                dispatch({\n                    case:\"NEXT_SLIDE\"\n                });\n            }\n        }else{\n            dispatch({\n                case:\"SHOW_RESULT\",\n                payload:{\n                    result: qna.answers\n                            .filter(answer => answer.isAnswer)\n                            .reduce( (test,answer) => test && answer.checked,true)\n                }\n            });\n        }\n        // dispatch({\n        //     case:\"SHOW_RESULT\",\n        //     payload:{\n        //         result:qna.notUsedForScore ?\n        //                 true :\n        //                 qna.answers\n        //                 .filter(answer => answer.isAnswer)\n        //                 .reduce( (test,answer) => test && answer.checked,true)\n        //     }\n        // });\n\n        // console.log(\"[handleSubmit] qna.jExpField2Map => \",qna.jExpField2Map);\n        if(qna.jExpField2Map){\n            //Get response cdpValue\n            //Note case multiple is manage by comma separated case\n            const values =\n                qna.answers\n                .filter(answer => answer.checked)\n                .reduce(\n                    (item,answer,index) =>{\n                        if(answer.cdpValue && answer.cdpValue.length > 0) {\n                            if (index === 0) {\n                                //workaround\n                                let cdpValue = answer.cdpValue;\n                                if(cdpValue==='true') cdpValue=true;\n                                if(cdpValue==='false') cdpValue=false;\n                                item = cdpValue\n                            } else {\n                                item = `${item}, ${answer.cdpValue}`\n                            }\n                        }\n                        return item;\n                    },null\n                );\n            // console.debug(\"[handleSubmit] update : \",qna.jExpField2Map,\" with values : \",values);\n\n            //if tracker is not initialized the track event is not send\n            syncVisitorData({\n                propertyName:`properties.${qna.jExpField2Map}`,\n                propertyValue:values\n            })\n        }\n    }\n\n    const getAnswers = () => {\n        if(qna.answers)\n            return qna.answers.map( answer =>\n                <Answer\n                    key={answer.id}\n                    id={answer.id}\n                    qna={qna}\n                    qnaDispatch={qnaDispatch}\n                />);\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n\n            {qna.media &&\n                <Media id={qna.media.id}\n                       type={qna.media.type.value}\n                       mixins={qna.media.mixins.map(mixin=>mixin.value)}\n                       path={qna.media.path}\n                       alt={qna.title}\n                />\n            }\n            <div className={sharedClasses.caption}>\n                <div className={classes.questionGroup}>\n                    <Typography  className={classes.question}\n                                 variant=\"h4\">\n                        {qna.question}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                        {qna.help}\n                    </Typography>\n                </div>\n\n\n                {/*<ol className=\"game4-quiz__answer-list\">*/}\n                <FormGroup className={classes.formGroup}\n                           style={{}}\n                           aria-label=\"answer\">\n                    {getAnswers()}\n                </FormGroup>\n                {/*</ol>*/}\n\n                <Button onClick={handleSubmit}\n                        disabled={!qna.enableSubmit}>\n                    {language_bundle && language_bundle.btnSubmit}\n                </Button>\n            </div>\n        </div>\n    );\n\n    // return(\n    //     <div className={classnames(\n    //         sharedClasses.item,\n    //         sharedClasses.showOverlay,\n    //         (show ? 'active':'')\n    //     )}>\n    //         {qna.media &&\n    //         <Media id={qna.media.id}\n    //                type={qna.media.type.value}\n    //                mixins={qna.media.mixins.map(mixin=>mixin.value)}\n    //                path={qna.media.path}\n    //                alt={qna.title}\n    //         />\n    //\n    //         }\n    //\n    //         <div className=\"game4-quiz__caption d-none d-md-block\">\n    //             <fieldset>\n    //                 <legend>{qna.question}\n    //                     <i>{qna.help}</i>\n    //                 </legend>\n    //                 {qna.answers &&\n    //                 <ol className=\"game4-quiz__answer-list\">\n    //                     {qna.answers.map( answer =>\n    //                         <Answer\n    //                             key={answer.id}\n    //                             id={answer.id}\n    //                             qna={qna}\n    //                             qnaDispatch={qnaDispatch}\n    //                         />)\n    //                     }\n    //                 </ol>\n    //                 }\n    //             </fieldset>\n    //\n    //             <Button variant=\"game4-quiz\"\n    //                     onClick={handleSubmit}\n    //                     disabled={!qna.enableSubmit}>\n    //                 {language_bundle && language_bundle.btnSubmit}\n    //             </Button>\n    //\n    //         </div>\n    //     </div>\n    // );\n}\n\nQna.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Qna;","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:masterQnaCover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_WARMUP = gql`\n    query getWarmup($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            warmup: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                content: property(language:$language,name:\"game4:content\"){\n                    value\n                }\n                duration: property(name:\"game4:qnaDuration\"){\n                    value\n                }\n                videoLink: property(name:\"game4:videoLink\"){\n                    value\n                }\n                videoExtPath: property(language:$language,name:\"game4:videoExtPath\"){\n                    value\n                }\n                videoIntPath: property(language:$language,name:\"game4:videoIntPath\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n    \n            }\n        }\n    }\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport get from \"lodash.get\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport {StoreContext} from \"contexts\";\nimport {GET_WARMUP} from \"./WarmupGraphQL\";\nimport Qna from \"components/Qna\";\nimport WarmupMapper from \"components/Warmup/WarmupModel\";\nimport Media from \"components/Media\";\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography, Button} from \"@material-ui/core\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"components/Header/Header\";\n\nconst useStyles = makeStyles(theme => ({\n    contentGroup:{\n        textAlign:'justify',\n        maxWidth:'800px',\n        margin:\"auto\",\n        marginTop:`${theme.spacing(3)}px`,\n        marginBottom:`${theme.spacing(4)}px`\n    }\n}));\n\nconst Warmup = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const { currentSlide,jContent} = state;\n    const { gql_variables,cnd_type,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    // const query = loader(\"./Warmup.graphql.disabled\");\n    const {loading, error, data} = useQuery(GET_WARMUP, {\n        variables:variables,\n    });\n\n    const [warmup, setWarmup] = React.useState({childNodes:[]});\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const warmup = WarmupMapper(get(data, \"response.warmup\", {}),cnd_type)\n            dispatch({\n                case:\"ADD_SLIDES\",\n                payload:{\n                    slides:warmup.childNodes.map(node=>node.id),\n                    parentSlide:warmup.id\n                }\n            });\n            // console.debug(\"warmup.id : \",warmup.id,\"; warmup.video : \",warmup.video);\n            setWarmup(warmup);\n        }\n    },[loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint warmup : \",warmup.title);\n\n    const show = currentSlide === props.id;\n    const handleCLick = () =>\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n\n    return(\n        <>\n            <div className={classnames(\n                sharedClasses.item,\n                sharedClasses.showOverlay,\n                (show ? 'active':'')\n            )}>\n                <Header/>\n                {warmup.media &&\n                    <Media id={warmup.media.id}\n                           type={warmup.media.type.value}\n                           mixins={warmup.media.mixins.map(mixin=>mixin.value)}\n                           path={warmup.media.path}\n                           alt={warmup.title}\n                    />\n                }\n\n                <div className={sharedClasses.caption}>\n                    <Typography className={sharedClasses.textUppercase}\n                                variant=\"h3\">\n                        {warmup.title}\n                    </Typography>\n                    <Typography className={sharedClasses.subtitle}\n                                color=\"primary\"\n                                variant=\"h4\">\n                        {warmup.subtitle}\n                    </Typography>\n\n                    <div className={classes.contentGroup}>\n                        <Typography component=\"div\"\n                                    className={classes.content}\n                                    dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(warmup.content, { ADD_ATTR: ['target'] })}}/>\n\n                        { warmup.video != null &&\n                        <div>\n                            <Media id={warmup.video.id || null}\n                                   type={warmup.video.type.value}\n                                   mixins={[]}\n                                   path={warmup.video.path}\n                                   sourceID={warmup.id}\n                            />\n                        </div>\n                        }\n                    </div>\n\n\n                    <Button onClick={ handleCLick }>\n                        {language_bundle && language_bundle.btnQuestion}\n                    </Button>\n                </div>\n            </div>\n            {warmup.childNodes.map( node =>\n                <Qna\n                    key={node.id}\n                    id={node.id}\n                />\n            )}\n        </>\n    );\n}\n\nWarmup.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Warmup;","import get from \"lodash.get\";\n\nexport default function(warmupData,cnd_type) {\n    let video = null;\n    const videoLink = get(warmupData, \"videoLink.value\", \"\");\n    const videoIntPath = get(warmupData, \"videoIntPath.node\");\n\n    if(videoLink)\n        video= videoIntPath ?\n            videoIntPath:{\n                id:null,\n                type:{\n                    value:cnd_type.EXT_VIDEO\n                },\n                path:get(warmupData, \"videoExtPath.value\")\n            }\n\n\n    // cover: get(warmupData, \"cover.node.path\", \"\"),\n    return{\n        id: get(warmupData, \"id\", \"\"),\n        title: get(warmupData, \"title\", \"\"),\n        subtitle: get(warmupData, \"subtitle.value\", \"\"),\n        content: get(warmupData, \"content.value\", \"\"),\n        duration: get(warmupData, \"duration.value\", \"\"),\n        media: get(warmupData, \"media.node\", {}),\n        childNodes: get(warmupData,\"children.nodes\",[])\n                    .map(node => {\n                        return{\n                            id: get(node, \"id\"),\n                            type: get(node, \"type.value\")\n                        }\n                    }),\n        video\n    }\n}","import {gql} from 'apollo-boost';\n\nexport const GET_PERSONALIZED_RESULT = gql`\n    query getPersonalizedResultContent($workspace: Workspace!, $id: String!, $language: String!,$profileId: String,$sessionId: String) {\n        response: jcr(workspace: $workspace) {\n            result: nodeById(uuid: $id) {\n                jExperience: jExperience(profileId: $profileId, sessionId: $sessionId) {\n                    variant:personalizedVariant{\n                        id: uuid\n                        title:displayName(language:$language)\n                        text:property(language:$language,name:\"text\"){\n                            value\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_PERSONALIZED_RESULT} from \"./PersonalizedGraphQL\";\nimport get from \"lodash.get\";\nimport DOMPurify from \"dompurify\";\nimport {Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    result:{\n        marginTop: `${theme.spacing(4)}px`,\n    }\n}));\n\nconst Personalized = (props) => {\n    const {id,cxs}=props;\n    const classes = useStyles(props);\n    const { state } = React.useContext(StoreContext);\n    const { jContent } = state;\n\n    const [result, setResult] = React.useState({});\n\n    const {loading, error, data} = useQuery(GET_PERSONALIZED_RESULT, {\n        variables:Object.assign(jContent.gql_variables,{\n            profileId:cxs.profileId,\n            sessionId:cxs.sessionId,\n            id\n        }),\n        fetchPolicy: \"no-cache\"\n    });\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const persoData = get(data, \"response.result.jExperience.variant\", {});\n            setResult({\n                ...persoData,\n                text:persoData.text.value\n            });\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint personalized result : \",result.title);\n\n    // console.log(\"Personalized props.show :\",props.show);\n\n    return(\n        <Typography className={classes.result}\n                    component=\"div\"\n                    dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(result.text, { ADD_ATTR: ['target'] })}}/>\n    );\n\n    // return(\n    //     <div className=\"game4-quiz__score-result col-6 offset-3 col-md-4 offset-md-4 mb-5\"\n    //          dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(result.text, { ADD_ATTR: ['target'] })}}>\n    //     </div>\n    // );\n}\n\nPersonalized.propTypes={\n    id:PropTypes.string.isRequired,\n    cxs:PropTypes.object.isRequired\n}\n\nexport default Personalized;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    result:{\n        marginTop: `${theme.spacing(4)}px`,\n        maxWidth: '300px',\n        margin: '32px auto',\n        \"& .CircularProgressbar\":{\n            \"& .CircularProgressbar\":{\n                \"&-text\":{\n                    fill: theme.palette.primary.main,\n                    fontFamily: theme.typography.fontFamily,\n                },\n                \"&-trail\": {\n                    stroke: theme.palette.grey[300],\n                },\n                \"&-path\": {\n                    stroke: theme.palette.primary.main,\n                },\n            }\n        }\n    }\n}));\n\nconst Percentage = (props) => {\n    const {score} = props\n    const classes = useStyles(props);\n    console.debug(\"*** paint percentage result : \",score);\n    return(\n            <div className={classes.result}>\n                <CircularProgressbar value={score} text={`${score}%`}/>\n            </div>\n    );\n}\n\nPercentage.propTypes={\n    score:PropTypes.number.isRequired\n}\n\nexport default Percentage;","import React from 'react';\nimport {StoreContext} from \"contexts\";\n\nimport Media from \"components/Media\";\nimport Personalized from \"components/Score/personalized/Personalized\";\nimport Percentage from \"components/Score/percentage/Percentage\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport classnames from \"clsx\";\nimport {Typography,Button} from \"@material-ui/core\";\nimport Header from \"components/Header/Header\";\n\nconst Score = (props) => {\n    const sharedClasses = cssSharedClasses(props);\n    const { state,dispatch } = React.useContext(StoreContext);\n    const { quiz,currentSlide,score,scoreIndex,jContent,cxs } = state;\n    const { language_bundle } =  jContent;\n\n    const show = currentSlide === scoreIndex;\n\n    const onClick = () => {\n        dispatch({\n            case:\"RESET\"\n        });\n    }\n    const displayResult = () => {\n        if(quiz.personalizedResult.id){\n            if(cxs)\n                return <Personalized id={quiz.personalizedResult.id} cxs={cxs}/>\n            return <p>cxs is loading...</p>\n        }\n        return <Percentage score={score}/>\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type.value}\n                   mixins={quiz.media.mixins.map(mixin=>mixin.value)}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n            <div className={sharedClasses.caption}>\n                <Typography className={sharedClasses.textUppercase}\n                            variant=\"h3\">\n                    {quiz.title}\n                </Typography>\n                <Typography className={sharedClasses.subtitle}\n                            color=\"primary\"\n                            variant=\"h4\">\n                    {quiz.subtitle}\n                </Typography>\n\n                {displayResult()}\n\n                <Button onClick={onClick}>\n                    {language_bundle && language_bundle.btnReset}\n                </Button>\n            </div>\n        </div>\n    );\n\n}\n\n// Personalized.propTypes={}\n\nexport default Score;","import { createMuiTheme } from '@material-ui/core/styles';\nimport React from \"react\";\nimport _merge from \"lodash.merge\";\n\nconst defaultTheme = {\n    geometry:{\n        header:{\n          result:{\n              height:\"45px\",\n          }\n        },\n        item:{\n            minHeight:\"700px\",\n        },\n        caption:{\n            // minHeight:\"700px\",\n            padding:\"60px\",\n            width:\"calc(100% - 120px)\",\n        },\n        indicator:{\n            width:\"30px\",\n            height:\"3px\",\n            hitAreaHeight:\"10px\",\n            spacer:\"3px\",\n        },\n        checkedAnswer:{\n            borderRadius:\"10px\"\n        }\n    },\n    palette: {\n        primary:{\n            light: \"#009bdc\",\n            main: \"#007cb0\",\n            dark: \"#005f87\"\n        },\n        secondary:{\n            light: \"#f57c30\",\n            main: \"#e57834\",\n            dark: \"#bd5715\"\n        },\n        text:{\n            primary:\"rgba(255, 255, 255, 0.87)\",\n            secondary:\"rgba(0, 0, 0, 0.87)\"\n        },\n        background:{\n            overlay: \"rgba(0,0,0,.75)\",\n            checkedAnswer: \"rgba(255,255,255,1)\",\n        },\n        shadows:{\n            overlay:\"inset 1140px 0 570px -570px rgba(0,0,0,.5)\",\n        }\n    },\n    typography:{\n        allVariants:{\n            color:\"rgba(255, 255, 255, 0.87)\"\n        },\n        fontFamily:[\"Lato\",\"Helvetica\",\"Arial\",\"sans-serif\"].join(\",\"),\n        h3:{\n            fontWeight: 300\n        },\n        h4:{\n            fontWeight: 300\n        },\n        body1:{\n            fontSize:\"1.1rem\",\n        }\n    },\n    // shape:{\n    //     borderRadius:3\n    // }\n    transitions:{\n        easing:{\n            ease:\"cubic-bezier(0.25, 0.1, 0.25, 1)\",\n            header:\"cubic-bezier(.23,1,.32,1)\"\n        },\n        duration:{\n            long:600\n        }\n    },\n    spacing: 8,\n    overrides: {\n        MuiCheckbox:{\n            root:{\n                color:\"rgba(255, 255, 255, 0.87)\"\n            }\n        },\n        MuiRadio:{\n            root:{\n                color:\"rgba(255, 255, 255, 0.87)\"\n            }\n        },\n        MuiButton:{\n            contained:{\n                \"&$disabled\": {\n                    color: \"rgba(255, 255, 255, 0.26)\",\n                    backgroundColor: \"rgba(255, 255, 255, 0.12)\"\n                }\n            }\n\n        },\n        MuiTypography:{\n            body1:{\n                \"& a\":{\n                    color:\"#007cb0\",\n                }\n            }\n        },\n        // MuiCssBaseline: {\n        //     '@global': {\n        //         // '@font-face': ['Lato'],\n        //         '.Mui-disabled': {\n        //             color: \"rgba(255, 255, 255, 0.26)\",\n        //             backgroundColor: \"rgba(255, 255, 255, 0.12)\"\n        //         }\n        //\n        //     },\n        // },\n    },\n    props:{\n        MuiButton:{\n            disableRipple:true,\n            color:\"primary\",\n            variant:\"contained\",\n        },\n\n        MuiCheckbox:{\n            disableRipple:true,\n            color:\"primary\",\n        },\n        MuiRadio:{\n            disableRipple:true,\n            color:\"primary\",\n        }\n    }\n};\n\nconst getTheme = (userTheme) =>{\n    const theme = createMuiTheme( _merge(defaultTheme,userTheme))\n    return theme;\n}\n\nexport default getTheme;","import React from 'react'; //useEffect,useContext\nimport PropTypes from \"prop-types\";\n\nimport {Grid, Button, Typography} from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport {GET_QUIZ} from \"components/Quiz/QuizGraphQL.js\";\n\nimport Quiz from \"components/Quiz\"\nimport Qna from \"components/Qna\";\nimport Warmup from \"components/Warmup\";\nimport Score from \"components/Score\";\nimport {syncTracker} from \"misc/tracker\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'components/theme';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: \"relative\",\n        \"& *, &::after, &::before\":{\n            boxSizing:\"border-box\",\n        }\n    },\n    // inner:{\n    //     // position: 'relative',\n    //     width: '100%',\n    //     // overflow: 'hidden',\n    //     // @include clearfix()\n    //     \"&::after\": {\n    //         display: 'block',\n    //         clear: 'both',\n    //         content: \"\",\n    //     }\n    // }\n}));\n\n\n\nconst initLanguageBundle = quizData => {\n    const keys = [\n        \"btnStart\",\n        \"btnSubmit\",\n        \"btnQuestion\",\n        \"btnNextQuestion\",\n        \"btnShowResults\",\n        \"btnReset\",\n        \"consentTitle\",\n        \"correctAnswer\",\n        \"wrongAnswer\"\n    ];\n    return keys.reduce((bundle,key)=>{\n        bundle[key] = get(quizData,`${key}.value`);\n        // console.debug(\"bundle: \",bundle);\n        return bundle;\n    },{});\n}\n\n//NOPE ! TODO jCustomer/context.json -> context. jContext.value = {context,jCustomer}\nconst App = (props)=> {\n    const classes = useStyles(props);\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        quiz,\n        showResult,\n        showScore\n    } = state;\n\n    const {loading, error, data} = useQuery(GET_QUIZ, {\n        variables:jContent.gql_variables,\n    });\n\n    React.useEffect(() => {\n        console.debug(\"App Quiz init !\");\n        if(loading === false && data){\n            console.debug(\"App Quiz init Set Data!\");\n\n            const quizData = get(data, \"response.quiz\", {});\n            const quizKey = get(quizData, \"key.value\");\n\n            jContent.language_bundle = initLanguageBundle(quizData);\n            console.debug(\"jContent.language_bundle: \",jContent.language_bundle);\n\n            dispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    quizData\n                }\n            });\n\n            //init unomi tracker\n            if(jContent.gql_variables.workspace === \"LIVE\")\n                syncTracker({\n                    scope: jContent.scope,\n                    url: jContent.cdp_endpoint,\n                    sessionId:`qZ-${quizKey}-${Date.now()}`,\n                    dispatch\n                });\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n\n\n    const displayScore=()=>{\n        // console.log(\"[displayScore] showScore: \",showScore);\n        if(showScore)\n            return <Score/>\n    }\n\n    return (\n        <ThemeProvider theme={theme(quiz?quiz.userTheme:{})}>\n        <Grid container spacing={3}>\n            <Grid item xs style={{margin:'auto'}}>\n                <div className={classnames(\n                    classes.main,\n                    (showResult?'showResult':'')\n                )}>\n\n                    {quiz &&\n                        <>\n                        <Quiz\n                            key={quiz.id}\n                        />\n                        {quiz.childNodes.map( (node,i) => {\n                            if(node.type === jContent.cnd_type.QNA)\n                                return <Qna\n                                    key={node.id}\n                                    id={node.id}\n                                />\n\n                            if(node.type === jContent.cnd_type.WARMUP)\n                                return <Warmup\n                                    key={node.id}\n                                    id={node.id}\n                                />\n                            return <Typography color=\"error\"\n                                               component=\"p\">\n                                node type {node.type} is not supported\n                            </Typography>\n\n                        })\n                        }\n                        {displayScore()}\n\n                        </>\n                    }\n                </div>\n            </Grid>\n        </Grid>\n        </ThemeProvider>\n    );\n};\n\nApp.propTypes={}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( (error,i) =>\n                    <li>\n                        {error.dataPath} : {error.message}\n                    </li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const validMark=\"[*]\";\nconst score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\nconst cnd_type = {\n    QNA:\"game4nt:qna\",\n    WARMUP:\"game4nt:warmup\",\n    WIDEN_IMAGE:\"wdennt:image\",\n    WIDEN_VIDEO:\"wdennt:video\",\n    EXT_VIDEO:'ext:video',\n    JNT_FILE:'jnt:file',\n    IMAGE:'jmix:image'\n}\nconst consent_status={\n    GRANTED:\"GRANTED\",\n    DENIED:\"DENIED\",\n    REVOKED:\"REVOKED\"\n};\n\nexport {\n    workspace,\n    cnd_type,\n    validMark,\n    consent_status,\n    score_splitPattern\n}","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nexport default{\n    context:{\n        title:\"context validation schema \",\n        description:\"context is an object provided by the page in charge to load the app\",\n        // definitions: {\n        //     jContent:jContent,\n        //     jCustomer:jCustomer,\n        //     gql:gql\n        // },\n        type:\"object\",\n        // properties:{\n        //     jContent:{$ref:\"#jContent\"},\n        //     gql:{$ref:\"#gql\"},\n        //     jCustomer:{$ref:\"#jCustomer\"}\n        // },\n        properties:{\n            host:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n            },\n            allow_indicator_browsing:{\n                type:\"boolean\",\n                default:false\n            },\n            workspace:{\n                type:\"string\",\n                enum:workspace,\n                default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n            },\n            scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n            files_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n            },\n            gql_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n            },\n            gql_authorization:{\n                type:\"string\",\n                // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n            },\n            gql_variables:{\n                type:\"object\",\n                properties:{\n                    id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n                    language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n                },\n                required: [\"id\", \"language\"]\n            },\n            cdp_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n            },\n            // theme:{\n            //     type:\"object\",\n            // },\n            // language_bundle:{\n            //     type:\"object\",\n            //     properties:{\n            //         btnStart:{type:\"string\"},//\"Démarrer\",\n            //         btnSubmit:{type:\"string\"},//\"Soumettre\",\n            //         btnQuestion:{type:\"string\"},//\"Question\",\n            //         btnNextQuestion:{type:\"string\"},//\"Question suivante\",\n            //         btnShowResults:{type:\"string\"},//\"Mon score\",\n            //         consentTitle:{type:\"string\"},//\"Consentement\",\n            //         correctAnswer:{type:\"string\"},//\"Correcte\",\n            //         wrongAnswer:{type:\"string\"}//\"Incorrecte\"\n            //     },\n            //     required: [\n            //         \"btnStart\",\n            //         \"btnSubmit\",\n            //         \"btnQuestion\",\n            //         \"btnNextQuestion\",\n            //         \"btnShowResults\",\n            //         \"consentTitle\",\n            //         \"correctAnswer\",\n            //         \"wrongAnswer\"\n            //     ],\n            //     additionalProperties:false\n            // }\n        },\n        required: [\n            \"host\",\n            \"allow_indicator_browsing\",\n            \"workspace\",\n            \"scope\",\n            \"files_endpoint\",\n            \"gql_endpoint\",\n            // \"gql_authorization\",\n            \"gql_variables\",\n            \"cdp_endpoint\",\n            // \"language_bundle\"\n        ],\n        additionalProperties:false\n    }\n}","import * as Ajv from \"ajv\";\nimport schema from  \"./lib/schema\"\nimport {getGQLWorkspace} from \"misc/utils\"\nimport {cnd_type,validMark,consent_status,score_splitPattern} from \"douane/lib/config\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(schema.context, context);\n    if (!valid)\n        // throw new Error(`An error occurred during the validation of context object, errors : ${JSON.stringify(ajv.errors)}`);\n        throw {item:\"Context configuration object\",errors:ajv.errors};\n\n    context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    context.cnd_type=cnd_type;\n    context.consent_status=consent_status;\n    context.quiz_validMark=validMark;\n    context.score_splitPattern=score_splitPattern;\n    return context;\n}\n\nexport {\n    contextValidator\n}","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nimport {getRandomString} from \"misc/utils\";\nimport {syncQuizScore} from \"misc/tracker\";\nimport QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = jContent => {\n    return {\n        jContent,\n        quiz: null,//{consents:[],childNodes:[]},\n        resultSet:[],//array of boolean, order is the same a slideSet\n        currentResult:false,//previously result\n        slideSet:[],//previously slideIndex\n        currentSlide:null,//previously index\n        showResult:false,\n        showNext:false,\n        showScore:false,\n        max:-1,\n        score:0,\n        cxs:null,\n        reset:false,\n        scoreIndex:getRandomString(5,\"#aA\")\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    const showNext = ({slideSet,max,slide}) =>\n        slideSet.indexOf(slide) < max;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            //prepare slideIds\n            const {quizData} = payload;\n            console.debug(\"[STORE] DATA_READY - quizData: \",quizData);\n            const quiz = QuizMapper(quizData);\n\n            const slideSet = [quiz.id];\n            quiz.childNodes.forEach(node => slideSet.push(node.id));\n            slideSet.push(state.scoreIndex);\n\n            const max = slideSet.length -1;\n\n            return {\n                ...state,\n                quiz,\n                currentSlide:quiz.id,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:quiz.id}),\n                max\n            };\n        }\n        case \"ADD_CXS\": {\n            const cxs = payload.cxs;\n            console.debug(\"[STORE] ADD_CXS - cxs: \",cxs);\n            return {\n                ...state,\n                cxs\n            };\n        }\n        case \"ADD_SLIDES\": {\n            const slides = payload.slides;\n            const parentSlide = payload.parentSlide;\n            let slideSet = state.slideSet;\n\n            if (parentSlide && slideSet.includes(parentSlide)) {\n                const position = slideSet.indexOf(parentSlide) + 1;\n                slideSet.splice(position, 0, ...slides);\n            } else {\n                slideSet = [...slideSet, ...slides];\n            }\n\n            const max = slideSet.length -1;\n\n            console.debug(\"[STORE] ADD_SLIDE - slides: \",slides,\" parentSlide: \",parentSlide);\n            return {\n                ...state,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:state.currentSlide}),\n                max\n            };\n        }\n        case \"NEXT_SLIDE\":{\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            console.debug(\"[STORE] NEXT_SLIDE - currentIndex: \",currentIndex,\", max : \",state.max);\n\n            let nextSlide = state.currentSlide;\n\n            if(currentIndex  < state.max )\n                nextSlide = state.slideSet[nextIndex];\n\n            const showScore = nextIndex === state.max-1;\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showResult:false,\n                showScore,\n                // score,\n                reset:false\n            };\n        }\n        case \"SHOW_SCORE\": {\n            console.debug(\"[STORE] SHOW_SCORE\");\n            const [slide] = state.slideSet.slice(-1);\n\n            const goodAnswers = state.resultSet.filter(result => result).length;\n            const answers = state.resultSet.length;\n            const score = Math.floor((goodAnswers/answers)*100);\n\n            syncQuizScore({\n                quizKey:state.quiz.key,\n                split:state.jContent.score_splitPattern,\n                quizScore:score\n            });\n\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide}),\n                showResult:false,\n                score\n            };\n        }\n        case \"SHOW_SLIDE\": {\n            const slide = payload.slide\n            console.debug(\"[STORE] SHOW_SLIDE - slide: \",slide);\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide})\n            };\n        }\n        case \"SHOW_RESULT\": {\n            const currentResult = payload.result;\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const showScore = currentIndex === state.max-1;\n            console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n\n            return {\n                ...state,\n                showScore,\n                resultSet: [...state.resultSet, currentResult],\n                currentResult,\n                showResult: true\n            };\n        }\n        case \"RESET\": {\n            console.debug(\"[STORE] RESET\");\n\n            const [currentSlide] = state.slideSet.slice(0,1);\n            console.debug(\"[STORE] RESET slideSet\",state.slideSet);\n\n            return {\n                ...state,\n                currentSlide,\n                resultSet:[],\n                showScore:false,\n                currentResult:false,\n                reset:true\n            }\n        }\n        default:\n            throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.jContent,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import get from \"lodash.get\";\n\nexport default function(quizData) {\n    const getTheme = (theme)=>{\n        if(typeof theme === 'string'){\n            try{\n                return JSON.parse(theme);\n            }catch(e){\n                console.error(\"the user theme is not a json object : \",e);\n            }\n        };\n\n        return theme;\n    }\n    return{\n        //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n        id: get(quizData, \"id\"),\n        type: get(quizData, \"type.value\"),\n        key : get(quizData, \"key.value\", {}),\n        title: get(quizData, \"title\", \"\"),\n        subtitle: get(quizData, \"subtitle.value\", \"\"),\n        description: get(quizData, \"description.value\", \"\"),\n        duration: get(quizData, \"duration.value\", \"\"),\n        userTheme: getTheme(get(quizData, \"userTheme.value\", {})),\n        //cover: get(quizData, \"cover.node.path\", \"\"),\n        media: get(quizData, \"media.node\", {}),\n        consents: get(quizData, \"consents.nodes\", []).map(node =>{\n            return {\n                id:get(node,\"id\"),\n                actived:JSON.parse(get(node,\"actived.value\"))\n            }\n        }),\n        personalizedResult :{\n            id:get(quizData, \"personalizedResult.node.id\", null),\n            type:get(quizData, \"personalizedResult.node.type.value\", null)\n        },\n        childNodes : get(quizData,\"children.nodes\",[]).map(node =>{\n            return {\n                id: get(node, \"id\"),\n                type: get(node, \"type.value\")\n            };\n        }),\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport AjvError from \"components/Error/Ajv\";\n\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport {contextValidator} from \"douane\";\n\nimport {Store} from \"components/Store\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'components/theme';\n\nimport 'index.css';\n\nconst render=(target,context)=>{\n  try{\n    // console.log(\"context : \",JSON.stringify(context));\n    context = contextValidator(context);\n    const headers={};\n    if(context.gql_authorization)\n      headers.Authorization=context.gql_authorization;\n\n    const client = new ApolloClient({\n      uri:context.gql_endpoint,\n      headers\n    })\n\n    // console.log(\"context.theme : \",context.theme);\n    // console.log(\"typeof context.theme : \",typeof context.theme);\n    ReactDOM.render(\n      <Store jContent={context}>\n        <ApolloProvider client={client}>\n          {/*<ThemeProvider theme={theme(context.theme)}>*/}\n            <App />\n          {/*</ThemeProvider>*/}\n        </ApolloProvider>\n      </Store>,\n      document.getElementById(target)\n    );\n\n  }catch(e){\n    console.error(\"error : \",e);\n    //Note: create a generic error handler\n    ReactDOM.render(\n      <AjvError\n        item={e.item}\n        errors={e.errors}\n      />,\n      document.getElementById(target)\n    );\n  }\n}\n\nwindow.quizUIApp = render;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}