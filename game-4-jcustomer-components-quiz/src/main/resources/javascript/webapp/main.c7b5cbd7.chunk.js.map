{"version":3,"sources":["contexts/index.js","components/Quiz/QuizGraphQL.js","components/Consent/ConsentGraphQL.js","misc/tracker.js","components/Consent/Consent.jsx","components/Media/components/Image.jsx","components/VideoPlayer/VideoPlayer.jsx","components/Media/components/Video.jsx","components/Media/components/widen/WidenMediaGraphQL.js","components/Media/components/widen/WidenMediaModel.js","components/Media/components/widen/WidenImage.jsx","components/Media/components/widen/WidenVideo.jsx","components/Media/Media.jsx","components/Quiz/Quiz.jsx","components/Qna/QnaGraphQL.js","components/Qna/Answer/Answer.jsx","misc/utils.js","components/Qna/QnaModel.js","components/Qna/Qna.jsx","components/Warmup/WarmupGraphQL.js","components/Warmup/Warmup.jsx","components/Warmup/WarmupModel.js","components/Score/Score.jsx","components/App.js","components/Error/Ajv.jsx","misc/serviceWorker.js","douane/lib/config.js","douane/lib/schema/index.js","douane/index.js","components/Store/Store.jsx","components/Quiz/QuizModel.js","index.js"],"names":["StoreContext","React","createContext","GET_QUIZ","gql","GET_CONSENT","syncConsentStatus","typeIdentifier","scope","status","statusDate","Date","revokeDate","setFullYear","getFullYear","console","debug","uTracker","track","consent","toISOString","Consent","props","id","quizState","quizDispatch","consents","filter","state","useContext","jContent","cxs","gql_variables","consent_status","variables","Object","assign","useQuery","loading","error","data","useEffect","consentData","get","case","payload","granted","className","Form","Check","custom","type","name","identifier","label","title","onChange","e","target","checked","description","icon","onClick","DENIED","handleDenied","Image","path","alt","files_endpoint","src","encodeURI","VideoPlayer","ownerID","videoURL","quiz","player","useRef","handleVideoStatus","content","parent","game4Quiz","game4Warmup","game4Video","duration","current","getDuration","currentTime","getCurrentTime","syncVideoStatus","ref","url","controls","width","height","onStart","onPlay","onPause","onEnded","Video","GET_WIDEN_MEDIA","mediaData","imageURL","WidenImage","uuid","useState","media","setMedia","MediaMapper","replace","WidenVideo","Media","component","mixins","sourceID","cnd_type","WIDEN_IMAGE","WIDEN_VIDEO","EXT_VIDEO","JNT_FILE","includes","IMAGE","init","computeEnableStartBtn","showNext","workspace","length","reducer","action","consentPath","cxsConsentStatus","cxsConsentRevokeDate","GRANTED","now","parse","actived","JSON","enableStartBtn","map","Error","Quiz","dispatch","currentSlide","language_bundle","useReducer","show","value","mixin","subtitle","dangerouslySetInnerHTML","__html","Button","variant","forEach","disabled","btnStart","consentTitle","key","GET_QNA","Answer","qna","qnaDispatch","answers","answer","isValid","isAnswer","notUsedForScore","inputType","getRandomString","format","mask","indexOf","result","i","Math","floor","random","qnaData","randomSelection","controlledAnswer","sort","a","b","question","help","jExpField2Map","initialQNA","enableSubmit","QnaMapper","_answer","Qna","reset","reduce","test","values","item","index","cdpValue","propertyName","propertyValue","update","syncVisitorData","btnSubmit","GET_WARMUP","Warmup","childNodes","warmup","setWarmup","warmupData","video","videoLink","videoIntPath","node","WarmupMapper","slides","parentSlide","btnQuestion","Score","score","scoreIndex","text","btnReset","library","add","fab","faClock","faHandPointLeft","faCheckCircle","faCheckDouble","faCheck","faTimesCircle","faTimes","faBan","Indicator","enabled","active","slide","App","slideSet","currentResult","showResult","showScore","quizData","quizKey","bundle","initLanguageBundle","sessionId","initialize","ready","window","syncTracker","cdp_endpoint","Container","Row","correctAnswer","wrongAnswer","btnNextQuestion","btnShowResults","itemId","allow_indicator_browsing","QNA","WARMUP","Ajv","errors","dataPath","message","Boolean","location","hostname","match","REVOKED","context","properties","host","default","process","enum","pattern","gql_endpoint","gql_authorization","language","required","additionalProperties","ajv","useDefaults","resultSet","max","QuizMapper","push","position","splice","currentIndex","nextIndex","nextSlide","slice","goodAnswers","split","quizScore","syncQuizScore","score_splitPattern","Store","Provider","children","quizUIApp","validate","schema","toUpperCase","getGQLWorkspace","quiz_validMark","contextValidator","headers","Authorization","client","ApolloClient","uri","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c7b5cbd7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:cover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_QUIZ = gql`\n    query getQuiz($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            quiz: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                key: property(name:\"game4:quizKey\"){\n                    value\n                }\n                title: displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                description: property(language:$language,name:\"game4:description\"){\n                    value\n                }\n                duration: property(name:\"game4:duration\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                consents: property(name:\"game4:consentType\"){\n                    nodes: refNodes {\n                        id: uuid\n                        actived: property(language:$language,name:\"wem:activated\"){\n                            value\n                        }\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                },\n                btnStart: property(language:$language, name:\"game4:btnStart\"){\n                    value\n                },\n                btnSubmit: property(language:$language, name:\"game4:btnSubmit\"){\n                    value\n                },\n                btnQuestion: property(language:$language, name:\"game4:btnQuestion\"){\n                    value\n                },\n                btnNextQuestion: property(language:$language, name:\"game4:btnNextQuestion\"){\n                    value\n                },\n                btnShowResults: property(language:$language, name:\"game4:btnShowResults\"){\n                    value\n                },\n                btnReset: property(language:$language, name:\"game4:btnReset\"){\n                    value\n                },\n                consentTitle: property(language:$language, name:\"game4:consentTitle\"){\n                    value\n                },\n                correctAnswer: property(language:$language, name:\"game4:correctAnswer\"){\n                    value\n                },\n                wrongAnswer: property(language:$language, name:\"game4:wrongAnswer\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import {gql} from 'apollo-boost';\n\nexport const GET_CONSENT = gql`\n    query getConsent($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            consent: nodeById(uuid: $id) {\n                id: uuid\n                identifier:name\n                title:displayName(language:$language)\n                description: property(language:$language, name:\"jcr:description\"){\n                    value\n                }\n                actived: property(language:$language,name:\"wem:activated\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import uTracker from \"unomi-analytics\";\n\nconst syncTracker = ({scope,url,sessionId,dispatch}) => {\n    uTracker.initialize({\n        \"Apache Unomi\": {\n            scope,\n            url,\n            sessionId\n        }\n    });\n    uTracker.ready( () =>\n        dispatch({\n            case:\"ADD_CXS\",\n            payload:{\n                cxs:window.cxs\n            }\n        })\n    );\n};\n\nconst syncConsentStatus= ({typeIdentifier,scope,status}) => {\n    const statusDate = new Date();\n    const revokeDate = new Date(statusDate);\n    revokeDate.setFullYear(revokeDate.getFullYear() + 2);\n    console.debug(\"syncConsentStatus status :\", status);\n\n    uTracker.track(\"modifyConsent\", {\n        consent: {\n            typeIdentifier,\n            scope,\n            status,\n            statusDate: statusDate.toISOString(),//\"2018-05-22T09:27:09.473Z\",\n            revokeDate: revokeDate.toISOString()//\"2020-05-21T09:27:09.473Z\"\n        }\n    });\n};\n\nconst syncQuizScore = ({quizKey,split,quizScore}) =>\n    uTracker.track(\"setQuizScore\",{\n        score:`${quizKey}${split}${quizScore}`\n    });\n\nconst syncVideoStatus = ({content,parent,status,player}) =>\n    uTracker.track(\"video\",{\n        id:content.id,\n        type:content.type,\n        game4Quiz:{\n            id:content.id,\n            type:content.type\n        },\n        game4Warmup:{\n            id:parent\n        },\n        game4Video:{\n            duration: player.current.getDuration(),\n            currentTime: player.current.getCurrentTime(),\n            status: status\n        }\n    });\n\nconst syncVisitorData = ({propertyName,propertyValue}) =>\n    uTracker.track(\"updateVisitorData\",{\n        update : {\n            propertyName,\n            propertyValue\n        }\n    });\n\nexport {\n    syncTracker,\n    syncConsentStatus,\n    syncQuizScore,\n    syncVideoStatus,\n    syncVisitorData\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Form} from \"react-bootstrap\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_CONSENT} from \"components/Consent/ConsentGraphQL\";\nimport get from \"lodash.get\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport {StoreContext} from \"contexts\";\n\nconst Consent = (props)=> {\n    const {id, quizState, quizDispatch} = props;\n    const [consent={}] = quizState.consents.filter(consent => consent.id === id);\n\n    const { state } = React.useContext(StoreContext);\n\n    const {jContent,cxs} = state;\n    const {gql_variables,scope,consent_status} =  jContent;\n\n    const variables = Object.assign(gql_variables,{id})\n    const {loading, error, data} = useQuery(GET_CONSENT, {\n        variables:variables,\n    });\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const consentData = get(data, \"response.consent\", {});\n            quizDispatch({\n                case:\"DATA_READY_CONSENT\",\n                payload:{\n                    consentData,\n                    scope,\n                    cxs,\n                    consent_status\n                }\n            })\n        }\n\n    }, [loading,data]);\n\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.debug(\"*** paint consent : \",id);\n\n    const handleDenied = (consent) => {\n        syncConsentStatus({\n            scope,\n            typeIdentifier:consent.identifier,\n            status:consent_status.DENIED\n        });\n\n        quizDispatch({\n            case:\"DENIED_CONSENT\",\n            payload:{\n                id:consent.id\n            }\n        });\n    }\n\n    const handleChange= (e) => {\n        quizDispatch({\n            case:\"TOGGLE_CONSENT\",\n            payload:{\n                id:e.target.id\n            }\n        });\n    }\n\n    return(\n        <li>\n            {!consent.granted &&\n                <div className=\"consent-to-grant\">\n                    <Form.Check\n                        custom\n                        type=\"checkbox\"\n                        name={consent.identifier}\n                        id={consent.id}\n                        label={consent.title}\n                        onChange={handleChange}\n                        checked={consent.checked}\n                    />\n                    <i>{consent.description}</i>\n                </div>\n            }\n            {consent.granted &&\n                <p className=\"consent-granted\">\n                    <FontAwesomeIcon icon={['fas','check']}/>\n                    {consent.title}\n                    <FontAwesomeIcon className=\"consent-denied\" icon={['fas','ban']} onClick={()=> handleDenied(consent)}/>\n                    <i>{consent.description}</i>\n                </p>\n            }\n        </li>\n    )\n}\n\nConsent.propTypes={\n    id:PropTypes.string.isRequired,\n    quizState:PropTypes.object.isRequired,\n    quizDispatch:PropTypes.func.isRequired\n};\n\nexport default Consent;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nconst Image = ({path,alt}) =>{\n    const { state} = React.useContext(StoreContext);\n    const {files_endpoint} = state.jContent;\n    return(\n        <img className=\"d-block w-100\"\n             src={`${files_endpoint}${encodeURI(path)}`}\n             alt={alt}/>\n    )\n}\nexport default Image;","import React, {useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\n\nimport ReactPlayer from \"react-player\";\nimport {syncVideoStatus} from \"misc/tracker\";\n\nconst VideoPlayer = (props)=>{\n    const {ownerID,videoURL} = props;\n    const { state } = React.useContext(StoreContext);\n    const {quiz} = state;\n\n    const player = useRef(null);\n\n    const handleVideoStatus = ({status}) => {\n        syncVideoStatus({\n            content:{\n                id:quiz.id,\n                type:quiz.type\n            },\n            parent:ownerID,\n            player,\n            status\n        })\n    }\n\n    // const onReadyHandler = () => {\n    //     console.log(\"onReady seekTo 4.2s\")\n    //     player.current.seekTo(4.2,\"seconds\");\n    // }\n    const onStartHandler = () => {\n        // player.current.seekTo(4.2,\"seconds\");\n    }\n    const onPlayHandler = () => handleVideoStatus({status:\"started\"});\n    const onEndedHandler = () => handleVideoStatus({status:\"end\"});\n    const onPauseHandler = () => handleVideoStatus({status:\"pause\"});\n\n    return (\n        <div className='player-wrapper'>\n            <ReactPlayer\n                ref={player}\n                className='react-player'\n                url={videoURL}\n                controls\n                width='100%'\n                height='100%'\n                // onReady={onReadyHandler}\n                onStart={onStartHandler}\n                // onProgress={(object)=> console.log(\"onProgress : \",object)}\n                onPlay={onPlayHandler}\n                // onSeek={(seconds)=> console.log(\"onSeek : \",seconds)}\n                // onDuration={(seconds)=> console.log(\"onDuration :\",seconds)}\n                onPause={onPauseHandler}\n                onEnded={onEndedHandler}\n            />\n        </div>\n    )\n}\n\nVideoPlayer.propTypes={\n    videoURL:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired\n}\n\nexport default VideoPlayer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\nconst Video = ({url,ownerID}) =>{\n\n\n    return(\n        <VideoPlayer\n            videoURL={url}\n            ownerID={ownerID}\n        />\n    )\n}\nVideo.propTypes={\n    url:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default Video;","import {gql} from 'apollo-boost';\n\nexport const GET_WIDEN_MEDIA = gql`\n    query getWidenMedia($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            media: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                title:displayName(language:$language)\n                imageURL: property(name:\"wden:templatedUrl\"){\n                    value\n                }\n                videoURL: property(name:\"wden:videoStreamURL\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import get from \"lodash.get\";\n\nexport default function(mediaData) {\n// console.log(\"mediaData: \",mediaData);\n    return{\n        //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n        id: get(mediaData, \"id\"),\n        type: get(mediaData, \"type.value\"),\n        imageURL: get(mediaData, \"imageURL.value\"),\n        videoURL: get(mediaData, \"videoURL.value\")\n    }\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\n\n\nconst WidenImage = ({uuid}) => {\n    const _SIZE_ = '{size}';\n    const _SCALE_ = '{scale}';\n    const _QUALITY_ = '{quality}';\n    const width = '1024';\n    const scale = '1';\n    const quality = '72';\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            media.imageURL=media.imageURL\n                .replace(_SIZE_,width)\n                .replace(_SCALE_,scale)\n                .replace(_QUALITY_,quality);\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <img src={`https://via.placeholder.com/${width}x768/09f/fff?text=Loading`} alt=\"loading\"/>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media &&\n            <img className=\"d-block w-100\"\n             src={media.imageURL}\n             alt={media.title}/>\n        }\n        </>\n    )\n}\n\nWidenImage.propTypes={\n    uuid:PropTypes.string.isRequired\n}\n\nexport default WidenImage;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\n\nconst WidenVideo = ({uuid, ownerID}) => {\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media.videoURL &&\n            <VideoPlayer\n                videoURL={media.videoURL}\n                ownerID={ownerID}\n            />\n        }\n        </>\n    )\n}\n\nWidenVideo.propTypes={\n    uuid:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default WidenVideo;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport Image from './components/Image';\nimport Video from './components/Video';\nimport WidenImage from './components/widen/WidenImage';\nimport WidenVideo from './components/widen/WidenVideo';\n\nconst Media = ({id,type,mixins,path,sourceID,alt}) => {\n    const { state } = React.useContext(StoreContext);\n    const {cnd_type,files_endpoint} = state.jContent;\n\n    // console.log(\"Media equals: \",type === cnd_type.WIDEN_IMAGE)\n    let component;\n    switch(type){\n        case cnd_type.WIDEN_IMAGE :\n            component = <WidenImage uuid={id} />\n            break;\n\n        case cnd_type.WIDEN_VIDEO :\n            component = <WidenVideo uuid={id} ownerID={sourceID} />\n            break;\n\n        case cnd_type.EXT_VIDEO:\n            component = <Video url={path} ownerID={sourceID} />\n            break;\n            \n        case cnd_type.JNT_FILE:\n            if(mixins.includes(cnd_type.IMAGE)){\n                component = <Image path={path} alt={alt}/>\n            }else{\n                component = <Video url={files_endpoint+encodeURI(path)} ownerID={sourceID} />\n            }\n            break;\n            \n        default:\n            component = <Image path={path} alt={alt}/>\n            break;\n    }\n    // console.log(\"Media component: \",component)\n    return(component)\n}\n\nMedia.propTypes={\n    id:PropTypes.string,\n    type:PropTypes.string.isRequired,\n    mixins:PropTypes.array.isRequired,\n    path:PropTypes.string,\n    sourceID:PropTypes.string,\n    alt:PropTypes.string\n}\n\nexport default Media;","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nimport {StoreContext} from \"contexts\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Consent from \"components/Consent\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport Media from '../Media'\n\nconst init = variables =>{\n    return {\n        ...variables,\n        consents:[]//list of consent\n    }\n}\n\nconst computeEnableStartBtn = (state) => {\n    const {showNext,workspace,consents} = state;\n\n    if(showNext && workspace !== \"LIVE\")\n        return true;\n\n    const granted = consents.filter( consent => consent.checked || consent.granted );\n    return consents.length === granted.length;\n}\n\n\nfunction reducer(state, action) {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY_CONSENT\":{\n            let {consents} = state;\n            const {consentData,scope,cxs,consent_status} = payload;\n            console.debug(\"[QUIZ] DATA_READY_CONSENT -> consentData :\",consentData);\n\n            const identifier = get(consentData, \"identifier\");\n\n            //compute granted\n            const consentPath = `consents[\"${scope}/${identifier}\"]`;\n            const cxsConsentStatus = get(cxs,`${consentPath}.status`);\n            const cxsConsentRevokeDate = get(cxs,`${consentPath}.revokeDate`);\n            const granted = consent_status.GRANTED === cxsConsentStatus\n                && Date.now() < Date.parse(cxsConsentRevokeDate)\n\n            consents = [...consents,{\n                id : get(consentData, \"id\"),\n                title : get(consentData, \"title\"),\n                description : get(consentData, \"description.value\"),\n                actived : JSON.parse(get(consentData, \"actived.value\", false)),\n                checked : false,\n                identifier,\n                granted\n            }];\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        case \"DENIED_CONSENT\":{\n            const {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] DENIED_CONSENT -> id :\",id);\n\n            return{\n                ...state,\n                consents:consents.map( consent => {\n                    if( consent.id === id)\n                        return {\n                            ...consent,\n                            granted:false\n                        };\n                    return consent\n                }),\n                enableStartBtn:false\n            }\n        }\n        case \"TOGGLE_CONSENT\": {\n            let {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] TOGGLE_CONSENT -> id :\",id);\n\n            consents = consents.map(consent => {\n                if(consent.id === id)\n                    return {\n                        ...consent,\n                        checked:!consent.checked\n                    };\n                return consent\n            });\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        default:\n            throw new Error(`[QUIZ] action case '${action.case}' is unknown `);\n    }\n}\n\nconst Quiz = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n\n    const {quiz,showNext,currentSlide,jContent,cxs} = state;\n    const {consent_status,scope,gql_variables,language_bundle} = jContent;\n\n    const [quizState, quizDispatch] = React.useReducer(\n        reducer,\n        {\n            enableStartBtn: showNext && gql_variables.workspace !== \"LIVE\",\n            workspace:gql_variables.workspace,\n            showNext\n        },\n        init\n    );\n\n    console.debug(\"*** paint quiz : \",quiz.title);\n    const show = currentSlide === quiz.id;\n\n    const onClick = () => {\n        quizState.consents.forEach(consent=>{\n            //already granted nothing to do\n            if(consent.granted)\n                return;\n\n            syncConsentStatus({\n                scope,\n                typeIdentifier:consent.identifier,\n                status:consent_status.GRANTED\n            });\n        })\n\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n    };\n\n    return(\n        <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n            {quiz.media &&\n                <Media id={quiz.media.id}\n                       type={quiz.media.type.value}\n                       mixins={quiz.media.mixins.map(mixin=>mixin.value)}\n                       path={quiz.media.path}\n                       alt={quiz.title}\n                />\n            }\n\n            <div className=\"game4-quiz__caption\">\n                <h2 className=\"text-uppercase\">{quiz.title}\n                    <span className=\"subtitle\">{quiz.subtitle}</span>\n                </h2>\n\n                <div className={\"duration\"}>\n                    <FontAwesomeIcon icon={['far','clock']} />\n                    {quiz.duration}\n                </div>\n\n                <div className=\"lead\" dangerouslySetInnerHTML={{__html:quiz.description}}></div>\n\n                <Button variant=\"game4-quiz\"\n                        onClick={onClick}\n                        disabled={!quizState.enableStartBtn}>\n                    {language_bundle && language_bundle.btnStart}\n                </Button>\n            </div>\n            {\n                quiz.consents.length > 0 && cxs &&\n                <div className=\"game4-quiz__consent\">\n                    <h5>{language_bundle && language_bundle.consentTitle}</h5>\n                    <ul>\n                        {\n                            quiz.consents.map( consent =>{\n                                if(consent.actived)\n                                    return <Consent\n                                        key={consent.id}\n                                        id={consent.id}\n                                        quizState={quizState}\n                                        quizDispatch={quizDispatch}\n                                    />\n                                return <></>\n                            })\n                        }\n                    </ul>\n                </div>\n            }\n        </div>\n    );\n}\n\n// Quiz.propTypes={}\n\nexport default Quiz;","import {gql} from 'apollo-boost';\n\n// const propsFragment = gql`\n//     fragment props on JCRNode{\n//         id:uuid\n//         key: property(language:$language, name:\"game4:quizKey\"){\n//             value\n//         }\n//         title:displayName(language:$language)\n//         subtitle: property(language:$language, name:\"game4:subtitle\"){\n//             value\n//         }\n//         description:property(language:$language,name:\"game4:description\"){\n//             value\n//         }\n//         duration:property(language:$language,name:\"game4:duration\"){\n//             value\n//         }\n//         cover: property(language:$language,name:\"game4:cover\"){\n//             node: refNode {\n//                 path\n//             }\n//         }\n//         consent: property(language:$language,name:\"game4:consentType\"){\n//             node: refNode {\n//                 uuid\n//             }\n//         }\n//         children{\n//             nodes {\n//                 id:uuid\n//                 type: primaryNodeType{\n//                     value:name\n//                 }\n//             }\n//         }\n//     }\n// `\n\nexport const GET_QNA = gql`\n    query getQna($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            qna: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                question: property(language:$language, name:\"game4:question\"){\n                    value\n                }\n                help: property(language:$language,name:\"game4:help\"){\n                    value\n                }\n                nbExpectedAnswer: property(name:\"game4:nbExpectedAnswer\"){\n                    value\n                }\n                answers: property(language:$language,name:\"game4:answers\"){\n                    values\n                }\n                randomSelection: property(name:\"game4:randomSelection\"){\n                    value\n                }\n                notUsedForScore: property(name:\"game4:notUsedForScore\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                jExpField2Map: property(name:\"game4:jExpProperty\"){\n                    value\n                }\n\n            }\n        }\n    }\n`\n// ${propsFragment}\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Form} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\nconst Answer = (props) =>{\n    const {qna, qnaDispatch,id} = props;\n    const [answer] = qna.answers.filter(answer => answer.id === id);\n\n    const isValid = answer.isAnswer || (qna.notUsedForScore ? answer.checked : false);\n    const handleChange = () =>\n        qnaDispatch({\n            case:\"TOGGLE_ANSWER\",\n            payload:{\n                answer\n            }\n        });\n\n    return(\n        <li className={answer.checked?\"checked\":\"\"}>\n            <div className={`result ${isValid?\"valid\":\"\"}`}>\n                {isValid &&\n                    <FontAwesomeIcon icon={['fas','check']}/>\n                }\n                {!isValid &&\n                    <FontAwesomeIcon icon={['fas','times']}/>\n                }\n            </div>\n            <Form.Check\n                custom\n                type={qna.inputType}\n                name={qna.id}\n                id={answer.id}\n                label={answer.label}\n                onChange={handleChange}\n                checked={answer.checked}\n            />\n        </li>\n    );\n};\n\nAnswer.propTypes={\n    qna:PropTypes.object.isRequired,\n    qnaDispatch:PropTypes.func.isRequired,\n    id:PropTypes.string.isRequired,\n}\n\nexport default Answer;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace\n}","import get from \"lodash.get\";\nimport {getRandomString} from \"misc/utils\";\n\nexport default function(qnaData){\n    const randomSelection=JSON.parse(get(qnaData, \"randomSelection.value\", false));\n    const answers= get(qnaData, \"answers.values\", []).map(answer=>{\n        const controlledAnswer = JSON.parse(answer);\n        return {\n            ...controlledAnswer,\n            id:getRandomString(5,\"#aA\"),\n            checked:false\n        }\n\n        // const id = getRandomString(5,\"#aA\");\n        // const valid = answer.indexOf(quiz_validMark) === 0;\n        // if(valid)\n        //     answer = answer.substring(quiz_validMark.length+1);//+1 is for space between mark and label\n\n        // return {id,label:answer,checked:false,valid}\n    })\n\n    if(randomSelection)\n        answers.sort( (a,b) => a.id > b.id );\n\n    const inputType = answers.filter(answer => answer.isAnswer).length > 1 ?\"checkbox\":\"radio\"\n\n    return {\n        id: get(qnaData, \"id\"),\n        title: get(qnaData, \"title\"),\n        question: get(qnaData, \"question.value\", \"\"),\n        help: get(qnaData, \"help.value\", \"\"),\n        notUsedForScore: JSON.parse(get(qnaData, \"notUsedForScore.value\", false)),\n        // cover: get(qnaData, \"cover.node.path\", \"\"),\n        media: get(qnaData, \"media.node\", {}),\n        jExpField2Map: get(qnaData, \"jExpField2Map.value\", \"\"),\n        randomSelection,\n        answers,\n        inputType\n    }\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport {GET_QNA} from \"./QnaGraphQL\";\nimport Answer from \"./Answer\";\n\nimport QnaMapper from \"components/Qna/QnaModel\";\nimport {syncVisitorData} from \"misc/tracker\";\nimport Media from \"components/Media\";\n\nconst initialQNA = {\n    enableSubmit:false,\n}\n\nconst reducer = (qna, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            // const {qnaData,quiz_validMark} = payload;\n            const {qnaData} = payload;\n            console.debug(\"[QNA] DATA_READY -> qnaData :\",qnaData);\n\n            return {\n                ...qna,\n                ...QnaMapper(qnaData)\n            }\n        }\n        case \"TOGGLE_ANSWER\": {\n            const {answer} = payload;//answer id\n            console.debug(\"[QNA] TOGGLE_ANSWER -> answer :\",answer);\n            let {answers} = qna;\n            if(qna.inputType === \"radio\")\n                answers = answers.map( answer =>{ return {...answer,checked:false} });\n\n            answers = answers.map(_answer => {\n                if(_answer.id === answer.id)\n                    return {\n                        ..._answer,\n                        checked:!_answer.checked\n                    };\n                return _answer\n            });\n            const enableSubmit = answers.filter(answer => answer.checked).length > 0\n\n            return{\n                ...qna,\n                answers,\n                enableSubmit\n            }\n        }\n        case \"RESET\":{\n            const {qnaData} = payload;\n            console.debug(\"[QNA] RESET -> qnaData :\",qnaData);\n            return{\n                ...initialQNA,\n                ...QnaMapper(qnaData)\n            }\n        }\n        default:\n            throw new Error(`[QNA] action case '${action.case}' is unknown `);\n    };\n}\n\nconst Qna = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n    const { currentSlide,jContent,reset } = state;\n    const { gql_variables,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    const {loading, error, data} = useQuery(GET_QNA, {\n        variables:variables,\n    });\n\n    const [qna, qnaDispatch] = React.useReducer(\n        reducer,\n        initialQNA\n    );\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [loading,data]);\n\n    React.useEffect(() => {\n        if(reset && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"RESET\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [reset,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint qna : \",qna.title);\n\n    const show = currentSlide === props.id;\n\n    const handleSubmit = () => {\n        if(qna.notUsedForScore){\n            dispatch({\n                case:\"NEXT_SLIDE\"\n            });\n        }else{\n            dispatch({\n                case:\"SHOW_RESULT\",\n                payload:{\n                    result: qna.answers\n                            .filter(answer => answer.isAnswer)\n                            .reduce( (test,answer) => test && answer.checked,true)\n                }\n            });\n        }\n        // dispatch({\n        //     case:\"SHOW_RESULT\",\n        //     payload:{\n        //         result:qna.notUsedForScore ?\n        //                 true :\n        //                 qna.answers\n        //                 .filter(answer => answer.isAnswer)\n        //                 .reduce( (test,answer) => test && answer.checked,true)\n        //     }\n        // });\n\n        // console.log(\"[handleSubmit] qna.jExpField2Map => \",qna.jExpField2Map);\n        if(qna.jExpField2Map){\n            //Get response cdpValue\n            //Note case multiple is manage by comma separated case\n            const values =\n                qna.answers\n                .filter(answer => answer.checked)\n                .reduce(\n                    (item,answer,index) =>{\n                        if(answer.cdpValue && answer.cdpValue.length > 0) {\n                            if (index === 0) {\n                                //workaround\n                                let cdpValue = answer.cdpValue;\n                                if(cdpValue==='true') cdpValue=true;\n                                if(cdpValue==='false') cdpValue=false;\n                                item = cdpValue\n                            } else {\n                                item = `${item}, ${answer.cdpValue}`\n                            }\n                        }\n                        return item;\n                    },null\n                );\n            // console.debug(\"[handleSubmit] update : \",qna.jExpField2Map,\" with values : \",values);\n\n            //if tracker is not initialized the track event is not send\n            syncVisitorData({\n                propertyName:`properties.${qna.jExpField2Map}`,\n                propertyValue:values\n            })\n        }\n    }\n    // <img className=\"d-block w-100\"\n    //      src={`${files_endpoint}${encodeURI(qna.cover)}`}\n    //      alt={qna.title}/>\n    return(\n        <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n            {qna.media &&\n                <Media id={qna.media.id}\n                       type={qna.media.type.value}\n                       mixins={qna.media.mixins.map(mixin=>mixin.value)}\n                       path={qna.media.path}\n                       alt={qna.title}\n                />\n\n            }\n\n            <div className=\"game4-quiz__caption d-none d-md-block\">\n                <fieldset>\n                    <legend>{qna.question}\n                        <i>{qna.help}</i>\n                    </legend>\n                    {qna.answers &&\n                        <ol className=\"game4-quiz__answer-list\">\n                            {qna.answers.map( answer =>\n                                <Answer\n                                    key={answer.id}\n                                    id={answer.id}\n                                    qna={qna}\n                                    qnaDispatch={qnaDispatch}\n                                />)\n                            }\n                        </ol>\n                    }\n                </fieldset>\n\n                <Button variant=\"game4-quiz\"\n                        onClick={handleSubmit}\n                        disabled={!qna.enableSubmit}>\n                    {language_bundle && language_bundle.btnSubmit}\n                </Button>\n\n            </div>\n        </div>\n    );\n}\n\nQna.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Qna;","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:masterQnaCover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_WARMUP = gql`\n    query getWarmup($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            warmup: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                content: property(language:$language,name:\"game4:content\"){\n                    value\n                }\n                duration: property(name:\"game4:qnaDuration\"){\n                    value\n                }\n                videoLink: property(name:\"game4:videoLink\"){\n                    value\n                }\n                videoExtPath: property(language:$language,name:\"game4:videoExtPath\"){\n                    value\n                }\n                videoIntPath: property(language:$language,name:\"game4:videoIntPath\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n    \n            }\n        }\n    }\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nimport get from \"lodash.get\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport {StoreContext} from \"contexts\";\nimport {GET_WARMUP} from \"./WarmupGraphQL\";\nimport Qna from \"components/Qna\";\nimport WarmupMapper from \"components/Warmup/WarmupModel\";\nimport Media from \"components/Media\";\n\nconst Warmup = (props) => {\n    const { state, dispatch } = React.useContext(StoreContext);\n    const { currentSlide,jContent} = state;\n    const { gql_variables,cnd_type,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    // const query = loader(\"./Warmup.graphql.disabled\");\n    const {loading, error, data} = useQuery(GET_WARMUP, {\n        variables:variables,\n    });\n\n    const [warmup, setWarmup] = React.useState({childNodes:[]});\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const warmup = WarmupMapper(get(data, \"response.warmup\", {}),cnd_type)\n            dispatch({\n                case:\"ADD_SLIDES\",\n                payload:{\n                    slides:warmup.childNodes.map(node=>node.id),\n                    parentSlide:warmup.id\n                }\n            });\n            // console.debug(\"warmup.id : \",warmup.id,\"; warmup.video : \",warmup.video);\n            setWarmup(warmup);\n        }\n    },[loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint warmup : \",warmup.title);\n\n    const show = currentSlide === props.id;\n    const handleCLick = () =>\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n\n    return(\n        <>\n            <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n                {warmup.media &&\n                    <Media id={warmup.media.id}\n                           type={warmup.media.type.value}\n                           mixins={warmup.media.mixins.map(mixin=>mixin.value)}\n                           path={warmup.media.path}\n                           alt={warmup.title}\n                    />\n                }\n\n                <div className=\"game4-quiz__caption d-none d-md-block\">\n                    <h2 className=\"text-uppercase\">{warmup.title}<span className=\"subtitle\">{warmup.subtitle}</span></h2>\n                    <div className=\"lead\" dangerouslySetInnerHTML={{__html:warmup.content}}></div>\n                    { warmup.video != null &&\n                        <div>\n                            <Media id={warmup.video.id || null}\n                                   type={warmup.video.type.value}\n                                   path={warmup.video.path}\n                                   sourceID={warmup.id}\n                            />\n                        </div>\n                    }\n                    <Button variant=\"game4-quiz\"\n                            onClick={ handleCLick }>\n                        {/*disabled={!props.showNext}*/}\n                        {language_bundle && language_bundle.btnQuestion}\n                    </Button>\n                </div>\n            </div>\n            {warmup.childNodes.map( node =>\n                <Qna\n                    key={node.id}\n                    id={node.id}\n                />\n            )}\n        </>\n    );\n}\n\nWarmup.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Warmup;","import get from \"lodash.get\";\n\nexport default function(warmupData,cnd_type) {\n    let video = null;\n    const videoLink = get(warmupData, \"videoLink.value\", \"\");\n    const videoIntPath = get(warmupData, \"videoIntPath.node\");\n\n    if(videoLink)\n        video= videoIntPath ?\n            videoIntPath:{\n                id:null,\n                type:{\n                    value:cnd_type.EXT_VIDEO\n                },\n                path:get(warmupData, \"videoExtPath.value\")\n            }\n\n\n    // cover: get(warmupData, \"cover.node.path\", \"\"),\n    return{\n        id: get(warmupData, \"id\", \"\"),\n        title: get(warmupData, \"title\", \"\"),\n        subtitle: get(warmupData, \"subtitle.value\", \"\"),\n        content: get(warmupData, \"content.value\", \"\"),\n        duration: get(warmupData, \"duration.value\", \"\"),\n        media: get(warmupData, \"media.node\", {}),\n        childNodes: get(warmupData,\"children.nodes\",[])\n                    .map(node => {\n                        return{\n                            id: get(node, \"id\"),\n                            type: get(node, \"type.value\")\n                        }\n                    }),\n        video\n    }\n}","import React from 'react';\n// import PropTypes from \"prop-types\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport {StoreContext} from \"contexts\";\nimport {Button} from \"react-bootstrap\";\nimport Media from \"components/Media\";\n\nconst Score = (props) => {\n    const { state,dispatch } = React.useContext(StoreContext);\n    const { quiz,currentSlide,score,scoreIndex,jContent } = state;\n    const { language_bundle } =  jContent;\n\n    const show = currentSlide === scoreIndex;\n\n    const onClick = () => {\n        dispatch({\n            case:\"RESET\"\n        });\n    }\n\n    // console.log(\"Score props.show :\",props.show);\n    return(\n        <div className={`game4-quiz__item show-overlay ${show ? 'active':''} `}>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type.value}\n                   mixins={quiz.media.mixins.map(mixin=>mixin.value)}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n            <div className=\"game4-quiz__caption d-none d-md-block\">\n                <h2 className=\"text-uppercase\">{quiz.title}<span className=\"subtitle\">{quiz.subtitle}</span></h2>\n                <div className=\"game4-quiz__score-result col-6 offset-3 col-md-4 offset-md-4 mb-5\">\n                    <CircularProgressbar value={score} text={`${score}%`}/>\n                </div>\n\n                <Button variant=\"game4-quiz\"\n                        onClick={onClick}>\n                    {language_bundle && language_bundle.btnReset}\n                </Button>\n            </div>\n        </div>\n    );\n}\n\n// Score.propTypes={}\n\nexport default Score;","import React from 'react'; //useEffect,useContext\nimport PropTypes from \"prop-types\";\n\nimport {Button, Container, Row} from 'react-bootstrap';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faHandPointLeft,faCheckDouble,faCheck,faTimesCircle,faTimes,faBan } from '@fortawesome/free-solid-svg-icons';\nimport { faClock,faCheckCircle} from '@fortawesome/free-regular-svg-icons';\n\n//todo voir si je peux le desactiver dynamiquement\n//todo comment bootstrap to build to jahia view\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'components/App.scss';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport {GET_QUIZ} from \"components/Quiz/QuizGraphQL.js\";\nimport Quiz from \"components/Quiz\"\nimport Qna from \"components/Qna\";\nimport Warmup from \"components/Warmup\";\nimport Score from \"components/Score\";\nimport {syncTracker} from \"misc/tracker\";\n\n\nlibrary.add(\n    fab,\n    faClock,\n    faHandPointLeft,\n    faCheckCircle,\n    faCheckDouble,\n    faCheck,\n    faTimesCircle,\n    faTimes,\n    faBan\n);\n\nconst Indicator = (props) =>{\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {currentSlide} = state;\n    const {id,enabled} = props;\n\n    const active = currentSlide === id;\n    const handleCLick = () =>{\n        if(enabled)\n            dispatch({\n                case:\"SHOW_SLIDE\",\n                payload:{\n                    slide:id\n                }\n            });\n    };\n\n    return(\n        <li className={`${active ? 'active':''} ${enabled ? 'clickable':''}`}\n            onClick={handleCLick}>\n        </li>\n    )\n}\n\nIndicator.propTypes={\n    id:PropTypes.string.isRequired,\n    enabled:PropTypes.bool.isRequired\n}\n\nconst initLanguageBundle = quizData => {\n    const keys = [\n        \"btnStart\",\n        \"btnSubmit\",\n        \"btnQuestion\",\n        \"btnNextQuestion\",\n        \"btnShowResults\",\n        \"btnReset\",\n        \"consentTitle\",\n        \"correctAnswer\",\n        \"wrongAnswer\"\n    ];\n    return keys.reduce((bundle,key)=>{\n        bundle[key] = get(quizData,`${key}.value`);\n        // console.debug(\"bundle: \",bundle);\n        return bundle;\n    },{});\n}\n\n//NOPE ! TODO jCustomer/context.json -> context. jContext.value = {context,jCustomer}\nconst App = (props)=> {\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        quiz,\n        slideSet,\n        currentResult,\n        showResult,\n        showNext,\n        showScore\n    } = state;\n\n    const {loading, error, data} = useQuery(GET_QUIZ, {\n        variables:jContent.gql_variables,\n    });\n\n    React.useEffect(() => {\n        console.debug(\"App Quiz init !\");\n        if(loading === false && data){\n            console.debug(\"App Quiz init Set Data!\");\n\n            const quizData = get(data, \"response.quiz\", {});\n            const quizKey = get(quizData, \"key.value\");\n\n            jContent.language_bundle = initLanguageBundle(quizData);\n            console.debug(\"jContent.language_bundle: \",jContent.language_bundle);\n\n            dispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    quizData\n                }\n            });\n\n            //init unomi tracker\n            if(jContent.gql_variables.workspace === \"LIVE\")\n                syncTracker({\n                    scope: jContent.scope,\n                    url: jContent.cdp_endpoint,\n                    sessionId:`qZ-${quizKey}-${Date.now()}`,\n                    dispatch\n                });\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    const handleNextSlide = () =>\n        dispatch({\n            case:\"NEXT_SLIDE\"\n        });\n\n    const handleShowScore = () =>\n        dispatch({\n            case:\"SHOW_SCORE\"\n        });\n\n    return (\n        <Container>\n            <Row>\n                <div className={`game4-quiz slide ${showResult?\"show-result\":\"\"}`}>\n                    {jContent.language_bundle &&\n                        <div className=\"game4-quiz__header\">\n\n                                <span className=\"game4-quiz__header-result\">\n                                    {currentResult &&\n                                        jContent.language_bundle.correctAnswer}\n                                    {!currentResult &&\n                                        jContent.language_bundle.wrongAnswer}\n                                </span>\n                                {!showScore &&\n                                    <Button variant=\"game4-quiz-header\"\n                                        onClick={handleNextSlide}\n                                        disabled={!showNext}>\n                                        {jContent.language_bundle.btnNextQuestion}\n                                    </Button>\n                                }\n                                {showScore &&\n                                    <Button variant=\"game4-quiz-header\"\n                                        onClick={handleShowScore}\n                                        disabled={!showNext}>\n                                        {jContent.language_bundle.btnShowResults}\n                                    </Button>\n                                }\n\n                        </div>\n                    }\n                    <ol className=\"game4-quiz__indicators\">\n                        {slideSet.map( itemId =>\n                            <Indicator\n                                key={itemId}\n                                id={itemId}\n                                enabled={jContent.allow_indicator_browsing}\n                            />\n                        )}\n                    </ol>\n\n                    <div className=\"game4-quiz__inner\">\n                        <Quiz\n                            key={quiz.id}\n                        />\n                        {quiz.childNodes.map( (node,i) => {\n                            if(node.type === jContent.cnd_type.QNA)\n                                return <Qna\n                                        key={node.id}\n                                        id={node.id}\n                                    />\n\n                            if(node.type === jContent.cnd_type.WARMUP)\n                                return <Warmup\n                                    key={node.id}\n                                    id={node.id}\n                                />\n                            return <p className=\"text-danger\">node type {node.type} is not supported</p>\n                            })\n                        }\n                        <Score/>\n                    </div>\n                </div>\n            </Row>\n        </Container>\n    );\n};\n\nApp.propTypes={}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( (error,i) =>\n                    <li>\n                        {error.dataPath} : {error.message}\n                    </li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const validMark=\"[*]\";\nconst score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\nconst cnd_type = {\n    QNA:\"game4nt:qna\",\n    WARMUP:\"game4nt:warmup\",\n    WIDEN_IMAGE:\"wdennt:image\",\n    WIDEN_VIDEO:\"wdennt:video\",\n    EXT_VIDEO:'ext:video',\n    JNT_FILE:'jnt:file',\n    IMAGE:'jmix:image'\n}\nconst consent_status={\n    GRANTED:\"GRANTED\",\n    DENIED:\"DENIED\",\n    REVOKED:\"REVOKED\"\n};\n\nexport {\n    workspace,\n    cnd_type,\n    validMark,\n    consent_status,\n    score_splitPattern\n}","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nexport default{\n    context:{\n        title:\"context validation schema \",\n        description:\"context is an object provided by the page in charge to load the app\",\n        // definitions: {\n        //     jContent:jContent,\n        //     jCustomer:jCustomer,\n        //     gql:gql\n        // },\n        type:\"object\",\n        // properties:{\n        //     jContent:{$ref:\"#jContent\"},\n        //     gql:{$ref:\"#gql\"},\n        //     jCustomer:{$ref:\"#jCustomer\"}\n        // },\n        properties:{\n            host:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n            },\n            allow_indicator_browsing:{\n                type:\"boolean\",\n                default:false\n            },\n            workspace:{\n                type:\"string\",\n                enum:workspace,\n                default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n            },\n            scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n            files_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n            },\n            gql_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n            },\n            gql_authorization:{\n                type:\"string\",\n                // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n            },\n            gql_variables:{\n                type:\"object\",\n                properties:{\n                    id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n                    language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n                },\n                required: [\"id\", \"language\"]\n            },\n            cdp_endpoint:{\n                type:\"string\",\n                format:\"uri\",\n                default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n            }//,\n            // language_bundle:{\n            //     type:\"object\",\n            //     properties:{\n            //         btnStart:{type:\"string\"},//\"Démarrer\",\n            //         btnSubmit:{type:\"string\"},//\"Soumettre\",\n            //         btnQuestion:{type:\"string\"},//\"Question\",\n            //         btnNextQuestion:{type:\"string\"},//\"Question suivante\",\n            //         btnShowResults:{type:\"string\"},//\"Mon score\",\n            //         consentTitle:{type:\"string\"},//\"Consentement\",\n            //         correctAnswer:{type:\"string\"},//\"Correcte\",\n            //         wrongAnswer:{type:\"string\"}//\"Incorrecte\"\n            //     },\n            //     required: [\n            //         \"btnStart\",\n            //         \"btnSubmit\",\n            //         \"btnQuestion\",\n            //         \"btnNextQuestion\",\n            //         \"btnShowResults\",\n            //         \"consentTitle\",\n            //         \"correctAnswer\",\n            //         \"wrongAnswer\"\n            //     ],\n            //     additionalProperties:false\n            // }\n        },\n        required: [\n            \"host\",\n            \"allow_indicator_browsing\",\n            \"workspace\",\n            \"scope\",\n            \"files_endpoint\",\n            \"gql_endpoint\",\n            // \"gql_authorization\",\n            \"gql_variables\",\n            \"cdp_endpoint\",\n            // \"language_bundle\"\n        ],\n        additionalProperties:false\n    }\n}","import * as Ajv from \"ajv\";\nimport schema from  \"./lib/schema\"\nimport {getGQLWorkspace} from \"misc/utils\"\nimport {cnd_type,validMark,consent_status,score_splitPattern} from \"douane/lib/config\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(schema.context, context);\n    if (!valid)\n        // throw new Error(`An error occurred during the validation of context object, errors : ${JSON.stringify(ajv.errors)}`);\n        throw {item:\"Context configuration object\",errors:ajv.errors};\n\n    context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    context.cnd_type=cnd_type;\n    context.consent_status=consent_status;\n    context.quiz_validMark=validMark;\n    context.score_splitPattern=score_splitPattern;\n    return context;\n}\n\nexport {\n    contextValidator\n}","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nimport {getRandomString} from \"misc/utils\";\nimport {syncQuizScore} from \"misc/tracker\";\nimport QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = jContent => {\n    return {\n        jContent,\n        quiz:{consents:[],childNodes:[]},\n        resultSet:[],//array of boolean, order is the same a slideSet\n        currentResult:false,//previously result\n        slideSet:[],//previously slideIndex\n        currentSlide:null,//previously index\n        showResult:false,\n        showNext:false,\n        showScore:false,\n        max:-1,\n        score:0,\n        cxs:null,\n        reset:false,\n        scoreIndex:getRandomString(5,\"#aA\")\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    const showNext = ({slideSet,max,slide}) =>\n        slideSet.indexOf(slide) < max;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            //prepare slideIds\n            const {quizData} = payload;\n            console.debug(\"[STORE] DATA_READY - quizData: \",quizData);\n            const quiz = QuizMapper(quizData);\n\n            const slideSet = [quiz.id];\n            quiz.childNodes.forEach(node => slideSet.push(node.id));\n            slideSet.push(state.scoreIndex);\n\n            const max = slideSet.length -1;\n\n            return {\n                ...state,\n                quiz,\n                currentSlide:quiz.id,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:quiz.id}),\n                max\n            };\n        }\n        case \"ADD_CXS\": {\n            const cxs = payload.cxs;\n            console.debug(\"[STORE] ADD_CXS - cxs: \",cxs);\n            return {\n                ...state,\n                cxs\n            };\n        }\n        case \"ADD_SLIDES\": {\n            const slides = payload.slides;\n            const parentSlide = payload.parentSlide;\n            let slideSet = state.slideSet;\n\n            if (parentSlide && slideSet.includes(parentSlide)) {\n                const position = slideSet.indexOf(parentSlide) + 1;\n                slideSet.splice(position, 0, ...slides);\n            } else {\n                slideSet = [...slideSet, ...slides];\n            }\n\n            const max = slideSet.length -1;\n\n            console.debug(\"[STORE] ADD_SLIDE - slides: \",slides,\" parentSlide: \",parentSlide);\n            return {\n                ...state,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:state.currentSlide}),\n                max\n            };\n        }\n        case \"NEXT_SLIDE\":{\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            console.debug(\"[STORE] NEXT_SLIDE - currentIndex: \",currentIndex,\", max : \",state.max);\n\n            let nextSlide = state.currentSlide;\n\n            if(currentIndex  < state.max )\n                nextSlide = state.slideSet[nextIndex];\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showResult:false,\n                reset:false\n            };\n        }\n        case \"SHOW_SLIDE\": {\n            const slide = payload.slide\n            console.debug(\"[STORE] SHOW_SLIDE - slide: \",slide);\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide})\n            };\n        }\n        case \"SHOW_RESULT\": {\n            const currentResult = payload.result;\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const showScore = currentIndex === state.max-1;\n            console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n\n            return {\n                ...state,\n                showScore,\n                resultSet: [...state.resultSet, currentResult],\n                currentResult,\n                showResult: true\n            };\n        }\n        case \"SHOW_SCORE\": {\n            console.debug(\"[STORE] SHOW_SCORE\");\n            const [slide] = state.slideSet.slice(-1);\n\n            const goodAnswers = state.resultSet.filter(result => result).length;\n            const answers = state.resultSet.length;\n            const score = Math.floor((goodAnswers/answers)*100);\n\n            syncQuizScore({\n                quizKey:state.quiz.key,\n                split:state.jContent.score_splitPattern,\n                quizScore:score\n            });\n\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide}),\n                showResult:false,\n                score\n            };\n        }\n        case \"RESET\": {\n            console.debug(\"[STORE] RESET\");\n\n            const [currentSlide] = state.slideSet.slice(0,1);\n            console.debug(\"[STORE] RESET slideSet\",state.slideSet);\n\n            return {\n                ...state,\n                currentSlide,\n                resultSet:[],\n                currentResult:false,\n                reset:true\n            }\n        }\n        default:\n            throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.jContent,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import get from \"lodash.get\";\n\nexport default function(quizData) {\n    return{\n        //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n        id: get(quizData, \"id\"),\n        type: get(quizData, \"type.value\"),\n        key : get(quizData, \"key.value\", {}),\n        title: get(quizData, \"title\", \"\"),\n        subtitle: get(quizData, \"subtitle.value\", \"\"),\n        description: get(quizData, \"description.value\", \"\"),\n        duration: get(quizData, \"duration.value\", \"\"),\n        //cover: get(quizData, \"cover.node.path\", \"\"),\n        media: get(quizData, \"media.node\", {}),\n        consents: get(quizData, \"consents.nodes\", []).map(node =>{\n            return {\n                id:get(node,\"id\"),\n                actived:JSON.parse(get(node,\"actived.value\"))\n            }\n        }),\n        childNodes : get(quizData,\"children.nodes\",[]).map(node =>{\n            return {\n                id: get(node, \"id\"),\n                type: get(node, \"type.value\")\n            };\n        }),\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport AjvError from \"components/Error/Ajv\";\n\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport {contextValidator} from \"douane\";\n\nimport {Store} from \"components/Store\";\n\nimport 'index.css';\n\nconst render=(target,context)=>{\n  try{\n    // console.log(\"context : \",JSON.stringify(context));\n    context = contextValidator(context);\n    const headers={};\n    if(context.gql_authorization)\n      headers.Authorization=context.gql_authorization;\n\n    const client = new ApolloClient({\n      uri:context.gql_endpoint,\n      headers\n    })\n\n    // console.log(\"lesson : \",src.data.jcr.lesson);\n    ReactDOM.render(\n      <Store jContent={context}>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </Store>,\n      document.getElementById(target)\n    );\n\n  }catch(e){\n    console.error(\"error : \",e);\n    //TODO create a generic error handler\n    ReactDOM.render(\n      <AjvError\n        item={e.item}\n        errors={e.errors}\n      />,\n      document.getElementById(target)\n    );\n  }\n}\n\nwindow.quizUIApp = render;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}