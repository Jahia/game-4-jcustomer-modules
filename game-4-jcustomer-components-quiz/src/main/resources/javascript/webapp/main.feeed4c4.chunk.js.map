{"version":3,"sources":["contexts/index.js","components/Quiz/QuizGraphQL.js","components/Consent/ConsentGraphQL.js","misc/tracker.js","components/Consent/Consent.jsx","components/Media/components/Image.jsx","components/VideoPlayer/VideoPlayer.jsx","components/Media/components/Video.jsx","components/Media/components/widen/WidenMediaGraphQL.js","components/Media/components/widen/WidenMediaModel.js","components/Media/components/widen/WidenImage.jsx","components/Media/components/widen/WidenVideo.jsx","components/Media/Media.jsx","components/cssSharedClasses.jsx","components/Header/Indicator/Indicator.jsx","misc/utils.js","components/Header/Header.jsx","components/Marketo/LoadScript.jsx","components/Quiz/Quiz.jsx","components/Qna/QnaGraphQL.js","components/Qna/Answer/Answer.jsx","components/Qna/QnaModel.js","components/Qna/Qna.jsx","components/Warmup/WarmupGraphQL.js","components/Warmup/WarmupModel.js","components/Warmup/Warmup.jsx","components/Score/personalized/PersonalizedGraphQL.js","components/Score/personalized/Personalized.jsx","components/Score/percentage/Percentage.jsx","components/Score/Score.jsx","components/theme.js","components/Transition/Transition.jsx","components/App.jsx","components/Error/Ajv.jsx","misc/serviceWorker.js","douane/lib/config.js","douane/lib/schema/context.js","exceptions/ContextException.js","douane/index.js","components/Quiz/QuizModel.js","store/Store.jsx","index.js"],"names":["StoreContext","React","createContext","GET_QUIZ","gql","GET_CONSENT","syncConsentStatus","typeIdentifier","scope","status","statusDate","Date","revokeDate","setFullYear","getFullYear","console","debug","uTracker","track","consent","toISOString","useStyles","makeStyles","theme","granted","display","flexWrap","alignItems","margin","marginRight","flexBasis","fontSize","denied","cursor","color","palette","error","main","width","marginLeft","Consent","props","classes","id","quizState","quizDispatch","consents","filter","state","useContext","jContent","cxs","gql_variables","consent_status","variables","Object","assign","useQuery","loading","data","useEffect","consentData","get","case","payload","FormGroup","aria-label","row","FormControlLabel","value","checked","control","Checkbox","label","title","labelPlacement","onChange","e","target","Typography","className","style","component","description","onClick","identifier","DENIED","handleDenied","Image","path","alt","files_endpoint","src","encodeURI","playerWrapper","VideoPlayer","ownerID","videoURL","quiz","player","useRef","handleVideoStatus","content","parent","type","game4Quiz","game4Warmup","game4Video","duration","current","getDuration","currentTime","getCurrentTime","syncVideoStatus","ref","url","controls","height","onStart","onPlay","onPause","onEnded","Video","GET_WIDEN_MEDIA","MediaMapper","mediaData","imageURL","WidenImage","uuid","useState","media","setMedia","replace","WidenVideo","Media","mixins","sourceID","cnd_type","WIDEN_IMAGE","WIDEN_VIDEO","EXT_VIDEO","JNT_FILE","includes","IMAGE","textUppercase","textTransform","subtitle","backgroundColor","primary","spacing","marginTop","item","minHeight","geometry","backfaceVisibility","objectFit","position","zIndex","flexDirection","wait","showOverlay","top","right","bottom","left","background","overlay","start","startMiddle","endMiddle","end","caption","maxWidth","breakpoints","values","lg","flexGrow","paddingRight","padding","paddingLeft","paddingBottom","between","xs","captionMain","text","borderColor","dark","textShadow","boxShadow","typography","body1","fontWeight","lineHeight","marginBottom","border","borderRadius","secondary","minWidth","fontFamily","indicator","boxSizing","flex","spacer","textIndent","common","white","backgroundClip","borderTop","hitAreaHeight","borderBottom","opacity","transition","transitions","create","long","easing","ease","grey","Indicator","dispatch","currentSlide","enabled","active","classnames","slide","getRandomString","length","format","mask","indexOf","result","i","Math","floor","random","manageTransition","transitionIsEnabled","transitionTimeout","setTimeout","header","justifyContent","headerIndicators","listStyle","headerResult","overflow","standard","headerText","fontWeightBold","Header","slideSet","currentResult","showNext","showScore","browsingIsEnabled","handleNextSlide","handleShowScore","map","itemId","language_bundle","variant","correctAnswer","wrongAnswer","Button","disabled","btnShowResults","btnNextQuestion","useMarketo","baseUrl","munchkinId","formId","callback","whenReadyCallback","handleSuccess","scriptLoaded","setScriptLoaded","window","MktoForms2","loadForm","whenReady","script","document","createElement","onload","body","appendChild","appendScript","consentTitle","textDecoration","cxsError","init","computeEnableStartBtn","workspace","reducer","action","consentPath","cxsConsentStatus","cxsConsentRevokeDate","GRANTED","now","parse","actived","JSON","enableStartBtn","Error","MktoForm","Quiz","sharedClasses","cssSharedClasses","mktgForm","useReducer","show","forEach","handleMktoFormSuccess","targetPageUrl","handleMktoForm","form","_cxs","addHiddenFields","location","href","profileId","onSuccess","mixin","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","ADD_ATTR","constructor","keys","MARKETO","mktoConfig","btnStart","getStartComponent","getConsent","GET_QNA","answerGroup","checkedAnswer","checkGroup","easeOut","borderStyle","borderWidth","verticalAlign","labelGroup","Answer","qna","qnaDispatch","answers","answer","isValid","isAnswer","notUsedForScore","inputType","Radio","QnAMapper","qnaData","randomSelection","controlledAnswer","sort","a","b","question","help","jExpField2Map","questionGroup","textAlign","formGroup","initialQNA","enableSubmit","QnaMapper","_answer","Qna","reset","getAnswers","reduce","index","cdpValue","propertyName","propertyValue","update","syncVisitorData","skipScore","test","btnSubmit","GET_WARMUP","WarmupMapper","warmupData","video","videoLink","videoIntPath","childNodes","node","contentGroup","Warmup","warmup","setWarmup","slides","parentSlide","btnQuestion","GET_PERSONALIZED_RESULT","Personalized","setResult","sessionId","fetchPolicy","persoData","fill","stroke","Percentage","score","Score","timer","setTimer","scoreIndex","resetBtnIsEnabled","personalizedResult","btnReset","getResetBtn","getTheme","userTheme","targetTheme","light","shadows","allVariants","join","h3","h4","overrides","MuiCheckbox","root","MuiRadio","MuiButton","contained","MuiTypography","disableRipple","createMuiTheme","_merge","childTiles","transitionRow","nb","obj","transitionDelay","Transition","transitionActive","transitionLabel","loader","icon","transform","transformOrigin","tile","App","showResult","quizData","bundle","key","initLanguageBundle","initialize","ready","syncTracker","cdp_endpoint","ThemeProvider","Grid","container","QNA","WARMUP","displayScore","Ajv","errors","additionalProperty","message","keyword","Boolean","hostname","match","REVOKED","context","properties","host","default","process","enum","pattern","gql_endpoint","gql_authorization","language","required","additionalProperties","ContextException","name","captureStackTrace","ajv","useDefaults","getMktoConfig","config","QuizMapper","resetIsEnabled","resultSet","max","Array","getScore","quizKey","split","goodAnswers","quizScore","syncQuizScore","push","splice","currentIndex","nextIndex","nextSlide","slice","score_splitPattern","Store","Provider","children","quizUIApp","validate","contextSchema","toUpperCase","getGQLWorkspace","quiz_validMark","contextValidator","headers","Authorization","client","ApolloClient","uri","generateClassName","createGenerateClassName","seed","ReactDOM","render","StylesProvider","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"gNAEaA,EAAeC,IAAMC,cAAc,M,kCCMnCC,EAAWC,IAAH,gmI,2DCNRC,EAAcD,IAAH,0lB,yBCmBlBE,EAAmB,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,eAAeC,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,OACtCC,EAAa,IAAIC,KACjBC,EAAa,IAAID,KAAKD,GAC5BE,EAAWC,YAAYD,EAAWE,cAAgB,GAClDC,QAAQC,MAAM,6BAA8BP,GAE5CQ,IAASC,MAAM,gBAAiB,CAC5BC,QAAS,CACLZ,iBACAC,QACAC,SACAC,WAAYA,EAAWU,cACvBR,WAAYA,EAAWQ,kB,qECnB7BC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,QAAQ,CACJC,QAAQ,OACRC,SAAS,OACTC,WAAY,SACZC,OAAO,EACP,QAAQ,CACJC,YAAa,SAEjB,MAAM,CACFC,UAAW,OACXC,SAAU,WAGlBC,OAAO,CACHC,OAAQ,UACRC,MAAOX,EAAMY,QAAQC,MAAMC,KAC3BC,MAAO,OACPC,WAAW,aA0GJC,EAtGC,SAACC,GACb,IAAMC,EAAUrB,EAAUoB,GAEnBE,EAA+BF,EAA/BE,GAAIC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,aACtB,EAAqBD,EAAUE,SAASC,QAAO,SAAA5B,GAAO,OAAIA,EAAQwB,KAAOA,KAAzE,sBAAOxB,OAAP,MAAe,GAAf,EAEQ6B,EAAU/C,IAAMgD,WAAWjD,GAA3BgD,MAEDE,EAAgBF,EAAhBE,SAASC,EAAOH,EAAPG,IACTC,EAAuCF,EAAvCE,cAAc5C,EAAyB0C,EAAzB1C,MAAM6C,EAAmBH,EAAnBG,eAErBC,EAAYC,OAAOC,OAAOJ,EAAc,CAACT,OAC/C,EAA+Bc,YAASpD,EAAa,CACjDiD,UAAUA,IADPI,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAsBvB,GAlBA1D,IAAM2D,WAAU,WAEZ,IAAe,IAAZF,GAAqBC,EAAK,CACzB,IAAME,EAAcC,IAAIH,EAAM,mBAAoB,IAClDd,EAAa,CACTkB,KAAK,qBACLC,QAAQ,CACJH,cACArD,QACA2C,MACAE,uBAKb,CAACK,EAAQC,IAGRD,EAAS,OAAO,2CACpB,GAAItB,EAAO,OAAO,yCAElBrB,QAAQC,MAAM,uBAAuB2B,GAyBrC,OACI,gCACMxB,EAAQK,SACV,gCACI,cAACyC,EAAA,EAAD,CAAWC,aAAW,WAAWC,KAAG,EAApC,SACI,cAACC,EAAA,EAAD,CACIC,MAAOlD,EAAQmD,QACfC,QAAS,cAACC,EAAA,EAAD,CAAU7B,GAAIxB,EAAQwB,KAC/B8B,MAAOtD,EAAQuD,MACfC,eAAe,MACfC,SAlBA,SAACC,GACjBhC,EAAa,CACTkB,KAAK,iBACLC,QAAQ,CACJrB,GAAGkC,EAAEC,OAAOnC,WAiBZ,cAACoC,EAAA,EAAD,CAAYC,UAAWtC,EAAQlB,QACnByD,MAAO,CAAClD,SAAU,UAClBmD,UAAU,IAFtB,SAGK/D,EAAQgE,iBAIhBhE,EAAQK,SACL,eAACuD,EAAA,EAAD,CAAYC,UAAWtC,EAAQlB,QACnB0D,UAAU,IADtB,UAEI,cAAC,IAAD,IACC/D,EAAQuD,MACT,cAAC,IAAD,CAAeM,UAAWtC,EAAQV,OACnBoD,QAAS,kBAjDnB,SAACjE,GAClBb,EAAkB,CACdE,QACAD,eAAeY,EAAQkE,WACvB5E,OAAO4C,EAAeiC,SAG1BzC,EAAa,CACTkB,KAAK,iBACLC,QAAQ,CACJrB,GAAGxB,EAAQwB,MAuCsB4C,CAAapE,MAC1C,4BAAIA,EAAQgE,qBCjHjBK,EATD,SAAC,GAAe,IAAdC,EAAa,EAAbA,KAAKC,EAAQ,EAARA,IAEVC,EADU1F,IAAMgD,WAAWjD,GAA1BgD,MACuBE,SAAxByC,eACP,OACI,qBAAKX,UAAU,gBACVY,IAAG,UAAKD,GAAL,OAAsBE,UAAUJ,IACnCC,IAAKA,K,kBCFZrE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCuE,cAAc,OA6DHC,EA1DK,SAACtD,GACjB,IAAMC,EAAUrB,EAAUoB,GACnBuD,EAAoBvD,EAApBuD,QAAQC,EAAYxD,EAAZwD,SAERC,EADWjG,IAAMgD,WAAWjD,GAA3BgD,MACDkD,KAEDC,EAASC,iBAAO,MAEhBC,EAAoB,SAAC,GAAc,IAAb5F,EAAY,EAAZA,QHgCR,SAAC,GAAD,IAAE6F,EAAF,EAAEA,QAAQC,EAAV,EAAUA,OAAO9F,EAAjB,EAAiBA,OAAO0F,EAAxB,EAAwBA,OAC5ClF,IAASC,MAAM,QAAQ,CACnByB,GAAG2D,EAAQ3D,GACX6D,KAAKF,EAAQE,KACbC,UAAU,CACN9D,GAAG2D,EAAQ3D,GACX6D,KAAKF,EAAQE,MAEjBE,YAAY,CACR/D,GAAG4D,GAEPI,WAAW,CACPC,SAAUT,EAAOU,QAAQC,cACzBC,YAAaZ,EAAOU,QAAQG,iBAC5BvG,OAAQA,KG7CZwG,CAAgB,CACZX,QAAQ,CACJ3D,GAAGuD,EAAKvD,GACR6D,KAAKN,EAAKM,MAEdD,OAAOP,EACPG,SACA1F,YAeR,OACI,qBAAKuE,UAAWtC,EAAQoD,cAAxB,SACI,cAAC,IAAD,CACIoB,IAAKf,EACLnB,UAAU,eACVmC,IAAKlB,EACLmB,UAAQ,EACR9E,MAAM,OACN+E,OAAO,OAEPC,QAjBW,aAmBXC,OAhBU,kBAAMlB,EAAkB,CAAC5F,OAAO,aAmB1C+G,QAjBW,kBAAMnB,EAAkB,CAAC5F,OAAO,WAkB3CgH,QAnBW,kBAAMpB,EAAkB,CAAC5F,OAAO,cCpB5CiH,EAfD,SAAC,GAAkB,IAAjBP,EAAgB,EAAhBA,IAAInB,EAAY,EAAZA,QAGhB,OACI,cAAC,EAAD,CACIC,SAAUkB,EACVnB,QAASA,KCRR2B,EAAkBvH,IAAH,onBCObwH,EAPK,SAACC,GAAD,MAAgB,CAChClF,GAAImB,IAAI+D,EAAW,MACnBrB,KAAM1C,IAAI+D,EAAW,cACrBC,SAAUhE,IAAI+D,EAAW,kBACzB5B,SAAUnC,IAAI+D,EAAW,oBCkDdE,EA/CI,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAIX1F,EAAQ,OAKNc,EADUnD,IAAMgD,WAAWjD,GAA3BgD,MACwBE,SAAxBE,cAEFE,EAAYC,OAAOC,OAAOJ,EAAc,CAACT,GAAGqF,IAClD,EAA+BvE,YAASkE,EAAiB,CACrDrE,UAAWA,IADRI,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAIvB,EAA0B1D,IAAMgI,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OAXAlI,IAAM2D,WAAU,WACZ,IAAe,IAAZF,GAAqBC,EAAK,CACzB,IAAMuE,EAAQN,EAAY9D,IAAIH,EAAM,iBAAkB,KACtDuE,EAAMJ,SAASI,EAAMJ,SAChBM,QArBE,SAqBa9F,GACf8F,QArBG,UAGF,KAmBDA,QArBK,YAGF,MAmBRD,EAASD,MAEd,CAACxE,EAAQC,IAERD,EAAgB,qBAAKkC,IAAG,sCAAiCtD,EAAjC,6BAAmEoD,IAAI,YAC/FtD,EAAc,yCAGd,mCACC8F,GACG,qBAAKlD,UAAU,gBACdY,IAAKsC,EAAMJ,SACXpC,IAAKwC,EAAMxD,WCGT2D,EAvCI,SAAC,GAAqB,IAApBL,EAAmB,EAAnBA,KAAMhC,EAAa,EAAbA,QAGf5C,EADUnD,IAAMgD,WAAWjD,GAA3BgD,MACwBE,SAAxBE,cAEFE,EAAYC,OAAOC,OAAOJ,EAAc,CAACT,GAAGqF,IAClD,EAA+BvE,YAASkE,EAAiB,CACrDrE,UAAWA,IADRI,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAIvB,EAA0B1D,IAAMgI,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OAPAlI,IAAM2D,WAAU,WACZ,IAAe,IAAZF,GAAqBC,EAAK,CACzB,IAAMuE,EAAQN,EAAY9D,IAAIH,EAAM,iBAAkB,KACtDwE,EAASD,MAEd,CAACxE,EAAQC,IAERD,EAAgB,2CAChBtB,EAAc,yCAGd,mCACC8F,EAAMjC,UACH,cAAC,EAAD,CACIA,SAAUiC,EAAMjC,SAChBD,QAASA,OCgBVsC,EA7CD,SAAC,GAAwC,IAAvC3F,EAAsC,EAAtCA,GAAG6D,EAAmC,EAAnCA,KAAK+B,EAA8B,EAA9BA,OAAO9C,EAAuB,EAAvBA,KAAK+C,EAAkB,EAAlBA,SAAS9C,EAAS,EAATA,IAEzC,EADkBzF,IAAMgD,WAAWjD,GAA3BgD,MACgCE,SAAjCuF,EAAP,EAAOA,SAAS9C,EAAhB,EAAgBA,eAGZT,EAAY,6BAChB,OAAOsB,GACH,KAAKiC,EAASC,YACVxD,EAAY,cAAC,EAAD,CAAY8C,KAAMrF,IAC9B,MAEJ,KAAK8F,EAASE,YACVzD,EAAY,cAAC,EAAD,CAAY8C,KAAMrF,EAAIqD,QAASwC,IAC3C,MAEJ,KAAKC,EAASG,UACV1D,EAAY,cAAC,EAAD,CAAOiC,IAAK1B,EAAMO,QAASwC,IACvC,MAEJ,KAAKC,EAASI,SAEN3D,EADDqD,EAAOO,SAASL,EAASM,OACZ,cAAC,EAAD,CAAOtD,KAAMA,EAAMC,IAAKA,IAExB,cAAC,EAAD,CAAOyB,IAAKxB,EAAeE,UAAUJ,GAAOO,QAASwC,IAErE,MAEJ,QACO/C,IACCP,EAAY,cAAC,EAAD,CAAOO,KAAMA,EAAMC,IAAKA,KAIhD,OAAOR,G,OCvCI5D,gBAAW,SAACC,GAAD,cAAW,CACjCyH,cAAe,CACXC,cAAe,aAEnBC,SAAU,CAEN,YAAY,CACRC,gBAAgB5H,EAAMY,QAAQiH,QAAQ/G,KACtCZ,QAAS,QACTa,MAAM,GAAD,OAAIf,EAAM8H,QAAQ,GAAlB,MACLhC,OAAO,GAAD,OAAK9F,EAAM8H,QAAQ,KAAnB,MACN/C,QAAQ,KACR1E,OAAQ,OACR0H,UAAU,GAAD,OAAK/H,EAAM8H,QAAQ,GAAnB,QAGjBE,KAAK,CACD9H,QAAS,OACT+H,UAAUjI,EAAMkI,SAASF,KAAKC,UAC9BlH,MAAO,OACPoH,mBAAoB,SAKpB,QAAQ,CACJC,UAAW,QACXC,SAAU,WACVtH,MAAO,OACP+E,OAAQ,OACRwC,QAAS,GAEb,WAAW,CACPpI,QAAQ,OACRC,SAAS,OACToI,cAAc,WAGtBC,KAAM,CACFT,UAAU/H,EAAM8H,QAAQ,IAE5BW,YAAY,CACR,YAAY,CACRJ,SAAS,WACTK,IAAI,EAAGC,MAAM,EAAGC,OAAO,EAAGC,KAAK,EAC/B9D,QAAQ,KACR+D,WAAW,0BAAD,OAA4B9I,EAAMY,QAAQkI,WAAWC,QAAQC,MAA7D,eAAyEhJ,EAAMY,QAAQkI,WAAWC,QAAQE,YAA1G,iBAA8HjJ,EAAMY,QAAQkI,WAAWC,QAAQG,UAA/J,iBAAiLlJ,EAAMY,QAAQkI,WAAWC,QAAQI,IAAlN,YASlBC,SAAO,GACHrI,MAAM,OACNsI,SAASrJ,EAAMsJ,YAAYC,OAAOC,GAClCnJ,OAAO,OACPoJ,SAAS,EACTC,aAAa1J,EAAMkI,SAASkB,QAAQO,QAAQH,GAC5CI,YAAY5J,EAAMkI,SAASkB,QAAQO,QAAQH,GAC3CK,cAAc7J,EAAMkI,SAASkB,QAAQO,QAAQH,IAP1C,cAQFxJ,EAAMsJ,YAAYQ,QAAQ,KAAM,MAAQ,CACrCJ,aAAa1J,EAAMkI,SAASkB,QAAQO,QAAQI,GAC5CH,YAAY5J,EAAMkI,SAASkB,QAAQO,QAAQI,GAC3CF,cAAc7J,EAAMkI,SAASkB,QAAQO,QAAQI,KAX9C,uBAaK,IAbL,0BAcQ,UAdR,cAgBH,gBAAiB,CACb,WAAW,CACP7J,QAAQ,UAlBb,GAsBP8J,aAAW,mBACNhK,EAAMsJ,YAAYQ,QAAQ,KAAM,MAAQ,CACrC,OAAQ,CACJtJ,SAAS,YAEb,OAAQ,CACJA,SAAS,YAEbkJ,aAAa1J,EAAMkI,SAASkB,QAAQO,QAAQ7I,KAC5C8I,YAAY5J,EAAMkI,SAASkB,QAAQO,QAAQ7I,OATxC,cAaP,cAAc,CACVT,OAAO,OACPM,MAAM,GAAD,OAAIX,EAAMY,QAAQqJ,KAAKpC,QAAvB,eACL,iBAAiB,CACblH,MAAMX,EAAMY,QAAQiH,QAAQ/G,MAEhC,eAAe,CACX,oBAAoB,CAChBgI,WAAW9I,EAAMY,QAAQiH,QAAQ/G,KACjCoJ,YAAYlK,EAAMY,QAAQiH,QAAQsC,MAEtC,kBAAkB,CACdrB,WAAW9I,EAAMY,QAAQiH,QAAQ/G,KACjCsJ,WAAa,QACbF,YAAYlK,EAAMY,QAAQiH,QAAQsC,KAClCE,UAAU,qCAAD,OAAuCrK,EAAMY,QAAQiH,QAAQsC,KAA7D,gBAGjB,uBAAuB,GACvB,eAAe,CACX3J,SAAUR,EAAMsK,WAAWC,MAAM/J,SACjCgK,WAAY,iBACZC,WAAY,SACZC,aAAc,OAElB,eAAe,CACXD,WAAY,SACZjK,SAAUR,EAAMsK,WAAWC,MAAM/J,SACjCmJ,QAAS,UACTgB,OAAO,EACPC,aAAa,OAEjB,iCAAiC,CAC7B,gBAAgB,CACZD,OAAO,EACP7B,WAAW9I,EAAMY,QAAQiH,QAAQ/G,KACjC8J,aAAa,MACbjK,MAAMX,EAAMY,QAAQqJ,KAAKY,UACzBrK,SAAU,WACVgK,WAAY,MACZC,WAAY,KACZd,QAAQ,WACRmB,SAAS,OACTpD,cAAe,YACf2C,UAAU,qGACVD,WAAY,QACZW,WAAY/K,EAAMsK,WAAWS,WAC7B,UAAU,CACNJ,OAAO,EACP7B,WAAW9I,EAAMY,QAAQiH,QAAQsC,KACjCE,UAAU,0GA/DnB,O,oBCzETvK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCgL,UAAW,CACPC,UAAW,yBACXC,KAAM,WACNnK,MAAOf,EAAMkI,SAAS8C,UAAUjK,MAChC+E,OAAQ9F,EAAMkI,SAAS8C,UAAUlF,OACjCxF,YAAaN,EAAMkI,SAAS8C,UAAUG,OACtCnK,WAAYhB,EAAMkI,SAAS8C,UAAUG,OACrCC,WAAY,SAEZxD,gBAAiB5H,EAAMY,QAAQyK,OAAOC,MACtCC,eAAgB,cAEhBC,UAAU,GAAD,OAAKxL,EAAMkI,SAAS8C,UAAUS,cAA9B,sBACTC,aAAa,GAAD,OAAK1L,EAAMkI,SAAS8C,UAAUS,cAA9B,sBACZE,QAAS,KACTC,WAAW5L,EAAM6L,YAAYC,OAAO,CAAC,UAAU,UAAU,CACrDzG,SAAUrF,EAAM6L,YAAYxG,SAAS0G,KACrCC,OAAQhM,EAAM6L,YAAYG,OAAOC,OAErC,gBAAiB,CACbrE,gBAAgB5H,EAAMY,QAAQsL,KAAK,MAEvC,cAAc,CACVxL,OAAQ,WAEZ,WAAY,CACRiL,QAAS,QAuCNQ,GAlCG,SAACjL,GACf,IAAMC,EAAUrB,GAAUoB,GAE1B,EAA4BxC,IAAMgD,WAAWjD,GAArCgD,EAAR,EAAQA,MAAO2K,EAAf,EAAeA,SACRC,EAAgB5K,EAAhB4K,aACAjL,EAAcF,EAAdE,GAAGkL,EAAWpL,EAAXoL,QAEJC,EAASF,IAAiBjL,EAWhC,OACI,oBAAIqC,UAAW+I,YACXrL,EAAQ6J,UACPuB,EAAS,SAAS,GAClBD,EAAU,YAAY,IAEvBzI,QAhBY,WACbyI,GACCF,EAAS,CACL5J,KAAK,aACLC,QAAQ,CACJgK,MAAMrL,SCxB1B,SAASsL,GAAiBC,EAAQC,GAC9B,IAAIC,EAAO,GACPD,EAAOE,QAAQ,MAAQ,IAAGD,GAAQ,8BAClCD,EAAOE,QAAQ,MAAQ,IAAGD,GAAQ,8BAClCD,EAAOE,QAAQ,MAAQ,IAAGD,GAAQ,cAClCD,EAAOE,QAAQ,MAAQ,IAAGD,GAAQ,sCAEtC,IADA,IAAIE,EAAS,GACJC,EAAIL,EAAQK,EAAI,IAAKA,EAAGD,GAAUF,EAAKI,KAAKC,MAAMD,KAAKE,SAAWN,EAAKF,SAChF,OAAOI,EASX,SAASK,GAAT,GAAoD,IAAzB3L,EAAwB,EAAxBA,MAAM2K,EAAkB,EAAlBA,SAAS3J,EAAS,EAATA,QAElC4K,EAEF5L,EAFE4L,oBACAC,EACF7L,EADE6L,kBAGDD,GACCjB,EAAS,CACL5J,KAAK,sBAET+K,YAAW,kBAAInB,EAAS,CACpB5J,KAAK,wBACN8K,GACHC,YAAW,kBAAInB,EAAS3J,KAAS6K,IAEjClB,EAAS3J,GCpDjB,IAAM3C,GAAYC,aAAW,SAAAC,GAAK,YAAK,CACnCwN,QAAM,GACFlF,OAAQ,EACRpI,QAAS,OACTqI,cAAc,SACdkF,eAAgB,SAChB1M,MAAM,OACN4I,QAAQ,GAAD,OAAK3J,EAAM8H,QAAQ,GAAnB,cAA2B9H,EAAMkI,SAASkB,QAAQO,QAAQH,KAN/D,cAODxJ,EAAMsJ,YAAYQ,QAAQ,KAAM,MAAQ,CACrCH,QAAQ,GAAD,OAAK3J,EAAM8H,QAAQ,GAAnB,cAA2B9H,EAAMkI,SAASkB,QAAQO,QAAQ7I,QARnE,cAUF,gBAAgB,CACZ8G,gBAAiB5H,EAAMY,QAAQsL,KAAK,OAXtC,GAcNwB,iBAAkB,CACdxN,QAAS,OACTuN,eAAgB,SAChBnF,OAAO,EACPqF,UAAW,OACXhE,QAAQ,EACR5B,UAAU,EACV2C,aAAa,GAAD,OAAK1K,EAAM8H,QAAQ,GAAnB,MACZ,gBAAgB,aACZ4C,aAAa,GACZ1K,EAAMsJ,YAAYQ,QAAQ,KAAM,MAAQ,CACrCY,aAAa,GAAD,OAAI1K,EAAM8H,QAAQ,GAAlB,SAIxB8F,aAAa,CACT1N,QAAS,OACTE,WAAY,SACZqN,eAAgB,gBAChB3H,OAAQ,EACR/E,MAAM,OACN8M,SAAS,SACTjC,WAAW5L,EAAM6L,YAAYC,OAAO,CAAC,UAAU,CAC3CzG,SAAUrF,EAAM6L,YAAYxG,SAASyI,SACrC9B,OAAQhM,EAAM6L,YAAYG,OAAOwB,SAErC,gBAAgB,CACZ1H,OAAQ9F,EAAMkI,SAASsF,OAAOT,OAAOjH,OACrC4E,aAAa,GAAD,OAAK1K,EAAM8H,QAAQ,GAAnB,QAIpBiG,WAAW,aACPrG,cAAe,aACf8C,WAAYxK,EAAMsK,WAAW0D,eAC7BrN,MAAOX,EAAMY,QAAQsL,KAAK,MACzBlM,EAAMsJ,YAAYQ,QAAQ,KAAM,MAAQ,CACrCtJ,SAAS,gBAiHNyN,GA5GA,SAAC/M,GACZ,IAAMC,EAAUrB,GAAUoB,GAE1B,EAA4BxC,IAAMgD,WAAWjD,GAArCgD,EAAR,EAAQA,MAAO2K,EAAf,EAAeA,SAEXzK,EAQAF,EARAE,SACAuM,EAOAzM,EAPAyM,SACAC,EAMA1M,EANA0M,cACAC,EAKA3M,EALA2M,SACAC,EAIA5M,EAJA4M,UAGAC,EACA7M,EADA6M,kBAGEC,EAAkB,kBACpBnB,GAAiB,CACb3L,QACA2K,WACA3J,QAAQ,CACJD,KAAK,iBAqBXgM,EAAkB,kBACpBpB,GAAiB,CACb3L,QACA2K,WACA3J,QAAQ,CACJD,KAAK,iBAsCjB,OACI,sBAAKiB,UAAWtC,EAAQqM,OAAxB,UACI,oBAAI/J,UAAWtC,EAAQuM,iBAAvB,SACKQ,EAASO,KAAK,SAAAC,GAAM,OACjB,cAAC,GAAD,CAEItN,GAAIsN,EACJpC,QAASgC,GAFJI,QAMhB/M,EAASgN,iBACV,sBAAKlL,UAAWtC,EAAQyM,aAAxB,UACI,cAACpK,EAAA,EAAD,CAAYC,UAAWtC,EAAQ4M,WACnBa,QAAQ,KADpB,SA9BLT,EACQxM,EAASgN,gBAAgBE,cAC7BlN,EAASgN,gBAAgBG,cAI7BT,EACS,cAACU,EAAA,EAAD,CAAQlL,QAAS2K,EACTQ,UAAWZ,EADnB,SAEHzM,EAASgN,gBAAgBM,iBAE1B,cAACF,EAAA,EAAD,CAAQlL,QAAS0K,EACTS,UAAWZ,EADnB,SAEHzM,EAASgN,gBAAgBO,yBCpHvBC,GAjBI,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,QAASC,EAAoE,EAApEA,WAAYC,EAAwD,EAAxDA,OAAQC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,kBAAkBC,EAAoB,EAApBA,cAC3E,EAAwC/I,oBAAS,GAAjD,mBAAOgJ,EAAP,KAAqBC,EAArB,KAEAtN,qBAAU,WACN,OAAM+M,GAAWC,GAAcC,EAG3BI,GACAE,OAAOC,WAAWC,SAASV,EAASC,EAAYC,EAAQC,QACxDK,OAAOC,WAAWE,UAAWP,SAlBpB,SAACJ,EAASO,GAC3B,GAAIC,OAAOC,WAAY,OAAOF,GAAgB,GAE9C,IAAMK,EAASC,SAASC,cAAc,UACtCF,EAAO3L,IAAP,UAAgB+K,EAAhB,+BACAY,EAAOG,OAAS,kBAAOP,OAAOC,WAAaF,GAAgB,GAAQ,MACnEM,SAASG,KAAKC,YAAYL,GAgBtBM,CAAalB,EAASO,GARX,6CASZ,CAACD,EAAcN,EAASC,EAAYC,EAAQC,EAASE,KCJtD3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCqF,SAAS,CACLnF,QAAS,OACTE,WAAY,SACZD,SAAU,OACVsN,eAAgB,SAChB,QAAS,CACLnN,YAAa,OAEjByH,UAAU,GAAD,OAAI/H,EAAM8H,QAAQ,GAAlB,OAEblE,YAAY,CAERyF,SAAS,QACThJ,OAAO,GAAD,OAAIL,EAAM8H,QAAQ,GAAlB,YAGVlI,QAAQ,CACJmB,MAAM,OACN2I,aAAa,GAAD,OAAI1J,EAAM8H,QAAQ,GAAlB,MACZ8B,YAAY,GAAD,OAAI5J,EAAM8H,QAAQ,GAAlB,MACXQ,OAAQ,GACR,OAAO,CACHqF,UAAW,OACXhE,QAAQ,GAEZ,OAAO,CACHe,aAAc,UAGtB6F,aAAa,CACT7I,cAAc,aACd8I,eAAe,aAEnBC,SAAS,CACL7I,gBAAgB5H,EAAMY,QAAQC,MAAMsJ,KACpCS,aAAa,MACb1K,QAAS,SACTyJ,QAAS,gBAIX+G,GAAO,SAAA3O,GACT,OAAO,2BACAA,GADP,IAEIR,SAAS,MAIXoP,GAAwB,SAAClP,GAC3B,IAAO2M,EAA+B3M,EAA/B2M,SAASwC,EAAsBnP,EAAtBmP,UAAUrP,EAAYE,EAAZF,SAE1B,GAAG6M,GAA0B,SAAdwC,EACX,OAAO,EAEX,IAAM3Q,EAAUsB,EAASC,QAAQ,SAAA5B,GAAO,OAAIA,EAAQmD,SAAWnD,EAAQK,WACvE,OAAOsB,EAASoL,SAAW1M,EAAQ0M,QAGvC,SAASkE,GAAQpP,EAAOqP,GACpB,IAAQrO,EAAYqO,EAAZrO,QAER,OAAQqO,EAAOtO,MACX,IAAK,qBACD,IAAKjB,EAAYE,EAAZF,SACEe,EAAwCG,EAAxCH,YAAYrD,EAA4BwD,EAA5BxD,MAAM2C,EAAsBa,EAAtBb,IAAIE,EAAkBW,EAAlBX,eAC7BtC,QAAQC,MAAM,6CAA6C6C,GAE3D,IAAMwB,EAAavB,IAAID,EAAa,cAG9ByO,EAAW,oBAAgB9R,EAAhB,YAAyB6E,EAAzB,MACXkN,EAAmBzO,IAAIX,EAAD,UAAQmP,EAAR,YACtBE,EAAuB1O,IAAIX,EAAD,UAAQmP,EAAR,gBAC1B9Q,EAAU6B,EAAeoP,UAAYF,GACpC5R,KAAK+R,MAAQ/R,KAAKgS,MAAMH,GAY/B,OAVA1P,EAAQ,sBAAOA,GAAP,CAAgB,CACpBH,GAAKmB,IAAID,EAAa,MACtBa,MAAQZ,IAAID,EAAa,SACzBsB,YAAcrB,IAAID,EAAa,qBAC/B+O,QAAUC,KAAKF,MAAM7O,IAAID,EAAa,iBAAiB,IACvDS,SAAU,EACVe,aACA7D,aAGJ,2BACOwB,GADP,IAEIF,WACAgQ,eAAeZ,GAAsB,2BAAIlP,GAAL,IAAWF,gBAGvD,IAAK,iBACD,IAAOA,EAAYE,EAAZF,SACAH,EAAMqB,EAANrB,GAGP,OAFA5B,QAAQC,MAAM,gCAAgC2B,GAE9C,2BACOK,GADP,IAEIF,SAASA,EAASkN,KAAK,SAAA7O,GACnB,OAAIA,EAAQwB,KAAOA,EACR,2BACAxB,GADP,IAEIK,SAAQ,IAETL,KAEX2R,gBAAe,IAGvB,IAAK,iBACD,IAAKhQ,EAAYE,EAAZF,SACEH,EAAMqB,EAANrB,GAYP,OAXA5B,QAAQC,MAAM,gCAAgC2B,GAE9CG,EAAWA,EAASkN,KAAI,SAAA7O,GACpB,OAAGA,EAAQwB,KAAOA,EACP,2BACAxB,GADP,IAEImD,SAASnD,EAAQmD,UAElBnD,KAGX,2BACO6B,GADP,IAEIF,WACAgQ,eAAeZ,GAAsB,2BAAIlP,GAAL,IAAWF,gBAGvD,QACI,MAAM,IAAIiQ,MAAJ,8BAAiCV,EAAOtO,KAAxC,mBAIlB,I,SAAMiP,GAAW,SAACvQ,GAGd,IAAQoO,EAAWpO,EAAXoO,OAER,OADAH,GAAWjO,GACJ,sBAAME,GAAE,mBAAckO,MAyLlBoC,GAtLF,SAACxQ,GACV,IAAMC,EAAUrB,GAAUoB,GACpByQ,EAAgBC,GAAiB1Q,GACvC,EAA4BxC,IAAMgD,WAAWjD,GAArCgD,EAAR,EAAQA,MAAO2K,EAAf,EAAeA,SAGXzH,EAKAlD,EALAkD,KACAyJ,EAIA3M,EAJA2M,SACA/B,EAGA5K,EAHA4K,aACA1K,EAEAF,EAFAE,SACAC,EACAH,EADAG,IAIAE,EAKAH,EALAG,eACA7C,EAIA0C,EAJA1C,MACA4C,EAGAF,EAHAE,cACA8M,EAEAhN,EAFAgN,gBACAkD,EACAlQ,EADAkQ,SAGEN,IAAiBnD,GAEnBzJ,EAAKpD,SAASoL,OAAS,IAA+B,SAA5B9K,EAAc+O,UAE5C,EAAkClS,IAAMoT,WACpCjB,GACA,CACIU,iBACAX,UAAU/O,EAAc+O,UACxBxC,YAEJsC,IAPJ,mBAAOrP,EAAP,KAAkBC,EAAlB,KAUA9B,QAAQC,MAAM,oBAAoBkF,EAAKxB,OACvC,IAAM4O,EAAO1F,IAAiB1H,EAAKvD,GAE7ByC,EAAU,WACZxC,EAAUE,SAASyQ,SAAQ,SAAApS,GAEpBA,EAAQK,SAGXlB,EAAkB,CACdE,QACAD,eAAeY,EAAQkE,WACvB5E,OAAO4C,EAAeoP,aAI9B9D,GAAiB,CACb3L,QACA2K,WACA3J,QAAQ,CACJD,KAAK,iBAKXyP,EAAwB,SAAC1I,EAAO2I,GASlC,OARA1S,QAAQC,MAAM,oCAAoC8J,GAClD6D,GAAiB,CACb3L,QACA2K,WACA3J,QAAQ,CACJD,KAAK,iBAGN,GAGL2P,EAAiB,SAACC,EAAKC,GACzBD,EAAKE,gBAAgB,CACjB,QAAYrC,SAASsC,SAASC,KAC9B,aAAiB5Q,EAAIA,EAAI6Q,UAAU,KAEvCL,EAAKM,UAAUT,IAuDnB,OACI,sBAAKxO,UAAW+I,YACZmF,EAAc3J,KACd2J,EAAclJ,YACbsJ,EAAO,SAAS,IAHrB,UAKI,cAAC,GAAD,IACCpN,EAAKgC,OACN,cAAC,EAAD,CAAOvF,GAAIuD,EAAKgC,MAAMvF,GACf6D,KAAMN,EAAKgC,MAAM1B,KAAKN,EAAKgC,MAAM1B,KAAKnC,MAAM,KAC5CkE,OAAQrC,EAAKgC,MAAMK,OAAOrC,EAAKgC,MAAMK,OAAOyH,KAAI,SAAAkE,GAAK,OAAEA,EAAM7P,SAAO,GACpEoB,KAAMS,EAAKgC,MAAMzC,KACjBC,IAAKQ,EAAKxB,QAKjB,sBAAKM,UAAW+I,YACZmF,EAAcvI,QACduI,EAAc3H,aAFlB,UAII,cAACxG,EAAA,EAAD,CAAYC,UAAWkO,EAAclK,cACzBmH,QAAQ,KADpB,SAEKjK,EAAKxB,QAEV,cAACK,EAAA,EAAD,CAAYC,UAAWkO,EAAchK,SACzBhH,MAAM,UACNiO,QAAQ,KAFpB,SAGKjK,EAAKgD,WAGV,eAACnE,EAAA,EAAD,CAAYG,UAAU,MACVF,UAAWtC,EAAQkE,SAD/B,UAEI,cAAC,IAAD,IACCV,EAAKU,YAGV,cAAC7B,EAAA,EAAD,CAAYG,UAAU,MACVF,UAAWtC,EAAQyC,YACnBgP,wBAAyB,CAACC,OAAOC,KAAUC,SAASpO,EAAKf,YAAa,CAAEoP,SAAU,CAAC,eA3FjF,WAEtB,IAAMX,EAAOzC,OAAOhO,MAAO,EAC3B,OAAIH,EAAMG,KACNyQ,EAAKY,cAAgBjR,QACQ,IAA7BA,OAAOkR,KAAKb,GAAM1F,OAMlBhI,EAAKkN,SAMNlN,EAAKkN,WAAaA,EAASsB,SAAWxO,EAAKyO,YAAcxR,EACjD,cAAC,GAAD,CACHwN,QAASzK,EAAKyO,WAAWhE,QACzBC,WAAY1K,EAAKyO,WAAW/D,WAC5BC,OAAQ3K,EAAKyO,WAAW9D,OACxBE,kBAAmB2C,SAL3B,EALW,cAACpD,EAAA,EAAD,CAAQlL,QAASA,EACTmL,UAAW3N,EAAUkQ,eAD7B,SAEF5C,GAAmBA,EAAgB0E,WARjC,cAAC7P,EAAA,EAAD,CAAYC,UAAWtC,EAAQsP,SACnB7B,QAAQ,KADpB,mDAuFF0E,MAnEM,WACf,IAAG3O,EAAKkN,SAER,OAAGlN,EAAKpD,SAASoL,OAAS,GAAK/K,EACpB,sBAAK6B,UAAWtC,EAAQvB,QAAxB,UACK,cAAC4D,EAAA,EAAD,CAAYC,UAAWtC,EAAQoP,aACnB3B,QAAQ,KADpB,SAEKD,GAAmBA,EAAgB4B,eAExC,6BAEQ5L,EAAKpD,SAASkN,KAAK,SAAA7O,GACf,OAAGA,EAAQyR,QACA,cAAC,EAAD,CAEHjQ,GAAIxB,EAAQwB,GACZC,UAAWA,EACXC,aAAcA,GAHT1B,EAAQwB,IAKd,0CAhBnC,EAkEKmS,OC7SAC,GAAU3U,IAAH,mkD,+BC9BdiB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCyT,YAAa,CACTvT,QAAQ,OACRE,WAAW,SACXD,SAAS,OACT,gBAAgB,CACZ,YAAY,CACRyH,gBAAiB5H,EAAMY,QAAQkI,WAAW4K,cAC1C9I,aAAc5K,EAAMkI,SAASwL,cAAc9I,aAC3C,yBAAyB,CACrBjK,MAAOX,EAAMY,QAAQsL,KAAK,MAE9B,kBAAkB,CACdV,UAAW,yBAEf,eAAe,CACPE,aAAc,yBAEtB,WAAW,CACHF,UAAW,4BAK/BmI,WAAW,CACPtL,SAAS,WACTvC,OAAQ,OACR6D,QAAS,kBACT3I,WAAW,QACX2K,QAAS,EAETC,WAAW5L,EAAM6L,YAAYC,OAAO,CAAC,WAAW,CAC5CE,OAAQhM,EAAM6L,YAAYG,OAAO4H,UAErChJ,aAAc,kBACdhD,gBAAiB5H,EAAMY,QAAQsL,KAAK,KACpC5D,OAAQ,EACR,gBAAgB,CACZqD,QAAS,GAEb,WAAW,CACP5G,QAAS,KACThE,MAAO,EACP+E,OAAQ,EACR+N,YAAa,QACbC,YAAa,mBACbzL,SAAU,WACVK,IAAK,EAELG,KAAK,OACLqB,YAAY,uCAAD,OAA0ClK,EAAMY,QAAQsL,KAAK,OAE5E,UAAU,CACNtE,gBAAgB5H,EAAMY,QAAQiH,QAAQ/G,KACtCH,MAAM,4BACN,WAAW,CACRuJ,YAAY,uCAAD,OAA0ClK,EAAMY,QAAQiH,QAAQ/G,QAGlF,QAAQ,CACJiT,cAAc,QACdlG,SAAS,UAGjBmG,WAAW,CACP3T,OAAO,QACPW,WAAW,YA4DJiT,GAxDA,SAAC/S,GACZ,IAAMC,EAAUrB,GAAUoB,GACnBgT,EAAuBhT,EAAvBgT,IAAKC,EAAkBjT,EAAlBiT,YAAY/S,EAAMF,EAANE,GACxB,EAAiB8S,EAAIE,QAAQ5S,QAAO,SAAA6S,GAAM,OAAIA,EAAOjT,KAAOA,KAArDiT,EAAP,oBAEMC,EAAUD,EAAOE,YAAaL,EAAIM,iBAAkBH,EAAOtR,QAqBjE,OACI,sBAAKU,UAAW+I,YACZrL,EAAQsS,YACPY,EAAOtR,QAAQ,UAAU,IAF9B,UAII,qBAAKU,UAAW+I,YACZrL,EAAQwS,WACPW,EAAQ,QAAQ,IAFrB,SAhBDA,EACQ,cAAC,IAAD,IACJ,cAAC,KAAD,MAoBH,cAACzR,EAAA,EAAD,CACIY,UAAWtC,EAAQ6S,WAEnBhR,QAnBL,aAAakR,EAAIO,UACT,cAACxR,EAAA,EAAD,CAAU7B,GAAIiT,EAAOjT,KACzB,cAACsT,GAAA,EAAD,CAAOtT,GAAIiT,EAAOjT,KAkBjB8B,MAAOmR,EAAOnR,MACdE,eAAe,MACfC,SArCS,kBACjB8Q,EAAY,CACR3R,KAAK,gBACLC,QAAQ,CACJ4R,aAkCAtR,QAASsR,EAAOtR,cC1FjB4R,GA9BG,SAACC,GACf,IAAMC,EAAgBvD,KAAKF,MAAM7O,IAAIqS,EAAS,yBAAyB,IACjER,EAAS7R,IAAIqS,EAAS,iBAAkB,IAAInG,KAAI,SAAA4F,GAClD,IAAMS,EAAmBxD,KAAKF,MAAMiD,GACpC,OAAO,2BACAS,GADP,IAEI1T,GAAGsL,GAAgB,EAAE,OACrB3J,SAAQ,OAIb8R,GACCT,EAAQW,MAAM,SAACC,EAAEC,GAAH,OAASD,EAAE5T,GAAK6T,EAAE7T,MAEpC,IAAMqT,EAAYL,EAAQ5S,QAAO,SAAA6S,GAAM,OAAIA,EAAOE,YAAU5H,OAAS,EAAG,WAAW,QAEnF,MAAO,CACHvL,GAAImB,IAAIqS,EAAS,MACjBzR,MAAOZ,IAAIqS,EAAS,SACpBM,SAAU3S,IAAIqS,EAAS,iBAAkB,IACzCO,KAAM5S,IAAIqS,EAAS,aAAc,IACjCJ,gBAAiBlD,KAAKF,MAAM7O,IAAIqS,EAAS,yBAAyB,IAElEjO,MAAOpE,IAAIqS,EAAS,aAAc,IAClCQ,cAAe7S,IAAIqS,EAAS,sBAAuB,IACnDC,kBACAT,UACAK,cCRF3U,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCqV,cAAc,CACVC,UAAU,OACVvN,UAAU,GAAD,OAAK/H,EAAM8H,QAAQ,GAAnB,MACT4C,aAAa,GAAD,OAAK1K,EAAM8H,QAAQ,GAAnB,OAEhBoN,SAAS,CACLxK,aAAa,GAAD,OAAK1K,EAAM8H,QAAQ,GAAnB,OAEhByN,UAAW,CACPD,UAAU,OACV,kBAAkB,CACd/U,UAAU,OACVwE,QAAQ,KACRe,OAAQ,MACR9E,WAAa,OACbwK,UAAW,kCAEf,+BAA+B,CAC3BA,UAAW,QAEf,6BAA6B,CACzBjL,UAAU,OACVwE,QAAQ,KACRe,OAAQ,MACR9E,WAAa,OACb0K,aAAc,kCAElBhB,aAAa,GAAD,OAAI1K,EAAM8H,QAAQ,GAAlB,WAKd0N,GAAa,CACfC,cAAa,GAGX5E,GAAU,SAACqD,EAAKpD,GAClB,IAAQrO,EAAYqO,EAAZrO,QAER,OAAQqO,EAAOtO,MACX,IAAK,aAED,IAAOoS,EAAWnS,EAAXmS,QAGP,OAFApV,QAAQC,MAAM,gCAAgCmV,GAEvC,2BACAV,GACAwB,GAAUd,IAGrB,IAAK,gBACD,IAAOP,EAAU5R,EAAV4R,OACP7U,QAAQC,MAAM,kCAAkC4U,GAChD,IAAKD,EAAWF,EAAXE,QACgB,UAAlBF,EAAIO,YACHL,EAAUA,EAAQ3F,KAAK,SAAA4F,GAAW,OAAO,2BAAIA,GAAX,IAAkBtR,SAAQ,QAUhE,IAAM0S,GARNrB,EAAUA,EAAQ3F,KAAI,SAAAkH,GAClB,OAAGA,EAAQvU,KAAOiT,EAAOjT,GACd,2BACAuU,GADP,IAEI5S,SAAS4S,EAAQ5S,UAElB4S,MAEkBnU,QAAO,SAAA6S,GAAM,OAAIA,EAAOtR,WAAS4J,OAAS,EAEvE,kCACOuH,GADP,IAEIE,UACAqB,iBAGR,IAAK,QACD,IAAOb,EAAWnS,EAAXmS,QAEP,OADApV,QAAQC,MAAM,2BAA2BmV,GACzC,2BACOY,IACAE,GAAUd,IAGrB,QACI,MAAM,IAAIpD,MAAJ,6BAAgCV,EAAOtO,KAAvC,oBAmKHoT,GA/JH,SAAC1U,GACT,IAAMC,EAAUrB,GAAUoB,GACpByQ,EAAgBC,GAAiB1Q,GACvC,EAA4BxC,IAAMgD,WAAWjD,GAArCgD,EAAR,EAAQA,MAAO2K,EAAf,EAAeA,SAEXC,EAGA5K,EAHA4K,aACA1K,EAEAF,EAFAE,SACAkU,EACApU,EADAoU,MAEIhU,EAAmCF,EAAnCE,cAAc8M,EAAqBhN,EAArBgN,gBAEhB5M,EAAYC,OAAOC,OAAOJ,EAAc,CAACT,GAAGF,EAAME,KACxD,EAA+Bc,YAASsR,GAAS,CAC7CzR,UAAUA,IADPI,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAIvB,EAA2B1D,IAAMoT,WAC7BjB,GACA2E,IAFJ,mBAAOtB,EAAP,KAAYC,EAAZ,KA6BA,GAxBAzV,IAAM2D,WAAU,WACZ,IAAe,IAAZF,GAAqBC,EAAK,CACzB,IAAMwS,EAAUrS,IAAIH,EAAM,eAAgB,IAC1C+R,EAAY,CACR3R,KAAK,aACLC,QAAQ,CACJmS,gBAIb,CAACzS,EAAQC,IAEZ1D,IAAM2D,WAAU,WACZ,GAAGwT,GAASzT,EAAK,CACb,IAAMwS,EAAUrS,IAAIH,EAAM,eAAgB,IAC1C+R,EAAY,CACR3R,KAAK,QACLC,QAAQ,CACJmS,gBAIb,CAACiB,EAAMzT,IAEND,EAAS,OAAO,2CACpB,GAAItB,EAAO,OAAO,yCAClBrB,QAAQC,MAAM,mBAAmByU,EAAI/Q,OAErC,IAAM4O,EAAO1F,IAAiBnL,EAAME,GAgEpC,OACI,sBAAKqC,UAAW+I,YACZmF,EAAc3J,KACd2J,EAAclJ,YACbsJ,EAAO,SAAS,IAHrB,UAKI,cAAC,GAAD,IAECmC,EAAIvN,OACD,cAAC,EAAD,CAAOvF,GAAI8S,EAAIvN,MAAMvF,GACd6D,KAAMiP,EAAIvN,MAAM1B,KAAKiP,EAAIvN,MAAM1B,KAAKnC,MAAM,KAC1CkE,OAAQkN,EAAIvN,MAAMK,OAAOkN,EAAIvN,MAAMK,OAAOyH,KAAI,SAAAkE,GAAK,OAAEA,EAAM7P,SAAO,GAClEoB,KAAMgQ,EAAIvN,MAAMzC,KAChBC,IAAK+P,EAAI/Q,QAGpB,sBAAKM,UAAWkO,EAAcvI,QAA9B,UACI,sBAAK3F,UAAWtC,EAAQkU,cAAxB,UACI,cAAC7R,EAAA,EAAD,CAAaC,UAAWtC,EAAQ+T,SACnBtG,QAAQ,KADrB,SAEKsF,EAAIgB,WAET,cAAC1R,EAAA,EAAD,CAAYoL,QAAQ,KAApB,SACKsF,EAAIiB,UAIb,cAACzS,EAAA,EAAD,CAAWe,UAAWtC,EAAQoU,UACnB7R,MAAO,GACPf,aAAW,SAFtB,SAtCO,WACf,GAAGuR,EAAIE,QACH,OAAOF,EAAIE,QAAQ3F,KAAK,SAAA4F,GAAM,OAC1B,cAAC,GAAD,CAEIjT,GAAIiT,EAAOjT,GACX8S,IAAKA,EACLC,YAAaA,GAHRE,EAAOjT,OAqCX0U,KAGL,cAAC/G,EAAA,EAAD,CAAQlL,QA/FC,WAGjB,GAAGqQ,EAAIkB,cAAc,CAGjB,IAAM7L,EACF2K,EAAIE,QACH5S,QAAO,SAAA6S,GAAM,OAAIA,EAAOtR,WACxBgT,QACG,SAAC/N,EAAKqM,EAAO2B,GAQT,OAPG3B,EAAO4B,UAAY5B,EAAO4B,SAAStJ,OAAS,IAEvC3E,EADU,IAAVgO,EACO3B,EAAO4B,SAEV,UAAMjO,EAAN,aAAeqM,EAAO4B,WAG3BjO,IACT,OnB9GE,SAAC,GAAD,IAAEkO,EAAF,EAAEA,aAAaC,EAAf,EAAeA,cACnCzW,IAASC,MAAM,wBAAwB,CACnCyW,OAAM,eACDF,EAAcC,KmBgHfE,CAAgB,CACZH,aAAa,cAAD,OAAehC,EAAIkB,eAC/Be,cAAc5M,IAItB,IAAM9G,EAAU,CACZD,KAAK,cACLC,QAAQ,CACJ6T,UAAUpC,EAAIM,gBACdzH,OAAQmH,EAAIE,QACP5S,QAAO,SAAA6S,GAAM,OAAIA,EAAOE,YACxBwB,QAAQ,SAACQ,EAAKlC,GAAN,OAAiBkC,GAAQlC,EAAOtR,WAAQ,KAI1DmR,EAAIM,gBACHpH,GAAiB,CACb3L,QACA2K,WACA3J,YAGJ2J,EAAS3J,IAiDGuM,UAAWkF,EAAIuB,aADvB,SAEK9G,GAAmBA,EAAgB6H,mBCzP3CC,GAAa5X,IAAH,w6DC0BR6X,GAhCM,SAACC,EAAWzP,GAC7B,IAAI0P,EAAQ,KACNC,EAAYtU,IAAIoU,EAAY,kBAAmB,IAC/CG,EAAevU,IAAIoU,EAAY,qBAYrC,OAVGE,IACCD,EAAOE,GACU,CACT1V,GAAG,KACH6D,KAAK,CACDnC,MAAMoE,EAASG,WAEnBnD,KAAK3B,IAAIoU,EAAY,wBAG3B,CACFvV,GAAImB,IAAIoU,EAAY,KAAM,IAC1BxT,MAAOZ,IAAIoU,EAAY,QAAS,IAChChP,SAAUpF,IAAIoU,EAAY,iBAAkB,IAC5C5R,QAASxC,IAAIoU,EAAY,gBAAiB,IAC1CtR,SAAU9C,IAAIoU,EAAY,iBAAkB,IAC5ChQ,MAAOpE,IAAIoU,EAAY,aAAc,IACrCI,WAAYxU,IAAIoU,EAAW,iBAAiB,IACvClI,KAAI,SAAAuI,GACD,MAAM,CACF5V,GAAImB,IAAIyU,EAAM,MACd/R,KAAM1C,IAAIyU,EAAM,kBAG5BJ,UCZF9W,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCiX,aAAa,CACT3B,UAAU,UACVjM,SAAS,QACThJ,OAAO,OACP0H,UAAU,GAAD,OAAI/H,EAAM8H,QAAQ,GAAlB,MACT4C,aAAa,GAAD,OAAI1K,EAAM8H,QAAQ,GAAlB,WAuHLoP,GAnHA,SAAChW,GACZ,IAAMC,EAAUrB,GAAUoB,GACpByQ,EAAgBC,GAAiB1Q,GACvC,EAA4BxC,IAAMgD,WAAWjD,GAArCgD,EAAR,EAAQA,MAAO2K,EAAf,EAAeA,SAEXC,EAEA5K,EAFA4K,aACA1K,EACAF,EADAE,SAEIE,EAA4CF,EAA5CE,cAAcqF,EAA8BvF,EAA9BuF,SAASyH,EAAqBhN,EAArBgN,gBAEzB5M,EAAYC,OAAOC,OAAOJ,EAAc,CAACT,GAAGF,EAAME,KAExD,EAA+Bc,YAASuU,GAAY,CAChD1U,UAAUA,IADPI,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAIvB,EAA4B1D,IAAMgI,SAAS,CAACqQ,WAAW,KAAvD,mBAAOI,EAAP,KAAeC,EAAf,KAkBA,GAhBA1Y,IAAM2D,WAAU,WAEZ,IAAe,IAAZF,GAAqBC,EAAK,CACzB,IAAM+U,EAAST,GAAanU,IAAIH,EAAM,kBAAmB,IAAI8E,GAC7DkF,EAAS,CACL5J,KAAK,aACLC,QAAQ,CACJ4U,OAAOF,EAAOJ,WAAWtI,KAAI,SAAAuI,GAAI,OAAEA,EAAK5V,MACxCkW,YAAYH,EAAO/V,MAI3BgW,EAAUD,MAEhB,CAAChV,EAAQC,IAEPD,EAAS,OAAO,2CACpB,GAAItB,EAAO,OAAO,yCAClBrB,QAAQC,MAAM,sBAAsB0X,EAAOhU,OAE3C,IAAM4O,EAAO1F,IAAiBnL,EAAME,GAUpC,OACI,qCACI,sBAAKqC,UAAW+I,YACZmF,EAAc3J,KACd2J,EAAclJ,YACbsJ,EAAO,SAAS,IAHrB,UAKI,cAAC,GAAD,IACCoF,EAAOxQ,OACJ,cAAC,EAAD,CAAOvF,GAAI+V,EAAOxQ,MAAMvF,GACjB6D,KAAMkS,EAAOxQ,MAAM1B,KAAKkS,EAAOxQ,MAAM1B,KAAKnC,MAAM,KAChDkE,OAAQmQ,EAAOxQ,MAAMK,OAAOmQ,EAAOxQ,MAAMK,OAAOyH,KAAI,SAAAkE,GAAK,OAAEA,EAAM7P,SAAO,GACxEoB,KAAMiT,EAAOxQ,MAAMzC,KACnBC,IAAKgT,EAAOhU,QAIvB,sBAAKM,UAAW+I,YACZmF,EAAcvI,QACduI,EAAc3H,aAFlB,UAII,cAACxG,EAAA,EAAD,CAAYC,UAAWkO,EAAclK,cACzBmH,QAAQ,KADpB,SAEKuI,EAAOhU,QAEZ,cAACK,EAAA,EAAD,CAAYC,UAAWkO,EAAchK,SACzBhH,MAAM,UACNiO,QAAQ,KAFpB,SAGKuI,EAAOxP,WAGZ,sBAAKlE,UAAWtC,EAAQ8V,aAAxB,UACI,cAACzT,EAAA,EAAD,CAAYG,UAAU,MACVF,UAAWtC,EAAQ4D,QACnB6N,wBAAyB,CAACC,OAAOC,KAAUC,SAASoE,EAAOpS,QAAS,CAAEiO,SAAU,CAAC,eAE3E,MAAhBmE,EAAOP,OACT,8BACI,cAAC,EAAD,CAAOxV,GAAI+V,EAAOP,MAAMxV,IAAM,KACvB6D,KAAMkS,EAAOP,MAAM3R,KAAKnC,MACxBkE,OAAQ,GACR9C,KAAMiT,EAAOP,MAAM1S,KACnB+C,SAAUkQ,EAAO/V,UAMhC,cAAC2N,EAAA,EAAD,CAAQlL,QAzDJ,kBAChBuJ,GAAiB,CACb3L,QACA2K,WACA3J,QAAQ,CACJD,KAAK,iBAoDD,SACKmM,GAAmBA,EAAgB4I,oBAI/CJ,EAAOJ,WAAWtI,KAAK,SAAAuI,GAAI,OACxB,cAAC,GAAD,CAEI5V,GAAI4V,EAAK5V,IADJ4V,EAAK5V,WClIjBoW,GAA0B3Y,IAAH,isBCU9BiB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC+M,OAAO,CACHhF,UAAU,GAAD,OAAK/H,EAAM8H,QAAQ,GAAnB,WAkEF2P,GA9DM,SAACvW,GAClB,IAAOE,EAAQF,EAARE,GAAGQ,EAAKV,EAALU,IACJ+P,EAAgBC,GAAiB1Q,GACjCC,EAAUrB,GAAUoB,GAElBS,EADUjD,IAAMgD,WAAWjD,GAA3BgD,MACAE,SAER,EAA4BjD,IAAMgI,SAAS,IAA3C,mBAAOqG,EAAP,KAAe2K,EAAf,KAEA,EAA+BxV,YAASsV,GAAyB,CAC7DzV,UAAUC,OAAOC,OAAON,EAASE,cAAc,CAC3C4Q,UAAU7Q,EAAI6Q,UACdkF,UAAU/V,EAAI+V,UACdvW,OAEJwW,YAAa,aANVzV,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAmBvB,OAVA1D,IAAM2D,WAAU,WACZ,IAAe,IAAZF,GAAqBC,EAAK,CACzB,IAAMyV,EAAYtV,IAAIH,EAAM,sCAAuC,IACnEsV,EAAU,2BACHG,GADE,IAEL5N,KAAK4N,EAAU5N,KAAKnH,YAG7B,CAACX,EAAQC,IAERD,EAAgB,cAACqB,EAAA,EAAD,CAAYC,UAAW+I,YACnBmF,EAAcnJ,KACdmJ,EAAclK,eACdmH,QAAQ,QAHZ,8CAMhB/N,EAAc,cAAC2C,EAAA,EAAD,CAAYC,UAAW+I,YACjBmF,EAAcnJ,KACdmJ,EAAclK,eACdmH,QAAQ,QAHd,yCAMlBpP,QAAQC,MAAM,mCAAmCsN,EAAO5J,OAKpD,cAACK,EAAA,EAAD,CAAYC,UAAWtC,EAAQ4L,OACnBpJ,UAAU,MACViP,wBAAyB,CAACC,OAAOC,KAAUC,SAAShG,EAAO9C,KAAM,CAAE+I,SAAU,CAAC,iB,UC5D5FlT,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC+M,OAAO,CACHhF,UAAU,GAAD,OAAK/H,EAAM8H,QAAQ,GAAnB,MACTuB,SAAU,QACVhJ,OAAQ,YACR,yBAAyB,CACrB,yBAAyB,CACrB,SAAS,CACLyX,KAAM9X,EAAMY,QAAQiH,QAAQ/G,KAC5BiK,WAAY/K,EAAMsK,WAAWS,YAEjC,UAAW,CACPgN,OAAQ/X,EAAMY,QAAQsL,KAAK,MAE/B,SAAU,CACN6L,OAAQ/X,EAAMY,QAAQiH,QAAQ/G,aAsBnCkX,GAfI,SAAC9W,GAChB,IAAO+W,EAAS/W,EAAT+W,MACD9W,EAAUrB,GAAUoB,GAE1B,OADA1B,QAAQC,MAAM,iCAAiCwY,GAEvC,qBAAKxU,UAAWtC,EAAQ4L,OAAxB,SACI,cAAC,KAAD,CAAqBjK,MAAOmV,EAAOhO,KAAI,UAAKgO,EAAL,UCqFxCC,GA3GD,SAAChX,GACX,IAAMyQ,EAAgBC,GAAiB1Q,GACvC,EAA2BxC,IAAMgD,WAAWjD,GAApCgD,EAAR,EAAQA,MAAM2K,EAAd,EAAcA,SACd,EAA0B1N,IAAMgI,UAAS,GAAzC,mBAAOyR,EAAP,KAAcC,EAAd,KAEIzT,EASAlD,EATAkD,KACA0H,EAQA5K,EARA4K,aACA4L,EAOAxW,EAPAwW,MACAI,EAMA5W,EANA4W,WACA1W,EAKAF,EALAE,SACAC,EAIAH,EAJAG,IACAyL,EAGA5L,EAHA4L,oBACAC,EAEA7L,EAFA6L,kBACAgL,EACA7W,EADA6W,kBAEI3J,EAAqBhN,EAArBgN,gBAEFoD,EAAO1F,IAAiBgM,EAE9B3Z,IAAM2D,WAAU,WACTsC,EAAK4T,mBAAmBnX,IACvBmM,YACI,kBAAM6K,GAAS,KACf,OAEV,IAEF,IAAMvU,EAAU,WACTwJ,GACCjB,EAAS,CACL5J,KAAK,sBAET+K,YAAW,kBAAInB,EAAS,CACpB5J,KAAK,wBACN8K,GACHC,YAAW,kBAAInB,EAAS,CACpB5J,KAAK,YACN8K,IAEHlB,EAAS,CACL5J,KAAK,WA2BjB,OACI,sBAAKiB,UAAW+I,YACZmF,EAAc3J,KACd2J,EAAclJ,YACbsJ,EAAO,SAAS,IAHrB,UAKI,cAAC,GAAD,IACCpN,EAAKgC,OACN,cAAC,EAAD,CAAOvF,GAAIuD,EAAKgC,MAAMvF,GACf6D,KAAMN,EAAKgC,MAAM1B,KAAKN,EAAKgC,MAAM1B,KAAKnC,MAAM,KAC5CkE,OAAQrC,EAAKgC,MAAMK,OAAOrC,EAAKgC,MAAMK,OAAOyH,KAAI,SAAAkE,GAAK,OAAEA,EAAM7P,SAAO,GACpEoB,KAAMS,EAAKgC,MAAMzC,KACjBC,IAAKQ,EAAKxB,QAGjB,sBAAKM,UAAW+I,YACZmF,EAAcvI,QACduI,EAAc3H,aAFlB,UAII,cAACxG,EAAA,EAAD,CAAYC,UAAWkO,EAAclK,cACzBmH,QAAQ,KADpB,SAEKjK,EAAKxB,QAEV,cAACK,EAAA,EAAD,CAAYC,UAAWkO,EAAchK,SACzBhH,MAAM,UACNiO,QAAQ,KAFpB,SAGKjK,EAAKgD,WAhDfhD,EAAK4T,mBAAmBnX,GACpBQ,GAAOuW,EACC,cAAC,GAAD,CAAc/W,GAAIuD,EAAK4T,mBAAmBnX,GAAIQ,IAAKA,IACvD,cAAC4B,EAAA,EAAD,CAAYC,UAAW+I,YAClBmF,EAAcnJ,KACdmJ,EAAclK,eACPmH,QAAQ,QAHpB,8CAOJ,cAAC,GAAD,CAAYqJ,MAAOA,IAGV,WAChB,GAAIK,EAGJ,OAAO,cAACvJ,EAAA,EAAD,CAAQlL,QAASA,EAAjB,SACF8K,GAAmBA,EAAgB6J,WAmC/BC,U,yCC4CFC,GANE,SAACC,GACd,IAAMC,EAjJiB,CACvB1Q,SAAS,CACLsF,OAAO,CACLT,OAAO,CACHjH,OAAO,SAGbkC,KAAK,CACDC,UAAU,SAEdmB,QAAQ,CAEJO,QAAQ,CACJH,GAAG,OACHO,GAAG,OACHjJ,KAAK,SAIbkK,UAAU,CACNjK,MAAM,OACN+E,OAAO,MACP2F,cAAc,OACdN,OAAO,OAEXuI,cAAc,CACV9I,aAAa,SAGrBhK,QAAS,CACLiH,QAAQ,CACJgR,MAAO,UACP/X,KAAM,UACNqJ,KAAM,WAEVU,UAAU,CACNgO,MAAO,UACP/X,KAAM,UACNqJ,KAAM,WAEVF,KAAK,CACDpC,QAAQ,4BACRgD,UAAU,uBAEd/B,WAAW,CACPC,QAAS,CACLC,MAAM,kBACNC,YAAY,iBACZC,UAAU,kBACVC,IAAI,mBAERuK,cAAe,uBAEnBoF,QAAQ,CACJ/P,QAAQ,CACJS,GAAG,6CACHO,GAAG,+CAIfO,WAAW,CACPyO,YAAY,CACRpY,MAAM,6BAEVoK,WAAW,CAAC,OAAO,YAAY,QAAQ,cAAciO,KAAK,KAC1DC,GAAG,CACCzO,WAAY,KAEhB0O,GAAG,CACC1O,WAAY,KAEhBD,MAAM,CACF/J,SAAS,WAMjBqL,YAAY,CACRG,OAAO,CACHC,KAAK,mCACLuB,OAAO,6BAEXnI,SAAS,CACL0G,KAAK,MAGbjE,QAAS,EACTqR,UAAW,CACPC,YAAY,CACRC,KAAK,CACD1Y,MAAM,8BAGd2Y,SAAS,CACLD,KAAK,CACD1Y,MAAM,8BAGd4Y,UAAU,CACNC,UAAU,CACN,aAAc,CACV7Y,MAAO,4BACPiH,gBAAiB,+BAK7B6R,cAAc,CACVlP,MAAM,CACF,MAAM,CACF5J,MAAM,cAetBO,MAAM,CACFqY,UAAU,CACNG,eAAc,EACd/Y,MAAM,UACNiO,QAAQ,aAGZwK,YAAY,CACRM,eAAc,EACd/Y,MAAM,WAEV2Y,SAAS,CACLI,eAAc,EACd/Y,MAAM,aAQd,OADcgZ,aAAgBC,KAAOhB,EAAYD,KC9I/CkB,GAAa,SAACC,GAChB,IAAMC,EAAKD,EAAcnN,OAUzB,OATemN,EAAc/D,QAAO,SAACiE,EAAIhS,EAAKgF,GAC1C,IAAMgJ,EAAQhJ,EAAE,EAMhB,OAJAgN,EADS,sBAAkBhE,EAAlB,MACA,CACLtN,IAAI,QAAD,OAAWsN,EAAM,EAAjB,cAAyB,IAAI+D,EAA7B,MACHE,gBAAgB,GAAD,OAAe,IAATjE,EAAM,GAAZ,MAEZgE,IACT,KA0FSE,GAtFI,SAAChZ,GAGhB,IAAQO,EAAU/C,IAAMgD,WAAWjD,GAA3BgD,MAEJ0Y,EAGA1Y,EAHA0Y,iBACAL,EAEArY,EAFAqY,cACAM,EACA3Y,EADA2Y,gBAoDEjZ,EAjDYpB,aAAW,SAAAC,GAAK,MAAK,CACnCqa,OAAQ,CACJhS,SAAU,WACVC,OAAQ,MACRI,IAAK,EACLG,KAAM,EACND,OAAO,EACP7H,MAAO,EACP6K,WAAY,qBACZ,WAAW,CACP7K,MAAO,OACPkZ,gBAAiB,OAGzBK,KAAM,CACFjS,SAAU,WACVC,OAAQ,EACRI,IAAK,MACLG,KAAM,MACN0R,UAAW,oCACX5O,QAAS,EACTC,WAAY,mBAEZ,QAAQ,CACJ4O,gBAAiB,OAGrB,YAAY,CACR7O,QAAS,IAIjB1B,KAAK,CACDvC,cAAc,aAElB+S,KAAK,yBACDpS,SAAU,WACVQ,KAAM,EACN9H,MAAO,EACP+E,OAAO,GAAD,OAAK,IAAIgU,EAAcnN,OAAvB,KACN/E,gBAAiB5H,EAAMY,QAAQiH,QAAQ/G,KACvC8K,WAAY,kBACTiO,GAAWC,IAPd,IASA,YAAY,CACR/Y,MAAO,aAIHjB,CAAUoB,GAE1B,OACI,sBAAKuC,UAAW+I,YACZrL,EAAQkZ,OACPF,EAAiB,SAAS,IAF/B,UAII,qBAAK1W,UAAWtC,EAAQmZ,KAAxB,SACI,cAAC9W,EAAA,EAAD,CAAYoL,QAAQ,KAAKnL,UAAWtC,EAAQ8I,KAA5C,SAEKmQ,MAaRN,EAAcrL,KAAI,SAAC7L,EAAIoK,GAAL,OAAS,qBAAavJ,UAAWtC,EAAQsZ,MAAtBzN,UC7E5ClN,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCc,KAAM,CACFuH,SAAU,WACV,2BAA2B,CACvB4C,UAAU,mBA2HPyP,GAnGH,SAACxZ,GACT,IAAMC,EAAUrB,GAAUoB,GAE1B,EAA4BxC,IAAMgD,WAAWjD,GAArCgD,EAAR,EAAQA,MAAO2K,EAAf,EAAeA,SAEXzK,EAIAF,EAJAE,SACAgD,EAGAlD,EAHAkD,KACAgW,EAEAlZ,EAFAkZ,WACAtM,EACA5M,EADA4M,UAGJ,EAA+BnM,YAAStD,EAAU,CAC9CmD,UAAUJ,EAASE,gBADhBM,EAAP,EAAOA,QAAStB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,KAiCvB,GA7BA1D,IAAM2D,WAAU,WAEZ,GADA7C,QAAQC,MAAM,oBACC,IAAZ0C,GAAqBC,EAAK,CACzB5C,QAAQC,MAAM,2BAEd,IAAMmb,EAAWrY,IAAIH,EAAM,gBAAiB,IAG5CT,EAASgN,gBA1CM,SAAAiM,GAYvB,MAXa,CACT,WACA,YACA,cACA,kBACA,iBACA,WACA,eACA,gBACA,eAEQ7E,QAAO,SAAC8E,EAAOC,GAGvB,OAFAD,EAAOC,GAAOvY,IAAIqY,EAAD,UAAaE,EAAb,WAEVD,IACT,IA0BiCE,CAAmBH,GAC9Cpb,QAAQC,MAAM,6BAA6BkC,EAASgN,iBAEpDvC,EAAS,CACL5J,KAAK,aACLC,QAAQ,CACJmY,cAKgC,SAArCjZ,EAASE,cAAc+O,W7BtFlB,SAAC,GAAoC,IAAnC3R,EAAkC,EAAlCA,MAAM2G,EAA4B,EAA5BA,IAAcwG,GAAc,EAAxBuL,UAAwB,EAAdvL,UACtC1M,IAASsb,WAAW,CAChB,eAAgB,CACZ/b,QACA2G,SAKRlG,IAASub,OAAO,kBACZ7O,EAAS,CACL5J,KAAK,UACLC,QAAQ,CACJb,IAAIgO,OAAOhO,U6B0EXsZ,CAAY,CACRjc,MAAO0C,EAAS1C,MAChB2G,IAAKjE,EAASwZ,aAEd/O,gBAGb,CAACjK,EAAQC,IAERD,EAAS,OAAO,2CACpB,GAAItB,EAAO,OAAO,yCAOlB,OACI,cAACua,GAAA,EAAD,CAAepb,MAAOA,GAAM2E,EAAKA,EAAKgU,UAAU,IAAhD,SACA,cAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACxT,QAAS,EAAzB,SACI,cAACuT,EAAA,EAAD,CAAMrT,MAAI,EAAC+B,IAAE,EAACrG,MAAO,CAACrD,OAAO,QAA7B,SAEI,sBAAKoD,UAAW+I,YACZrL,EAAQL,KACP6Z,EAAW,aAAa,IAF7B,UAII,cAAC,GAAD,IACChW,GACG,qCACA,cAAC,GAAD,GACSA,EAAKvD,IAEbuD,EAAKoS,WAAWtI,KAAK,SAACuI,EAAKhK,GACxB,OAAGgK,EAAK/R,OAAStD,EAASuF,SAASqU,IACxB,cAAC,GAAD,CAEHna,GAAI4V,EAAK5V,IADJ4V,EAAK5V,IAIf4V,EAAK/R,OAAStD,EAASuF,SAASsU,OACxB,cAAC,GAAD,CAEHpa,GAAI4V,EAAK5V,IADJ4V,EAAK5V,IAGX,eAACoC,EAAA,EAAD,CAAY7C,MAAM,QACNgD,UAAU,IADtB,uBAEQqT,EAAK/R,KAFb,0BAhCZ,WACf,GAAGoJ,EACC,OAAO,cAAC,GAAD,IAqCMoN,gBClHVC,GAtBH,SAAC,GAAkB,IAAjB1T,EAAgB,EAAhBA,KAAK2T,EAAW,EAAXA,OACf,OACI,gCACI,mDACA,mEAAqC,4BAAI3T,OACzC,6BACK2T,EAAOlN,KAAK,SAAA5N,GACT,IAAM+a,EAAqBrZ,IAAI1B,EAAM,6BACrC,OAAQ,+BACHA,EAAMgb,QAAQ,4BAAID,EAAkB,YAAQA,GAAqB,OAD9D,UAAY/a,EAAMib,QAAlB,YAA6BF,aCArCG,QACW,cAA7BnM,OAAO2C,SAASyJ,UAEe,UAA7BpM,OAAO2C,SAASyJ,UAEhBpM,OAAO2C,SAASyJ,SAASC,MACvB,2D,oDCdA/U,GAAW,CACbqU,IAAI,cACJC,OAAO,iBACPrU,YAAY,eACZC,YAAY,eACZC,UAAU,YACVC,SAAS,WACTE,MAAM,cAEJ1F,GAAe,CACjBoP,QAAQ,UACRnN,OAAO,SACPmY,QAAQ,WAENrK,GAAS,CACXsB,QAAQ,QCoDGgJ,GAlEC,CACZhZ,MAAM,6BACNS,YAAY,sEAMZqB,KAAK,SAMLmX,WAAW,CACPC,KAAK,CACDpX,KAAK,SACL2H,OAAO,MACP0P,QAAQC,yBAEZ3L,UAAU,CACN3L,KAAK,SACLuX,KDxBM,CAAC,UAAU,QCyBjBF,QAAQC,QAEZtd,MAAM,CAAEgG,KAAK,SAASwX,QAAQ,kBAC9BrY,eAAe,CACXa,KAAK,SACL2H,OAAO,MACP0P,QAAQC,oCAEZG,aAAa,CACTzX,KAAK,SACL2H,OAAO,MACP0P,QAAQC,yCAEZI,kBAAkB,CACd1X,KAAK,UAGTpD,cAAc,CACVoD,KAAK,SACLmX,WAAW,CACPhb,GAAG,CAAC6D,KAAK,UACT2X,SAAS,CAAC3X,KAAK,SAASwX,QAAQ,2BAEpCI,SAAU,CAAC,KAAM,aAErB1B,aAAa,CACTlW,KAAK,SACL2H,OAAO,MACP0P,QAAQC,0BAGhBM,SAAU,CACN,OACA,YACA,QACA,iBACA,eACA,oBACA,gBACA,gBAEJC,sBAAqB,G,iDCrEnBC,G,oDACF,cAAgC,IAAD,EAAlBlB,EAAkB,EAAlBA,QAASF,EAAS,EAATA,OAAS,6BAE3B,cAAME,IAEDmB,KAAO,EAAK/J,YAAY+J,KAEzBxL,MAAMyL,mBACNzL,MAAMyL,kBAAN,gBAA8B,EAAKhK,aAGvC,EAAK0I,OAASA,EAVa,E,uBADJnK,QCMzB0L,GAAM,IAAIxB,GAAI,CAACyB,aAAY,ICJ3BzE,GAAW,SAAC1Y,GACd,GAAoB,kBAAVA,EACN,IACI,OAAOsR,KAAKF,MAAMpR,GACrB,MAAMsD,GACH9D,QAAQqB,MAAM,uBAAuBb,EAAM,gCAAgCsD,GAGnF,OAAOtD,GAGLod,GAAgB,SAACC,GACnB,GAAIA,GAGiB,kBAAXA,EACN,IACI,OAAO/L,KAAKF,MAAMiM,GACrB,MAAM/Z,GACH9D,QAAQqB,MAAM,2BAA2Bwc,EAAO,gCAAgC/Z,KAyC7Ega,GAnCI,SAAC1C,GAAD,MAAe,CAE9BxZ,GAAImB,IAAIqY,EAAU,MAClB3V,KAAM1C,IAAIqY,EAAU,cACpBE,IAAMvY,IAAIqY,EAAU,YAAa,IACjCzX,MAAOZ,IAAIqY,EAAU,QAAS,IAC9BjT,SAAUpF,IAAIqY,EAAU,iBAAkB,IAC1ChX,YAAarB,IAAIqY,EAAU,oBAAqB,IAChDvV,SAAU9C,IAAIqY,EAAU,iBAAkB,IAC1CjC,UAAWD,GAASnW,IAAIqY,EAAU,kBAAmB,KACrDvN,oBAAqBiE,KAAKF,MAAM7O,IAAIqY,EAAU,oBAAoB,IAClER,gBAAiB7X,IAAIqY,EAAU,wBAAyB,IACxD2C,eAAgBjM,KAAKF,MAAM7O,IAAIqY,EAAU,eAAe,IACxDtM,kBAAmBgD,KAAKF,MAAM7O,IAAIqY,EAAU,kBAAkB,IAE9DjU,MAAOpE,IAAIqY,EAAU,aAAc,IACnC/I,SAAUtP,IAAIqY,EAAU,kBACxBxH,WAAYgK,GAAc7a,IAAIqY,EAAU,qBACxCrZ,SAAUgB,IAAIqY,EAAU,iBAAkB,IAAInM,KAAI,SAAAuI,GAC9C,MAAO,CACH5V,GAAGmB,IAAIyU,EAAK,MACZ3F,QAAQC,KAAKF,MAAM7O,IAAIyU,EAAK,sBAGpCuB,mBAAoB,CAChBnX,GAAGmB,IAAIqY,EAAU,6BAA8B,MAC/C3V,KAAK1C,IAAIqY,EAAU,qCAAsC,OAE7D7D,WAAaxU,IAAIqY,EAAS,iBAAiB,IAAInM,KAAI,SAAAuI,GAC/C,MAAO,CACH5V,GAAImB,IAAIyU,EAAM,MACd/R,KAAM1C,IAAIyU,EAAM,oBCnDtBtG,GAAO,SAAA/O,GAET,MAAO,CACHA,WACAgD,KAAM,KACN6Y,UAAU,GACVrP,eAAc,EACdD,SAAS,GACT7B,aAAa,KACbsO,YAAW,EACXvM,UAAS,EACTC,WAAU,EACVoP,KAAK,EACLxF,MAAM,EACNrW,IAAI,KACJiU,OAAM,EACNyC,mBAAkB,EAClB6B,kBAAiB,EACjB9M,qBAAoB,EACpB+M,gBAAgB,QAChB9M,kBAAkB,IAClBwM,cAAa,YAAO4D,MAAM,IAC1BpP,mBAAkB,EAClB+J,WAAW3L,GAAgB,EAAE,SAI/BmE,GAAU,SAACpP,EAAOqP,GACpB,IAAQrO,EAAYqO,EAAZrO,QAEF2L,EAAW,SAAC,GAAD,IAAEF,EAAF,EAAEA,SAASuP,EAAX,EAAWA,IAAIhR,EAAf,EAAeA,MAAf,OACbyB,EAASpB,QAAQL,GAASgR,GAExBE,EAAW,SAAC,GAA8B,IAA7BH,EAA4B,EAA5BA,UAAUI,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,MAC3BC,EAAcN,EAAUhc,QAAO,SAAAuL,GAAM,OAAIA,KAAQJ,OACjDyH,EAAUoJ,EAAU7Q,OACpBsL,EAAQhL,KAAKC,MAAO4Q,EAAY1J,EAAS,KAQ/C,OrCRc,SAAC,GAAD,IAAEwJ,EAAF,EAAEA,QAAcG,GAAhB,EAAUF,MAAV,EAAgBE,WAClCre,IAASC,MAAM,eAAe,CAC1ByW,OAAM,+CACwBwH,GAAWG,KqCDzCC,CAAc,CACVJ,UACAC,QACAE,UAAU9F,IAGPA,GAGX,OAAQnH,EAAOtO,MACX,IAAK,aAED,IAAOoY,EAAYnY,EAAZmY,SACPpb,QAAQC,MAAM,kCAAkCmb,GAChD,IAAMjW,EAAO2Y,GAAW1C,GAElB1M,EAAW,CAACvJ,EAAKvD,IACvBuD,EAAKoS,WAAW/E,SAAQ,SAAAgF,GAAI,OAAI9I,EAAS+P,KAAKjH,EAAK5V,OACnD8M,EAAS+P,KAAKxc,EAAM4W,YAEpB,IAAMoF,EAAMvP,EAASvB,OAAQ,EAE7B,OAAO,2BACAlL,GADP,IAEIkD,OACA0H,aAAa1H,EAAKvD,GAClBiM,oBAAoB1I,EAAK0I,oBACzB+M,gBAAgBzV,EAAKyV,gBACrB9B,kBAAkB3T,EAAK4Y,eACvBjP,kBAAkB3J,EAAK2J,kBACvBJ,WACAE,SAASA,EAAS,CAACF,WAASuP,MAAIhR,MAAM9H,EAAKvD,KAC3Cqc,QAGR,IAAK,UACD,IAAM7b,EAAMa,EAAQb,IAEpB,OADApC,QAAQC,MAAM,0BAA0BmC,GACjC,2BACAH,GADP,IAEIG,QAGR,IAAK,aACD,IAAMyV,EAAS5U,EAAQ4U,OACjBC,EAAc7U,EAAQ6U,YACxBpJ,EAAWzM,EAAMyM,SAErB,GAAIoJ,GAAepJ,EAAS3G,SAAS+P,GAAc,CAAC,IAAD,EACzCjP,EAAW6F,EAASpB,QAAQwK,GAAe,GACjD,EAAApJ,GAASgQ,OAAT,SAAgB7V,EAAU,GAA1B,mBAAgCgP,UAEhCnJ,EAAQ,sBAAOA,GAAP,YAAoBmJ,IAGhC,IAAMoG,EAAMvP,EAASvB,OAAQ,EAG7B,OADAnN,QAAQC,MAAM,+BAA+B4X,EAAO,iBAAiBC,GAC9D,2BACA7V,GADP,IAEIyM,WACAE,SAASA,EAAS,CAACF,WAASuP,MAAIhR,MAAMhL,EAAM4K,eAC5CoR,QAGR,IAAK,aACD,IAAMU,EAAe1c,EAAMyM,SAASpB,QAAQrL,EAAM4K,cAC5C+R,EAAYD,EAAa,EAC/B3e,QAAQC,MAAM,sCAAsC0e,EAAa,WAAW1c,EAAMgc,KAElF,IAAIY,EAAY5c,EAAM4K,aAOtB,OALG8R,EAAgB1c,EAAMgc,MACrBY,EAAY5c,EAAMyM,SAASkQ,IAIxB,2BACA3c,GADP,IAEI4K,aAAagS,EACbjQ,SAAUA,EAAS,2BAAI3M,GAAL,IAAWgL,MAAM4R,KACnC1D,YAAW,EAGX9E,OAAM,IAGd,IAAK,aACDrW,QAAQC,MAAM,sBACd,MAAgBgC,EAAMyM,SAASoQ,OAAO,GAA/B7R,EAAP,oBACO9H,EAAQlD,EAARkD,KACFsT,EAASxW,EAATwW,MAmBL,OAjBItT,EAAK4T,oBAAuB5T,EAAK4T,mBAAmBnX,KACpD6W,EAAQ0F,EAAS,CACbH,UAAU/b,EAAM+b,UAChBI,QAAQnc,EAAMkD,KAAKmW,IACnB+C,MAAMpc,EAAME,SAAS4c,sBAatB,2BACA9c,GADP,IAEI4K,aAAcI,EACd2B,SAAUA,EAAS,2BAAI3M,GAAL,IAAYgL,WAC9BkO,YAAW,EACX1C,UAGR,IAAK,aACD,IAAMxL,EAAQhK,EAAQgK,MAEtB,OADAjN,QAAQC,MAAM,+BAA+BgN,GACtC,2BACAhL,GADP,IAEI4K,aAAcI,EACd2B,SAAUA,EAAS,2BAAI3M,GAAL,IAAYgL,aAGtC,IAAK,cACD,IAAc0B,EAA2B1L,EAAlCsK,OAAqBuJ,EAAa7T,EAAb6T,UAEtB8H,EADe3c,EAAMyM,SAASpB,QAAQrL,EAAM4K,cACnB,EACzBgC,EAAY+P,IAAc3c,EAAMgc,IAEtCje,QAAQC,MAAM,wCAAyC0O,GAEvD,IAAMqP,EAAS,sBAAO/b,EAAM+b,WAAb,CAAwBrP,IAChCxJ,EAAQlD,EAARkD,KACFsT,EAAgCxW,EAAhCwW,MAAmBoG,EAAa5c,EAA1B4K,aAEX,GAAGiK,EACC,GAAGjI,EAAU,CACL1J,EAAK4T,oBAAuB5T,EAAK4T,mBAAmBnX,KAChD6W,EAAQ0F,EAAS,CACjBH,UAAWA,EACXI,QAASnc,EAAMkD,KAAKmW,IACpB+C,MAAOpc,EAAME,SAAS4c,sBALrB,MAOK9c,EAAMyM,SAASoQ,OAAO,GAAnCD,EAPQ,yBASTA,EAAU5c,EAAMyM,SAASkQ,GAIjC,OAAO,2BACA3c,GADP,IAEI4K,aAAagS,EACbjQ,SAAUA,EAAS,2BAAI3M,GAAL,IAAWgL,MAAM4R,KACnChQ,YACAmP,YACArP,gBACA8J,QACA0C,YAAarE,IAiBrB,IAAK,QACD9W,QAAQC,MAAM,iBAEd,MAAuBgC,EAAMyM,SAASoQ,MAAM,EAAE,GAAvCjS,EAAP,oBAGA,OAFA7M,QAAQC,MAAM,yBAAyBgC,EAAMyM,UAEtC,2BACAzM,GADP,IAEI4K,eACAmR,UAAU,GACVnP,WAAU,EACVF,eAAc,EACd0H,OAAM,IAGd,IAAK,oBAED,OADArW,QAAQC,MAAM,6BACP,2BACAgC,GADP,IAEI0Y,kBAAkB1Y,EAAM0Y,mBAGhC,QACI,MAAM,IAAI3I,MAAJ,+BAAkCV,EAAOtO,KAAzC,oBAILgc,GAAQ,SAAAtd,GACjB,MAA0BxC,IAAMoT,WAC5BjB,GACA3P,EAAMS,SACN+O,IAHJ,mBAAOjP,EAAP,KAAc2K,EAAd,KAKA,OACI,cAAC3N,EAAaggB,SAAd,CAAuB3b,MAAO,CAAErB,QAAO2K,YAAvC,SACKlL,EAAMwd,Y,OC5LnB9O,OAAO+O,UAjDM,SAACpb,EAAO4Y,GACnB,IAEEA,EHhBqB,SAACA,GAGtB,IADce,GAAI0B,SAASC,GAAe1C,GAEtC,MAAM,IAAIY,GAAiB,CACvBlB,QAAS,+BACTF,OAAQuB,GAAIvB,SAUpB,OANAQ,EAAQta,cAAc+O,UvBoB1B,SAAyBA,GACrB,MAAmB,YAAZA,EACH,OACAA,EAAUkO,cuBvBoBC,CAAgB5C,EAAQvL,WAC1DuL,EAAQjV,SAASA,GACjBiV,EAAQra,eAAeA,GACvBqa,EAAQ6C,eHrBI,MGsBZ7C,EAAQoC,mBHrBa,KGsBrBpC,EAAQtK,SAASA,GACVsK,EGAG8C,CAAiB9C,GAC3B,IAAM+C,EAAQ,GACX/C,EAAQQ,oBACTuC,EAAQC,cAAchD,EAAQQ,mBAEhC,IAAMyC,EAAS,IAAIC,KAAa,CAC9BC,IAAInD,EAAQO,aACZwC,YAGIK,EAAoBC,aAAwB,CAEhDC,KAAM/S,GAAgB,EAAG,QAK3BgT,IAASC,OACP,cAACC,GAAA,EAAD,CAAgBL,kBAAmBA,EAAnC,SACE,cAAC,GAAD,CAAO5d,SAAUwa,EAAjB,SACE,cAAC,KAAD,CAAgBiD,OAAQA,EAAxB,SAEE,qBAAK1b,MAAO,CAACmK,SAAS,UAAtB,SACE,cAAC,GAAD,YAORoC,SAAS4P,eAAetc,IAG3B,MAAMD,GACL9D,QAAQqB,MAAM,WAAWyC,GAEzBoc,IAASC,OACP,cAAC,GAAD,CACE3X,KAAM1E,EAAEuY,QACRF,OAAQrY,EAAEqY,SAEZ1L,SAAS4P,eAAetc,MPkExB,kBAAmBuc,WACrBA,UAAUC,cAAc9E,MACrB+E,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtf,GACLrB,QAAQqB,MAAMA,EAAMgb,c","file":"static/js/main.feeed4c4.chunk.js","sourcesContent":["import React from 'react';\n\nexport const StoreContext = React.createContext(null);\n","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:cover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_QUIZ = gql`\n    query getQuiz($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            quiz: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                key: property(name:\"game4:quizKey\"){\n                    value\n                }\n                title: displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                description: property(language:$language,name:\"game4:description\"){\n                    value\n                }\n                duration: property(name:\"game4:duration\"){\n                    value\n                }\n                userTheme: property(name:\"game4:webappTheme\"){\n                    value\n                }\n                transition: property(name:\"game4:transition\"){\n                    value\n                }\n                transitionLabel: property(name:\"game4:transitionLabel\"){\n                    value\n                }\n                reset: property(name:\"game4:reset\"){\n                    value\n                }\n                browsing: property(name:\"game4:browsing\"){\n                    value\n                }\n                mktgForm: property(name:\"game4:marketingFormChoice\"){\n                    value\n                }\n                mktoConfig: property(language:$language,name:\"game4:mktoConfig\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                consents: property(name:\"game4:consentType\"){\n                    nodes: refNodes {\n                        id: uuid\n                        actived: property(language:$language,name:\"wem:activated\"){\n                            value\n                        }\n                    }\n                }\n                personalizedResult: property(name:\"game4:personalizedResultContent\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                },\n                btnStart: property(language:$language, name:\"game4:btnStart\"){\n                    value\n                },\n                btnSubmit: property(language:$language, name:\"game4:btnSubmit\"){\n                    value\n                },\n                btnQuestion: property(language:$language, name:\"game4:btnQuestion\"){\n                    value\n                },\n                btnNextQuestion: property(language:$language, name:\"game4:btnNextQuestion\"){\n                    value\n                },\n                btnShowResults: property(language:$language, name:\"game4:btnShowResults\"){\n                    value\n                },\n                btnReset: property(language:$language, name:\"game4:btnReset\"){\n                    value\n                },\n                consentTitle: property(language:$language, name:\"game4:consentTitle\"){\n                    value\n                },\n                correctAnswer: property(language:$language, name:\"game4:correctAnswer\"){\n                    value\n                },\n                wrongAnswer: property(language:$language, name:\"game4:wrongAnswer\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import {gql} from 'apollo-boost';\n\nexport const GET_CONSENT = gql`\n    query getConsent($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            consent: nodeById(uuid: $id) {\n                id: uuid\n                identifier:name\n                title:displayName(language:$language)\n                description: property(language:$language, name:\"jcr:description\"){\n                    value\n                }\n                actived: property(language:$language,name:\"wem:activated\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import uTracker from \"unomi-analytics\";\n\nconst syncTracker = ({scope,url,sessionId,dispatch}) => {\n    uTracker.initialize({\n        \"Apache Unomi\": {\n            scope,\n            url,\n            // sessionId\n        }\n    });\n\n    uTracker.ready( () =>\n        dispatch({\n            case:\"ADD_CXS\",\n            payload:{\n                cxs:window.cxs\n            }\n        })\n    );\n};\n\nconst syncConsentStatus= ({typeIdentifier,scope,status}) => {\n    const statusDate = new Date();\n    const revokeDate = new Date(statusDate);\n    revokeDate.setFullYear(revokeDate.getFullYear() + 2);\n    console.debug(\"syncConsentStatus status :\", status);\n\n    uTracker.track(\"modifyConsent\", {\n        consent: {\n            typeIdentifier,\n            scope,\n            status,\n            statusDate: statusDate.toISOString(),//\"2018-05-22T09:27:09.473Z\",\n            revokeDate: revokeDate.toISOString()//\"2020-05-21T09:27:09.473Z\"\n        }\n    });\n};\n\n// const syncQuizScore = ({quizKey,split,quizScore}) =>\n//     uTracker.track(\"setQuizScore\",{\n//         score:`${quizKey}${split}${quizScore}`\n//     });\n\nconst syncQuizScore = ({quizKey,split,quizScore}) =>\n    uTracker.track(\"setQuizScore\",{\n        update : {\n            [`properties.quiz-score-${quizKey}`]:quizScore\n        }\n    });\n\n\nconst syncVideoStatus = ({content,parent,status,player}) =>\n    uTracker.track(\"video\",{\n        id:content.id,\n        type:content.type,\n        game4Quiz:{\n            id:content.id,\n            type:content.type\n        },\n        game4Warmup:{\n            id:parent\n        },\n        game4Video:{\n            duration: player.current.getDuration(),\n            currentTime: player.current.getCurrentTime(),\n            status: status\n        }\n    });\n\nconst syncVisitorData = ({propertyName,propertyValue}) =>\n    uTracker.track(\"updateQuizVisitorData\",{\n        update : {\n            [propertyName]:propertyValue\n        }\n    });\n\nexport {\n    syncTracker,\n    syncConsentStatus,\n    syncQuizScore,\n    syncVideoStatus,\n    syncVisitorData\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_CONSENT} from \"components/Consent/ConsentGraphQL\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport {StoreContext} from \"contexts\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport {Typography,FormGroup,FormControlLabel,Checkbox} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    granted:{\n        display:\"flex\",\n        flexWrap:\"wrap\",\n        alignItems: 'center',\n        margin:0,\n        \"& svg\":{\n            marginRight: '.5rem',\n        },\n        \"& i\":{\n            flexBasis: '100%',\n            fontSize: '.85rem',\n        }\n    },\n    denied:{\n        cursor: 'pointer',\n        color: theme.palette.error.main,\n        width: '1rem',\n        marginLeft:'.5rem',\n    }\n}));\n\nconst Consent = (props)=> {\n    const classes = useStyles(props);\n\n    const {id, quizState, quizDispatch} = props;\n    const [consent={}] = quizState.consents.filter(consent => consent.id === id);\n\n    const { state } = React.useContext(StoreContext);\n\n    const {jContent,cxs} = state;\n    const {gql_variables,scope,consent_status} =  jContent;\n\n    const variables = Object.assign(gql_variables,{id})\n    const {loading, error, data} = useQuery(GET_CONSENT, {\n        variables:variables,\n    });\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const consentData = get(data, \"response.consent\", {});\n            quizDispatch({\n                case:\"DATA_READY_CONSENT\",\n                payload:{\n                    consentData,\n                    scope,\n                    cxs,\n                    consent_status\n                }\n            })\n        }\n\n    }, [loading,data]);\n\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.debug(\"*** paint consent : \",id);\n\n    const handleDenied = (consent) => {\n        syncConsentStatus({\n            scope,\n            typeIdentifier:consent.identifier,\n            status:consent_status.DENIED\n        });\n\n        quizDispatch({\n            case:\"DENIED_CONSENT\",\n            payload:{\n                id:consent.id\n            }\n        });\n    }\n\n    const handleChange= (e) => {\n        quizDispatch({\n            case:\"TOGGLE_CONSENT\",\n            payload:{\n                id:e.target.id\n            }\n        });\n    }\n    return(\n        <li>\n            {!consent.granted &&\n            <div>\n                <FormGroup aria-label=\"position\" row>\n                    <FormControlLabel\n                        value={consent.checked}\n                        control={<Checkbox id={consent.id} />}\n                        label={consent.title}\n                        labelPlacement=\"end\"\n                        onChange={handleChange}\n                    />\n                </FormGroup>\n                <Typography className={classes.granted}\n                            style={{fontSize: '.85rem'}}\n                            component=\"i\">\n                    {consent.description}\n                </Typography>\n            </div>\n            }\n            {consent.granted &&\n                <Typography className={classes.granted}\n                            component=\"p\">\n                    <CheckIcon />\n                    {consent.title}\n                    <BackspaceIcon className={classes.denied}\n                                   onClick={()=> handleDenied(consent)} />\n                    <i>{consent.description}</i>\n                </Typography>\n            }\n        </li>\n    )\n};\n\nConsent.propTypes={\n    id:PropTypes.string.isRequired,\n    quizState:PropTypes.object.isRequired,\n    quizDispatch:PropTypes.func.isRequired\n};\n\nexport default Consent;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nconst Image = ({path,alt}) =>{\n    const { state} = React.useContext(StoreContext);\n    const {files_endpoint} = state.jContent;\n    return(\n        <img className=\"d-block w-100\"\n             src={`${files_endpoint}${encodeURI(path)}`}\n             alt={alt}/>\n    )\n}\nexport default Image;","import React, {useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport ReactPlayer from \"react-player\";\nimport {syncVideoStatus} from \"misc/tracker\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    playerWrapper:{}\n}));\n\nconst VideoPlayer = (props)=>{\n    const classes = useStyles(props);\n    const {ownerID,videoURL} = props;\n    const { state } = React.useContext(StoreContext);\n    const {quiz} = state;\n\n    const player = useRef(null);\n\n    const handleVideoStatus = ({status}) => {\n        syncVideoStatus({\n            content:{\n                id:quiz.id,\n                type:quiz.type\n            },\n            parent:ownerID,\n            player,\n            status\n        })\n    }\n\n    // const onReadyHandler = () => {\n    //     console.log(\"onReady seekTo 4.2s\")\n    //     player.current.seekTo(4.2,\"seconds\");\n    // }\n    const onStartHandler = () => {\n        // player.current.seekTo(4.2,\"seconds\");\n    }\n    const onPlayHandler = () => handleVideoStatus({status:\"started\"});\n    const onEndedHandler = () => handleVideoStatus({status:\"end\"});\n    const onPauseHandler = () => handleVideoStatus({status:\"pause\"});\n\n    return (\n        <div className={classes.playerWrapper}>\n            <ReactPlayer\n                ref={player}\n                className='react-player'\n                url={videoURL}\n                controls\n                width='100%'\n                height='100%'\n                // onReady={onReadyHandler}\n                onStart={onStartHandler}\n                // onProgress={(object)=> console.log(\"onProgress : \",object)}\n                onPlay={onPlayHandler}\n                // onSeek={(seconds)=> console.log(\"onSeek : \",seconds)}\n                // onDuration={(seconds)=> console.log(\"onDuration :\",seconds)}\n                onPause={onPauseHandler}\n                onEnded={onEndedHandler}\n            />\n        </div>\n    )\n}\n\nVideoPlayer.propTypes={\n    videoURL:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired\n}\n\nexport default VideoPlayer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\nconst Video = ({url,ownerID}) =>{\n\n\n    return(\n        <VideoPlayer\n            videoURL={url}\n            ownerID={ownerID}\n        />\n    )\n}\nVideo.propTypes={\n    url:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default Video;","import {gql} from 'apollo-boost';\n\nexport const GET_WIDEN_MEDIA = gql`\n    query getWidenMedia($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            media: nodeById(uuid: $id) {\n                id: uuid\n                type: primaryNodeType{\n                    value:name\n                }\n                title:displayName(language:$language)\n                imageURL: property(name:\"wden:templatedUrl\"){\n                    value\n                }\n                videoURL: property(name:\"wden:videoStreamURL\"){\n                    value\n                }\n            }\n        }\n    }\n`\n\n\n","import get from \"lodash.get\";\n\nconst MediaMapper = (mediaData) => ({\n    id: get(mediaData, \"id\"),\n    type: get(mediaData, \"type.value\"),\n    imageURL: get(mediaData, \"imageURL.value\"),\n    videoURL: get(mediaData, \"videoURL.value\")\n})\n\nexport default MediaMapper;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\n\n\nconst WidenImage = ({uuid}) => {\n    const _SIZE_ = '{size}';\n    const _SCALE_ = '{scale}';\n    const _QUALITY_ = '{quality}';\n    const width = '1024';\n    const scale = '1';\n    const quality = '72';\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            media.imageURL=media.imageURL\n                .replace(_SIZE_,width)\n                .replace(_SCALE_,scale)\n                .replace(_QUALITY_,quality);\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <img src={`https://via.placeholder.com/${width}x768/09f/fff?text=Loading`} alt=\"loading\"/>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media &&\n            <img className=\"d-block w-100\"\n             src={media.imageURL}\n             alt={media.title}/>\n        }\n        </>\n    )\n}\n\nWidenImage.propTypes={\n    uuid:PropTypes.string.isRequired\n}\n\nexport default WidenImage;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_WIDEN_MEDIA} from \"./WidenMediaGraphQL\";\nimport get from \"lodash.get\";\nimport MediaMapper from './WidenMediaModel';\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/VideoPlayer\";\n\n\nconst WidenVideo = ({uuid, ownerID}) => {\n\n    const { state } = React.useContext(StoreContext);\n    const { gql_variables} =  state.jContent;\n\n    const variables = Object.assign(gql_variables,{id:uuid})\n    const {loading, error, data} = useQuery(GET_WIDEN_MEDIA, {\n        variables: variables,\n    });\n\n    const [media, setMedia] = React.useState({});\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const media = MediaMapper(get(data, \"response.media\", {}));\n            setMedia(media);\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return (\n        <>\n        {media.videoURL &&\n            <VideoPlayer\n                videoURL={media.videoURL}\n                ownerID={ownerID}\n            />\n        }\n        </>\n    )\n}\n\nWidenVideo.propTypes={\n    uuid:PropTypes.string.isRequired,\n    ownerID:PropTypes.string.isRequired,\n}\n\nexport default WidenVideo;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport Image from './components/Image';\nimport Video from './components/Video';\nimport WidenImage from './components/widen/WidenImage';\nimport WidenVideo from './components/widen/WidenVideo';\n\nconst Media = ({id,type,mixins,path,sourceID,alt}) => {\n    const { state } = React.useContext(StoreContext);\n    const {cnd_type,files_endpoint} = state.jContent;\n\n    // console.log(\"Media equals: \",type === cnd_type.WIDEN_IMAGE)\n    let component = <></>;\n    switch(type){\n        case cnd_type.WIDEN_IMAGE :\n            component = <WidenImage uuid={id} />\n            break;\n\n        case cnd_type.WIDEN_VIDEO :\n            component = <WidenVideo uuid={id} ownerID={sourceID} />\n            break;\n\n        case cnd_type.EXT_VIDEO:\n            component = <Video url={path} ownerID={sourceID} />\n            break;\n            \n        case cnd_type.JNT_FILE:\n            if(mixins.includes(cnd_type.IMAGE)){\n                component = <Image path={path} alt={alt}/>\n            }else{\n                component = <Video url={files_endpoint+encodeURI(path)} ownerID={sourceID} />\n            }\n            break;\n            \n        default:\n            if(path)\n                component = <Image path={path} alt={alt}/>\n            break;\n    }\n    // console.log(\"Media component: \",component)\n    return(component)\n}\n\nMedia.propTypes={\n    id:PropTypes.string,\n    type:PropTypes.string,\n    mixins:PropTypes.array,\n    path:PropTypes.string,\n    sourceID:PropTypes.string,\n    alt:PropTypes.string\n}\n\nexport default Media;","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme)=> ({\n    textUppercase: {\n        textTransform: \"uppercase\"\n    },\n    subtitle: {\n        //, &::after\n        \"&::before\":{\n            backgroundColor:theme.palette.primary.main,\n            display: 'block',\n            width:`${theme.spacing(3)}px`,\n            height: `${theme.spacing(.25)}px`,\n            content:'\"\"',\n            margin: \"auto\",\n            marginTop: `${theme.spacing(1)}px`,\n        },\n    },\n    item:{\n        display: 'none',\n        minHeight:theme.geometry.item.minHeight,\n        width: '100%',\n        backfaceVisibility: 'hidden',\n        // transition:theme.transitions.create(['opacity','visibility'],{\n        //     // duration: theme.transitions.duration.long,\n        //     easing: theme.transitions.easing.easeInOut,\n        // }),\n        \"& img\":{\n            objectFit: 'cover',\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            zIndex: -1,\n        },\n        \"&.active\":{\n            display:'flex',\n            flexWrap:'wrap',\n            flexDirection:'column',\n        }\n    },\n    wait: {\n        marginTop:theme.spacing(3)\n    },\n    showOverlay:{\n        \"&::before\":{\n            position:'absolute',\n            top:0, right:0, bottom:0, left:0,\n            content:'\"\"',\n            background: `linear-gradient(90deg, ${theme.palette.background.overlay.start} 0, ${theme.palette.background.overlay.startMiddle} 30%, ${theme.palette.background.overlay.endMiddle} 60%, ${theme.palette.background.overlay.end} 100%)`,\n\n            // backgroundColor: theme.palette.background.overlay,\n            // boxShadow: theme.palette.shadows.overlay.lg,\n            // [theme.breakpoints.between('xs', 'sm')]: {\n            //     boxShadow: theme.palette.shadows.overlay.xs,\n            // }\n        }\n    },\n    caption:{\n        width:'100%',\n        maxWidth:theme.breakpoints.values.lg,\n        margin:\"auto\",\n        flexGrow:2,\n        paddingRight:theme.geometry.caption.padding.lg,\n        paddingLeft:theme.geometry.caption.padding.lg,\n        paddingBottom:theme.geometry.caption.padding.lg,\n        [theme.breakpoints.between('xs', 'sm')]: {\n            paddingRight:theme.geometry.caption.padding.xs,\n            paddingLeft:theme.geometry.caption.padding.xs,\n            paddingBottom:theme.geometry.caption.padding.xs,\n        },\n        zIndex: 10,\n        textAlign: 'center',\n\n        \".showResult &\": {\n            \"& button\":{\n                display:'none',\n            }\n        }\n    },\n    captionMain:{\n        [theme.breakpoints.between('xs', 'sm')]: {\n            \"& h3\": {\n                fontSize:'2.125rem'\n            },\n            \"& h4\": {\n                fontSize:'1.875rem'\n            },\n            paddingRight:theme.geometry.caption.padding.main,\n            paddingLeft:theme.geometry.caption.padding.main\n        },\n\n        //Marketo Style override\n        \"& .mktoForm\":{\n            margin:'auto',\n            color:`${theme.palette.text.primary} !important`,\n            \"& .mktoAsterix\":{\n                color:theme.palette.primary.main,\n            },\n            \"& .mktoError\":{\n                \"& .mktoErrorArrow\":{\n                    background:theme.palette.primary.main,\n                    borderColor:theme.palette.primary.dark,\n                },\n                \"& .mktoErrorMsg\":{\n                    background:theme.palette.primary.main,\n                    textShadow : \"unset\",\n                    borderColor:theme.palette.primary.dark,\n                    boxShadow: `rgba(0,0,0,0.65) 0 2px 7px, inset ${theme.palette.primary.dark} 0 1px 0px`\n                },\n            },\n            \"& .mktoRequiredField\":{},\n            \"& .mktoLabel\":{\n                fontSize: theme.typography.body1.fontSize,\n                fontWeight: \"400 !important\",\n                lineHeight: \"1.2rem\",\n                marginBottom: \"5px\",\n            },\n            \"& .mktoField\":{\n                lineHeight: \"1.5rem\",\n                fontSize: theme.typography.body1.fontSize,\n                padding: \"8px 3px\",\n                border:0,\n                borderRadius:\"5px\"\n            },\n            \"& .mktoButtonWrap.mktoBluePill\":{\n                \"& .mktoButton\":{\n                    border:0,\n                    background:theme.palette.primary.main,\n                    borderRadius:\"4px\",\n                    color:theme.palette.text.secondary,\n                    fontSize: \"0.875rem\",\n                    fontWeight: \"500\",\n                    lineHeight: 1.75,\n                    padding:\"6px 16px\",\n                    minWidth:\"64px\",\n                    textTransform: \"uppercase\",\n                    boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n                    textShadow: \"unset\",\n                    fontFamily: theme.typography.fontFamily,\n                    \"&:hover\":{\n                        border:0,\n                        background:theme.palette.primary.dark,\n                        boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n                    }\n                }\n            }\n        }\n\n    }\n}));","import React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    indicator: {\n        boxSizing: 'content-box !important',\n        flex: '0 1 auto',\n        width: theme.geometry.indicator.width,\n        height: theme.geometry.indicator.height,\n        marginRight: theme.geometry.indicator.spacer,\n        marginLeft: theme.geometry.indicator.spacer,\n        textIndent: '-999px',\n\n        backgroundColor: theme.palette.common.white,\n        backgroundClip: 'padding-box',\n        // Use transparent borders to increase the hit area by 10px on top and bottom.\n        borderTop: `${theme.geometry.indicator.hitAreaHeight} solid transparent`,\n        borderBottom: `${theme.geometry.indicator.hitAreaHeight} solid transparent`,\n        opacity: '.5',\n        transition:theme.transitions.create(['opacity','height'],{\n            duration: theme.transitions.duration.long,\n            easing: theme.transitions.easing.ease,\n        }),\n        \".showResult &\": {\n            backgroundColor:theme.palette.grey[900],\n        },\n        \"&.clickable\":{\n            cursor: 'pointer',\n        },\n        \"&.active\": {\n            opacity: 1\n        }\n    }\n}));\n\nconst Indicator = (props) =>{\n    const classes = useStyles(props);\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {currentSlide} = state;\n    const {id,enabled} = props;\n\n    const active = currentSlide === id;\n    const handleCLick = () =>{\n        if(enabled)\n            dispatch({\n                case:\"SHOW_SLIDE\",\n                payload:{\n                    slide:id\n                }\n            });\n    };\n\n    return(\n        <li className={classnames(\n            classes.indicator,\n            (active ? 'active':''),\n            (enabled ? 'clickable':'')\n        )}\n            onClick={handleCLick}>\n        </li>\n    )\n}\n\nIndicator.propTypes={\n    id:PropTypes.string.isRequired,\n    enabled:PropTypes.bool.isRequired\n}\n\nexport default Indicator;","\nconst _WEAKREFERENCE_ = \"WEAKREFERENCE\";\n//TODO voir si avec SDL je peux passe l'URL des images!\nfunction getProperties(properties,context){\n    if(!properties) return;\n    return properties.reduce(function(bundle,property){\n        const key = property.name.split(\":\").pop();\n        let value = property.value || property.values;\n// console.log(\"property : \",property);\n        if(property.type === _WEAKREFERENCE_ &&\n            property.weakreference &&\n            property.weakreference.path\n        ){\n            property.weakreference.url=\n                `${context.files_endpoint}${encodeURI(property.weakreference.path)}`;\n            value = property.weakreference;\n        }\n\n        bundle[key]=value;\n        return bundle;\n    },{});\n};\n\n// function getWeakURL(filesEndpoint,nodePath){\n//     return `${filesEndpoint}${encodeURI(nodePath)}`;///encodeURIComponent()\n// };\n\nfunction getRandomString (length, format){\n    let mask = \"\";\n    if (format.indexOf(\"a\") > -1) mask += \"abcdefghijklmnopqrstuvwxyz\";\n    if (format.indexOf(\"A\") > -1) mask += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (format.indexOf(\"#\") > -1) mask += \"0123456789\";\n    if (format.indexOf(\"!\") > -1) mask += \"~`!@#$%^&*()_+-={}[]:\\\";'<>?,./|\\\\\";\n    let result = \"\";\n    for (let i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n};\n\nfunction getGQLWorkspace(workspace){\n    return workspace===\"default\"?\n        \"EDIT\":\n        workspace.toUpperCase()\n}\n\nfunction manageTransition({state,dispatch,payload}){\n    const {\n        transitionIsEnabled,\n        transitionTimeout\n    }=state;\n\n    if(transitionIsEnabled){\n        dispatch({\n            case:\"TOGGLE_TRANSITION\"\n        });\n        setTimeout(()=>dispatch({\n            case:\"TOGGLE_TRANSITION\"\n        }),transitionTimeout);\n        setTimeout(()=>dispatch(payload),transitionTimeout);\n    }else{\n        dispatch(payload)\n    }\n}\n\nexport {\n    getProperties,\n    getRandomString,\n    getGQLWorkspace,\n    manageTransition\n}","import Indicator from \"components/Header/Indicator\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {manageTransition} from \"misc/utils\";\n\nconst useStyles = makeStyles(theme => ({\n    header:{\n        zIndex: 2,\n        display: 'flex',\n        flexDirection:'column',\n        justifyContent: 'center',\n        width:'100%',\n        padding: `${theme.spacing(2)}px ${theme.geometry.caption.padding.lg}`,\n        [theme.breakpoints.between('xs', 'sm')]: {\n            padding: `${theme.spacing(2)}px ${theme.geometry.caption.padding.main}`,\n        },\n        '.showResult &':{\n            backgroundColor: theme.palette.grey['300'],\n        }\n    },\n    headerIndicators: {\n        display: 'flex',\n        justifyContent: 'center',\n        zIndex:1,\n        listStyle: 'none',\n        padding:0,\n        marginTop:0,\n        marginBottom: `${theme.spacing(2)}px`,\n        '.showResult &':{\n            marginBottom:0,\n            [theme.breakpoints.between('xs', 'sm')]: {\n                marginBottom:`${theme.spacing(1)}px`\n            }\n        }\n    },\n    headerResult:{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        height: 0,\n        width:'100%',\n        overflow:\"hidden\",\n        transition:theme.transitions.create(['height'],{\n            duration: theme.transitions.duration.standard,//'10s',//\n            easing: theme.transitions.easing.header,\n        }),\n        \".showResult &\":{\n            height: theme.geometry.header.result.height,//'45px',//'auto',\n            marginBottom: `${theme.spacing(1)}px`\n\n        }\n    },\n    headerText:{\n        textTransform: 'capitalize',\n        fontWeight: theme.typography.fontWeightBold,\n        color: theme.palette.grey[700],\n        [theme.breakpoints.between('xs', 'sm')]: {\n            fontSize:'1.75rem'\n        }\n    },\n}));\n\nconst Header = (props) => {\n    const classes = useStyles(props);\n    // const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        slideSet,\n        currentResult,\n        showNext,\n        showScore,\n        // transitionTimeout,\n        // transitionIsEnabled,\n        browsingIsEnabled\n    } = state;\n\n    const handleNextSlide = () =>\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n    // {\n    //     if(transitionIsEnabled){\n    //         dispatch({\n    //             case:\"TOGGLE_TRANSITION\"\n    //         });\n    //         setTimeout(()=>dispatch({\n    //             case:\"TOGGLE_TRANSITION\"\n    //         }),transitionTimeout);\n    //         setTimeout(()=>dispatch({\n    //             case:\"NEXT_SLIDE\"\n    //         }),transitionTimeout);\n    //     }else{\n    //         dispatch({\n    //             case:\"NEXT_SLIDE\"\n    //         })\n    //     }\n    // }\n\n    const handleShowScore = () =>\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"SHOW_SCORE\"\n            }\n        });\n        // if(transitionIsEnabled){\n        //     dispatch({\n        //         case:\"TOGGLE_TRANSITION\"\n        //     });\n        //     setTimeout(()=>dispatch({\n        //         case:\"TOGGLE_TRANSITION\"\n        //     }),transitionTimeout);\n        //     setTimeout(()=>dispatch({\n        //         case:\"SHOW_SCORE\"\n        //     }),transitionTimeout);\n        // }else{\n        //     dispatch({\n        //         case:\"SHOW_SCORE\"\n        //     })\n        // }\n\n\n    const getHeaderResultLabel=()=>{\n        if(currentResult)\n            return jContent.language_bundle.correctAnswer;\n        return jContent.language_bundle.wrongAnswer;\n    }\n\n    const getHeaderBtnNext=()=>{\n        if(showScore)\n            return  <Button onClick={handleShowScore}\n                            disabled={!showNext}>\n                {jContent.language_bundle.btnShowResults}\n            </Button>\n        return  <Button onClick={handleNextSlide}\n                        disabled={!showNext}>\n            {jContent.language_bundle.btnNextQuestion}\n        </Button>\n    }\n\n    return(\n        <div className={classes.header}>\n            <ol className={classes.headerIndicators}>\n                {slideSet.map( itemId =>\n                    <Indicator\n                        key={itemId}\n                        id={itemId}\n                        enabled={browsingIsEnabled}\n                    />\n                )}\n            </ol>\n            {jContent.language_bundle &&\n            <div className={classes.headerResult}>\n                <Typography className={classes.headerText}\n                            variant=\"h4\">\n                    {getHeaderResultLabel()}\n                </Typography>\n\n                {getHeaderBtnNext()}\n            </div>\n            }\n        </div>\n    )\n};\nexport default Header;","import { useState, useEffect } from \"react\";\n\nconst appendScript = (baseUrl, setScriptLoaded) => {\n    if (window.MktoForms2) return setScriptLoaded(true);\n\n    const script = document.createElement(\"script\");\n    script.src = `${baseUrl}/js/forms2/js/forms2.min.js`;\n    script.onload = () => (window.MktoForms2 ? setScriptLoaded(true) : null);\n    document.body.appendChild(script);\n}\n\nconst useMarketo = ({ baseUrl, munchkinId, formId, callback, whenReadyCallback,handleSuccess }) => {\n    const [scriptLoaded, setScriptLoaded] = useState(false);\n\n    useEffect(() => {\n        if (!(baseUrl && munchkinId && formId))\n            return \"Fill the fields and a form should appear\";\n\n        if (scriptLoaded) {\n            window.MktoForms2.loadForm(baseUrl, munchkinId, formId, callback);\n            window.MktoForms2.whenReady( whenReadyCallback );\n\n            return;\n        }\n        appendScript(baseUrl, setScriptLoaded);\n    }, [scriptLoaded, baseUrl, munchkinId, formId, callback,handleSuccess]);\n}\n\nexport default useMarketo;","import React from 'react';\n// import PropTypes from \"prop-types\";\n\nimport {Button,Typography} from \"@material-ui/core\";\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport {StoreContext} from \"contexts\";\nimport Consent from \"components/Consent\";\nimport get from \"lodash.get\";\n\nimport {syncConsentStatus} from \"misc/tracker\";\nimport Media from '../Media'\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"components/Header/Header\";\nimport {manageTransition} from \"misc/utils\";\nimport useMarketo from \"components/Marketo/LoadScript\";\n// import {mktgForm} from \"douane/lib/config\";\n\nconst useStyles = makeStyles(theme => ({\n    duration:{\n        display: 'flex',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        '& svg': {\n            marginRight: '3px',\n        },\n        marginTop:`${theme.spacing(3)}px`,\n    },\n    description:{\n        // textAlign: 'left',\n        maxWidth:'500px',\n        margin:`${theme.spacing(4)}px auto`,\n\n    },\n    consent:{\n        width:'100%',\n        paddingRight:`${theme.spacing(4)}px`,\n        paddingLeft:`${theme.spacing(4)}px`,\n        zIndex: 10,\n        \"& ul\":{\n            listStyle: 'none',\n            padding:0,\n        },\n        \"& li\":{\n            marginBottom: '.5rem'\n        }\n    },\n    consentTitle:{\n        textTransform:'capitalize',\n        textDecoration:'underline'\n    },\n    cxsError:{\n        backgroundColor:theme.palette.error.dark,\n        borderRadius:'3px',\n        display: 'inline',\n        padding: '5px 10px'\n    }\n}));\n\nconst init = variables =>{\n    return {\n        ...variables,\n        consents:[]//list of consent\n    }\n}\n\nconst computeEnableStartBtn = (state) => {\n    const {showNext,workspace,consents} = state;\n\n    if(showNext && workspace !== \"LIVE\")\n        return true;\n\n    const granted = consents.filter( consent => consent.checked || consent.granted );\n    return consents.length === granted.length;\n}\n\nfunction reducer(state, action) {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY_CONSENT\":{\n            let {consents} = state;\n            const {consentData,scope,cxs,consent_status} = payload;\n            console.debug(\"[QUIZ] DATA_READY_CONSENT -> consentData :\",consentData);\n\n            const identifier = get(consentData, \"identifier\");\n\n            //compute granted\n            const consentPath = `consents[\"${scope}/${identifier}\"]`;\n            const cxsConsentStatus = get(cxs,`${consentPath}.status`);\n            const cxsConsentRevokeDate = get(cxs,`${consentPath}.revokeDate`);\n            const granted = consent_status.GRANTED === cxsConsentStatus\n                && Date.now() < Date.parse(cxsConsentRevokeDate)\n\n            consents = [...consents,{\n                id : get(consentData, \"id\"),\n                title : get(consentData, \"title\"),\n                description : get(consentData, \"description.value\"),\n                actived : JSON.parse(get(consentData, \"actived.value\", false)),\n                checked : false,\n                identifier,\n                granted\n            }];\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        case \"DENIED_CONSENT\":{\n            const {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] DENIED_CONSENT -> id :\",id);\n\n            return{\n                ...state,\n                consents:consents.map( consent => {\n                    if( consent.id === id)\n                        return {\n                            ...consent,\n                            granted:false\n                        };\n                    return consent\n                }),\n                enableStartBtn:false\n            }\n        }\n        case \"TOGGLE_CONSENT\": {\n            let {consents} = state;\n            const {id} = payload;\n            console.debug(\"[QUIZ] TOGGLE_CONSENT -> id :\",id);\n\n            consents = consents.map(consent => {\n                if(consent.id === id)\n                    return {\n                        ...consent,\n                        checked:!consent.checked\n                    };\n                return consent\n            });\n\n            return{\n                ...state,\n                consents,\n                enableStartBtn:computeEnableStartBtn({...state,consents})\n            }\n        }\n        default:\n            throw new Error(`[QUIZ] action case '${action.case}' is unknown `);\n    }\n}\n\nconst MktoForm = (props) => {\n\n    // const { baseUrl, munchkinId, formId } = props;\n    const { formId } = props;\n    useMarketo(props);\n    return <form id={`mktoForm_${formId}`} />;\n}\n\nconst Quiz = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n\n    const {\n        quiz,\n        showNext,\n        currentSlide,\n        jContent,\n        cxs\n    } = state;\n\n    const {\n        consent_status,\n        scope,\n        gql_variables,\n        language_bundle,\n        mktgForm\n    } = jContent;\n\n    const enableStartBtn = showNext &&\n        // !quiz.mktoForm &&\n        quiz.consents.length > 0? gql_variables.workspace !== \"LIVE\" : true;\n\n    const [quizState, quizDispatch] = React.useReducer(\n        reducer,\n        {\n            enableStartBtn,//: showNext && gql_variables.workspace !== \"LIVE\",\n            workspace:gql_variables.workspace,\n            showNext,\n        },\n        init\n    );\n\n    console.debug(\"*** paint quiz : \",quiz.title);\n    const show = currentSlide === quiz.id;\n\n    const onClick = () => {\n        quizState.consents.forEach(consent=>{\n            //already granted nothing to do\n            if(consent.granted)\n                return;\n\n            syncConsentStatus({\n                scope,\n                typeIdentifier:consent.identifier,\n                status:consent_status.GRANTED\n            });\n        })\n\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n\n    };\n    const handleMktoFormSuccess = (values,targetPageUrl) =>{\n        console.debug(\"[handleMktoFormSuccess] values : \",values);\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n        return false;\n    }\n\n    const handleMktoForm = (form,_cxs) =>{\n        form.addHiddenFields({\n            'pageURL' : document.location.href,\n            'cxsProfileId' : cxs?cxs.profileId:'',\n        });\n        form.onSuccess(handleMktoFormSuccess);\n    }\n\n    const getStartComponent = () => {\n\n        const _cxs = window.cxs || false;\n        if(!state.cxs &&\n            _cxs.constructor === Object &&\n            Object.keys(_cxs).length === 0)\n            return <Typography className={classes.cxsError}\n                               variant=\"h5\">\n                Internal jExperience connection issue\n            </Typography>\n\n        if(!quiz.mktgForm)\n            return <Button onClick={onClick}\n                           disabled={!quizState.enableStartBtn}>\n                {language_bundle && language_bundle.btnStart}\n            </Button>\n\n        if(quiz.mktgForm === mktgForm.MARKETO && quiz.mktoConfig && cxs)\n            return <MktoForm\n                baseUrl={quiz.mktoConfig.baseUrl}\n                munchkinId={quiz.mktoConfig.munchkinId}\n                formId={quiz.mktoConfig.formId}\n                whenReadyCallback={handleMktoForm}\n            />\n    }\n\n    const getConsent = () =>{\n        if(quiz.mktgForm)\n            return;\n        if(quiz.consents.length > 0 && cxs)\n            return <div className={classes.consent}>\n                        <Typography className={classes.consentTitle}\n                                    variant=\"h5\">\n                            {language_bundle && language_bundle.consentTitle}\n                        </Typography>\n                        <ul>\n                            {\n                                quiz.consents.map( consent =>{\n                                    if(consent.actived)\n                                        return <Consent\n                                            key={consent.id}\n                                            id={consent.id}\n                                            quizState={quizState}\n                                            quizDispatch={quizDispatch}\n                                        />\n                                    return <></>\n                                })\n                            }\n                        </ul>\n                    </div>\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type?quiz.media.type.value:null}\n                   mixins={quiz.media.mixins?quiz.media.mixins.map(mixin=>mixin.value):[]}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n\n\n            <div className={classnames(\n                sharedClasses.caption,\n                sharedClasses.captionMain\n            )}>\n                <Typography className={sharedClasses.textUppercase}\n                            variant=\"h3\">\n                    {quiz.title}\n                </Typography>\n                <Typography className={sharedClasses.subtitle}\n                            color=\"primary\"\n                            variant=\"h4\">\n                    {quiz.subtitle}\n                </Typography>\n\n                <Typography component=\"div\"\n                            className={classes.duration}>\n                    <AccessTimeIcon />\n                    {quiz.duration}\n                </Typography>\n\n                <Typography component=\"div\"\n                            className={classes.description}\n                            dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(quiz.description, { ADD_ATTR: ['target'] })}}/>\n\n                {getStartComponent()}\n            </div>\n            {getConsent()}\n        </div>\n    );\n}\n\n// Quiz.propTypes={}\n\nexport default Quiz;","import {gql} from 'apollo-boost';\n\n// const propsFragment = gql`\n//     fragment props on JCRNode{\n//         id:uuid\n//         key: property(language:$language, name:\"game4:quizKey\"){\n//             value\n//         }\n//         title:displayName(language:$language)\n//         subtitle: property(language:$language, name:\"game4:subtitle\"){\n//             value\n//         }\n//         description:property(language:$language,name:\"game4:description\"){\n//             value\n//         }\n//         duration:property(language:$language,name:\"game4:duration\"){\n//             value\n//         }\n//         cover: property(language:$language,name:\"game4:cover\"){\n//             node: refNode {\n//                 path\n//             }\n//         }\n//         consent: property(language:$language,name:\"game4:consentType\"){\n//             node: refNode {\n//                 uuid\n//             }\n//         }\n//         children{\n//             nodes {\n//                 id:uuid\n//                 type: primaryNodeType{\n//                     value:name\n//                 }\n//             }\n//         }\n//     }\n// `\n\nexport const GET_QNA = gql`\n    query getQna($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            qna: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                question: property(language:$language, name:\"game4:question\"){\n                    value\n                }\n                help: property(language:$language,name:\"game4:help\"){\n                    value\n                }\n                nbExpectedAnswer: property(name:\"game4:nbExpectedAnswer\"){\n                    value\n                }\n                answers: property(language:$language,name:\"game4:answers\"){\n                    values\n                }\n                randomSelection: property(name:\"game4:randomSelection\"){\n                    value\n                }\n                notUsedForScore: property(name:\"game4:notUsedForScore\"){\n                    value\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                jExpField2Map: property(name:\"game4:jExpProperty\"){\n                    value\n                }\n\n            }\n        }\n    }\n`\n// ${propsFragment}\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {Radio, Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    answerGroup: {\n        display:\"flex\",\n        alignItems:\"center\",\n        flexWrap:'wrap',\n        \".showResult &\":{\n            \"&.checked\":{\n                backgroundColor: theme.palette.background.checkedAnswer,\n                borderRadius: theme.geometry.checkedAnswer.borderRadius,\n                \"& .MuiTypography-body1\":{\n                    color: theme.palette.grey[900],\n                },\n                \"& + div::before\":{\n                    borderTop: '2px solid transparent',\n                },\n                \"&:last-child\":{\n                        borderBottom: '2px solid transparent',\n                    },\n                \"::before\":{\n                        borderTop: '2px solid transparent',\n                }\n            }\n        }\n    },\n    checkGroup:{\n        position:\"relative\",\n        height: '28px',//'1.5rem',\n        padding: '2px 4px 2px 2px',//'.15rem .25rem .15rem .15rem',\n        marginLeft:\"-32px\",\n        opacity: 0,\n        // transform: none,\n        transition:theme.transitions.create(['opacity'],{\n            easing: theme.transitions.easing.easeOut,\n        }),\n        borderRadius: '5px 0px 0px 5px',\n        backgroundColor: theme.palette.grey[300],\n        zIndex: 1,\n        \".showResult &\":{\n            opacity: 1,\n        },\n        \"&::after\":{\n            content: '\"\"',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid',\n            borderWidth: '14px 0 14px 18px',//'.9rem 0 .9rem 1.15rem',\n            position: 'absolute',\n            top: 0,\n            // right:'-1.1rem',\n            left:'30px',//'1.9rem',\n            borderColor:  `transparent transparent transparent ${theme.palette.grey[300]}`\n        },\n        \"&.valid\":{\n            backgroundColor:theme.palette.primary.main,\n            color:\"rgba(255, 255, 255, 0.87)\",\n            \"&::after\":{\n               borderColor:  `transparent transparent transparent ${theme.palette.primary.main}`\n            }\n        },\n        \"& svg\":{\n            verticalAlign:'unset',\n            overflow:'unset'\n        }\n    },\n    labelGroup:{\n        margin:'unset',\n        marginLeft:\"12px\"\n    }\n}));\n\nconst Answer = (props) =>{\n    const classes = useStyles(props);\n    const {qna, qnaDispatch,id} = props;\n    const [answer] = qna.answers.filter(answer => answer.id === id);\n\n    const isValid = answer.isAnswer || (qna.notUsedForScore ? answer.checked : false);\n    const handleChange = () =>\n        qnaDispatch({\n            case:\"TOGGLE_ANSWER\",\n            payload:{\n                answer\n            }\n        });\n\n    const getResultIcon = () =>{\n        if(isValid)\n            return <CheckIcon />\n        return <ClearIcon />\n    };\n\n    const getControl = () =>{\n        if(\"checkbox\"===qna.inputType)\n            return <Checkbox id={answer.id} />\n        return <Radio id={answer.id}/>\n    };\n\n    return(\n        <div className={classnames(\n            classes.answerGroup,\n            (answer.checked?\"checked\":\"\")\n        )}>\n            <div className={classnames(\n                classes.checkGroup,\n                (isValid?\"valid\":\"\")\n            )}>\n                {getResultIcon()}\n            </div>\n            <FormControlLabel\n                className={classes.labelGroup}\n                // value={answer.checked}\n                control={getControl()}\n                label={answer.label}\n                labelPlacement=\"end\"\n                onChange={handleChange}\n                checked={answer.checked}\n            />\n        </div>\n    );\n};\n\nAnswer.propTypes={\n    qna:PropTypes.object.isRequired,\n    qnaDispatch:PropTypes.func.isRequired,\n    id:PropTypes.string.isRequired,\n}\n\nexport default Answer;","import get from \"lodash.get\";\nimport {getRandomString} from \"misc/utils\";\n\nconst QnAMapper = (qnaData) => {\n    const randomSelection=JSON.parse(get(qnaData, \"randomSelection.value\", false));\n    const answers= get(qnaData, \"answers.values\", []).map(answer=>{\n        const controlledAnswer = JSON.parse(answer);\n        return {\n            ...controlledAnswer,\n            id:getRandomString(5,\"#aA\"),\n            checked:false\n        }\n    })\n\n    if(randomSelection)\n        answers.sort( (a,b) => a.id > b.id );\n\n    const inputType = answers.filter(answer => answer.isAnswer).length > 1 ?\"checkbox\":\"radio\"\n\n    return {\n        id: get(qnaData, \"id\"),\n        title: get(qnaData, \"title\"),\n        question: get(qnaData, \"question.value\", \"\"),\n        help: get(qnaData, \"help.value\", \"\"),\n        notUsedForScore: JSON.parse(get(qnaData, \"notUsedForScore.value\", false)),\n        // cover: get(qnaData, \"cover.node.path\", \"\"),\n        media: get(qnaData, \"media.node\", {}),\n        jExpField2Map: get(qnaData, \"jExpField2Map.value\", \"\"),\n        randomSelection,\n        answers,\n        inputType\n    }\n}\nexport default QnAMapper;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {useQuery} from \"@apollo/react-hooks\";\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport {GET_QNA} from \"./QnaGraphQL\";\nimport Answer from \"./Answer\";\n\nimport QnaMapper from \"components/Qna/QnaModel\";\nimport {syncVisitorData} from \"misc/tracker\";\nimport Media from \"components/Media\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport classnames from \"clsx\";\nimport {FormGroup, Typography,Button} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Header from \"components/Header/Header\";\nimport {manageTransition} from \"misc/utils\";\n\n\nconst useStyles = makeStyles(theme => ({\n    questionGroup:{\n        textAlign:'left',\n        marginTop: `${theme.spacing(2)}px`,\n        marginBottom: `${theme.spacing(4)}px`,\n    },\n    question:{\n        marginBottom: `${theme.spacing(2)}px`,\n    },\n    formGroup: {\n        textAlign:'left',\n        \"& > div::before\":{\n            flexBasis:'100%',\n            content:'\"\"',\n            height: '2px',\n            marginLeft : '50px',\n            borderTop: '2px solid rgba(255,255,255,.2)',\n        },\n        \"&  > div:first-child::before\":{\n            borderTop: 'none',\n        },\n        \"&  > div:last-child::after\":{\n            flexBasis:'100%',\n            content:'\"\"',\n            height: '2px',\n            marginLeft : '50px',\n            borderBottom: '2px solid rgba(255,255,255,.2)',\n        },\n        marginBottom:`${theme.spacing(4)}px`\n    },\n}));\n\n\nconst initialQNA = {\n    enableSubmit:false,\n}\n\nconst reducer = (qna, action) => {\n    const { payload } = action;\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            // const {qnaData,quiz_validMark} = payload;\n            const {qnaData} = payload;\n            console.debug(\"[QNA] DATA_READY -> qnaData :\",qnaData);\n\n            return {\n                ...qna,\n                ...QnaMapper(qnaData)\n            }\n        }\n        case \"TOGGLE_ANSWER\": {\n            const {answer} = payload;//answer id\n            console.debug(\"[QNA] TOGGLE_ANSWER -> answer :\",answer);\n            let {answers} = qna;\n            if(qna.inputType === \"radio\")\n                answers = answers.map( answer =>{ return {...answer,checked:false} });\n\n            answers = answers.map(_answer => {\n                if(_answer.id === answer.id)\n                    return {\n                        ..._answer,\n                        checked:!_answer.checked\n                    };\n                return _answer\n            });\n            const enableSubmit = answers.filter(answer => answer.checked).length > 0\n\n            return{\n                ...qna,\n                answers,\n                enableSubmit\n            }\n        }\n        case \"RESET\":{\n            const {qnaData} = payload;\n            console.debug(\"[QNA] RESET -> qnaData :\",qnaData);\n            return{\n                ...initialQNA,\n                ...QnaMapper(qnaData)\n            }\n        }\n        default:\n            throw new Error(`[QNA] action case '${action.case}' is unknown `);\n    };\n}\n\nconst Qna = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        currentSlide,\n        jContent,\n        reset\n    } = state;\n    const { gql_variables,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n    const {loading, error, data} = useQuery(GET_QNA, {\n        variables:variables,\n    });\n\n    const [qna, qnaDispatch] = React.useReducer(\n        reducer,\n        initialQNA\n    );\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [loading,data]);\n\n    React.useEffect(() => {\n        if(reset && data){\n            const qnaData = get(data, \"response.qna\", {});\n            qnaDispatch({\n                case:\"RESET\",\n                payload:{\n                    qnaData\n                }\n            });\n        }\n    }, [reset,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint qna : \",qna.title);\n\n    const show = currentSlide === props.id;\n\n    const handleSubmit = () => {\n\n        // console.log(\"[handleSubmit] qna.jExpField2Map => \",qna.jExpField2Map);\n        if(qna.jExpField2Map){\n            //Get response cdpValue\n            //Note case multiple is manage by comma separated case\n            const values =\n                qna.answers\n                .filter(answer => answer.checked)\n                .reduce(\n                    (item,answer,index) =>{\n                        if(answer.cdpValue && answer.cdpValue.length > 0) {\n                            if (index === 0) {\n                                item = answer.cdpValue\n                            } else {\n                                item = `${item}, ${answer.cdpValue}`\n                            }\n                        }\n                        return item;\n                    },null\n                );\n            // console.debug(\"[handleSubmit] update : \",qna.jExpField2Map,\" with values : \",values);\n\n            //if tracker is not initialized the track event is not send\n            syncVisitorData({\n                propertyName:`properties.${qna.jExpField2Map}`,\n                propertyValue:values\n            })\n        }\n\n        const payload = {\n            case:\"SHOW_RESULT\",\n            payload:{\n                skipScore:qna.notUsedForScore,\n                result: qna.answers\n                    .filter(answer => answer.isAnswer)\n                    .reduce( (test,answer) => test && answer.checked,true)\n            }\n        }\n\n        if(qna.notUsedForScore){\n            manageTransition({\n                state,\n                dispatch,\n                payload\n            });\n        }else{\n            dispatch(payload);\n        }\n    }\n\n    const getAnswers = () => {\n        if(qna.answers)\n            return qna.answers.map( answer =>\n                <Answer\n                    key={answer.id}\n                    id={answer.id}\n                    qna={qna}\n                    qnaDispatch={qnaDispatch}\n                />);\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n\n            {qna.media &&\n                <Media id={qna.media.id}\n                       type={qna.media.type?qna.media.type.value:null}\n                       mixins={qna.media.mixins?qna.media.mixins.map(mixin=>mixin.value):[]}\n                       path={qna.media.path}\n                       alt={qna.title}\n                />\n            }\n            <div className={sharedClasses.caption}>\n                <div className={classes.questionGroup}>\n                    <Typography  className={classes.question}\n                                 variant=\"h4\">\n                        {qna.question}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                        {qna.help}\n                    </Typography>\n                </div>\n\n                <FormGroup className={classes.formGroup}\n                           style={{}}\n                           aria-label=\"answer\">\n                    {getAnswers()}\n                </FormGroup>\n\n                <Button onClick={handleSubmit}\n                        disabled={!qna.enableSubmit}>\n                    {language_bundle && language_bundle.btnSubmit}\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nQna.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Qna;","import {gql} from 'apollo-boost';\n\n// cover: property(name:\"game4:masterQnaCover\"){\n//     node: refNode {\n//         path\n//     }\n// }\n\nexport const GET_WARMUP = gql`\n    query getWarmup($workspace: Workspace!, $id: String!, $language: String!) {\n        response: jcr(workspace: $workspace) {\n            warmup: nodeById(uuid: $id) {\n                id: uuid\n                title:displayName(language:$language)\n                subtitle: property(language:$language, name:\"game4:subtitle\"){\n                    value\n                }\n                content: property(language:$language,name:\"game4:content\"){\n                    value\n                }\n                duration: property(name:\"game4:qnaDuration\"){\n                    value\n                }\n                videoLink: property(name:\"game4:videoLink\"){\n                    value\n                }\n                videoExtPath: property(language:$language,name:\"game4:videoExtPath\"){\n                    value\n                }\n                videoIntPath: property(language:$language,name:\"game4:videoIntPath\"){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                media: property(language:$language,name:\"wden:mediaNode\",){\n                    node: refNode {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                        mixins: mixinTypes{\n                            value:name\n                        }\n                        path\n                    }\n                }\n                children{\n                    nodes {\n                        id: uuid\n                        type: primaryNodeType{\n                            value:name\n                        }\n                    }\n                }\n    \n            }\n        }\n    }\n`","import get from \"lodash.get\";\n\nconst WarmupMapper = (warmupData,cnd_type) => {\n    let video = null;\n    const videoLink = get(warmupData, \"videoLink.value\", \"\");\n    const videoIntPath = get(warmupData, \"videoIntPath.node\");\n\n    if(videoLink)\n        video= videoIntPath ?\n            videoIntPath:{\n                id:null,\n                type:{\n                    value:cnd_type.EXT_VIDEO\n                },\n                path:get(warmupData, \"videoExtPath.value\")\n            }\n\n    return{\n        id: get(warmupData, \"id\", \"\"),\n        title: get(warmupData, \"title\", \"\"),\n        subtitle: get(warmupData, \"subtitle.value\", \"\"),\n        content: get(warmupData, \"content.value\", \"\"),\n        duration: get(warmupData, \"duration.value\", \"\"),\n        media: get(warmupData, \"media.node\", {}),\n        childNodes: get(warmupData,\"children.nodes\",[])\n            .map(node => {\n                return{\n                    id: get(node, \"id\"),\n                    type: get(node, \"type.value\")\n                }\n            }),\n        video\n    }\n}\nexport default WarmupMapper;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport get from \"lodash.get\";\nimport {useQuery} from \"@apollo/react-hooks\";\n\nimport {StoreContext} from \"contexts\";\nimport {GET_WARMUP} from \"./WarmupGraphQL\";\nimport Qna from \"components/Qna\";\nimport WarmupMapper from \"components/Warmup/WarmupModel\";\nimport Media from \"components/Media\";\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography, Button} from \"@material-ui/core\";\nimport DOMPurify from \"dompurify\";\nimport Header from \"components/Header/Header\";\nimport {manageTransition} from \"misc/utils\";\n\nconst useStyles = makeStyles(theme => ({\n    contentGroup:{\n        textAlign:'justify',\n        maxWidth:'800px',\n        margin:\"auto\",\n        marginTop:`${theme.spacing(3)}px`,\n        marginBottom:`${theme.spacing(4)}px`\n    }\n}));\n\nconst Warmup = (props) => {\n    const classes = useStyles(props);\n    const sharedClasses = cssSharedClasses(props);\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        currentSlide,\n        jContent\n    } = state;\n    const { gql_variables,cnd_type,language_bundle } =  jContent;\n\n    const variables = Object.assign(gql_variables,{id:props.id})\n\n    const {loading, error, data} = useQuery(GET_WARMUP, {\n        variables:variables,\n    });\n\n    const [warmup, setWarmup] = React.useState({childNodes:[]});\n\n    React.useEffect(() => {\n\n        if(loading === false && data){\n            const warmup = WarmupMapper(get(data, \"response.warmup\", {}),cnd_type)\n            dispatch({\n                case:\"ADD_SLIDES\",\n                payload:{\n                    slides:warmup.childNodes.map(node=>node.id),\n                    parentSlide:warmup.id\n                }\n            });\n            // console.debug(\"warmup.id : \",warmup.id,\"; warmup.video : \",warmup.video);\n            setWarmup(warmup);\n        }\n    },[loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.debug(\"*** paint warmup : \",warmup.title);\n\n    const show = currentSlide === props.id;\n    const handleCLick = () =>\n        manageTransition({\n            state,\n            dispatch,\n            payload:{\n                case:\"NEXT_SLIDE\"\n            }\n        });\n\n    return(\n        <>\n            <div className={classnames(\n                sharedClasses.item,\n                sharedClasses.showOverlay,\n                (show ? 'active':'')\n            )}>\n                <Header/>\n                {warmup.media &&\n                    <Media id={warmup.media.id}\n                           type={warmup.media.type?warmup.media.type.value:null}\n                           mixins={warmup.media.mixins?warmup.media.mixins.map(mixin=>mixin.value):[]}\n                           path={warmup.media.path}\n                           alt={warmup.title}\n                    />\n                }\n\n                <div className={classnames(\n                    sharedClasses.caption,\n                    sharedClasses.captionMain\n                )}>\n                    <Typography className={sharedClasses.textUppercase}\n                                variant=\"h3\">\n                        {warmup.title}\n                    </Typography>\n                    <Typography className={sharedClasses.subtitle}\n                                color=\"primary\"\n                                variant=\"h4\">\n                        {warmup.subtitle}\n                    </Typography>\n\n                    <div className={classes.contentGroup}>\n                        <Typography component=\"div\"\n                                    className={classes.content}\n                                    dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(warmup.content, { ADD_ATTR: ['target'] })}}/>\n\n                        { warmup.video != null &&\n                        <div>\n                            <Media id={warmup.video.id || null}\n                                   type={warmup.video.type.value}\n                                   mixins={[]}\n                                   path={warmup.video.path}\n                                   sourceID={warmup.id}\n                            />\n                        </div>\n                        }\n                    </div>\n\n                    <Button onClick={ handleCLick }>\n                        {language_bundle && language_bundle.btnQuestion}\n                    </Button>\n                </div>\n            </div>\n            {warmup.childNodes.map( node =>\n                <Qna\n                    key={node.id}\n                    id={node.id}\n                />\n            )}\n        </>\n    );\n}\n\nWarmup.propTypes={\n    id:PropTypes.string.isRequired\n}\n\nexport default Warmup;","import {gql} from 'apollo-boost';\n\nexport const GET_PERSONALIZED_RESULT = gql`\n    query getPersonalizedResultContent($workspace: Workspace!, $id: String!, $language: String!,$profileId: String,$sessionId: String) {\n        response: jcr(workspace: $workspace) {\n            result: nodeById(uuid: $id) {\n                jExperience: jExperience(profileId: $profileId, sessionId: $sessionId) {\n                    variant:personalizedVariant{\n                        id: uuid\n                        title:displayName(language:$language)\n                        text:property(language:$language,name:\"text\"){\n                            value\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {StoreContext} from \"contexts\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport {GET_PERSONALIZED_RESULT} from \"./PersonalizedGraphQL\";\nimport get from \"lodash.get\";\nimport DOMPurify from \"dompurify\";\nimport {Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from \"clsx\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\n\nconst useStyles = makeStyles(theme => ({\n    result:{\n        marginTop: `${theme.spacing(4)}px`,\n    }\n}));\n\nconst Personalized = (props) => {\n    const {id,cxs}=props;\n    const sharedClasses = cssSharedClasses(props);\n    const classes = useStyles(props);\n    const { state } = React.useContext(StoreContext);\n    const { jContent } = state;\n\n    const [result, setResult] = React.useState({});\n\n    const {loading, error, data} = useQuery(GET_PERSONALIZED_RESULT, {\n        variables:Object.assign(jContent.gql_variables,{\n            profileId:cxs.profileId,\n            sessionId:cxs.sessionId,\n            id\n        }),\n        fetchPolicy: \"no-cache\"\n    });\n\n    React.useEffect(() => {\n        if(loading === false && data){\n            const persoData = get(data, \"response.result.jExperience.variant\", {});\n            setResult({\n                ...persoData,\n                text:persoData.text.value\n            });\n        }\n    }, [loading,data]);\n\n    if (loading) return <Typography className={classnames(\n                            sharedClasses.wait,\n                            sharedClasses.textUppercase)}\n                            variant=\"body2\">\n                                score calculation in progress...\n                        </Typography>;\n    if (error) return <Typography className={classnames(\n                            sharedClasses.wait,\n                            sharedClasses.textUppercase)}\n                            variant=\"body2\">\n                                Error getting your result.\n                        </Typography>;\n    console.debug(\"*** paint personalized result : \",result.title);\n\n    // console.log(\"Personalized props.show :\",props.show);\n\n    return(\n        <Typography className={classes.result}\n                    component=\"div\"\n                    dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(result.text, { ADD_ATTR: ['target'] })}}/>\n    );\n\n    // return(\n    //     <div className=\"game4-quiz__score-result col-6 offset-3 col-md-4 offset-md-4 mb-5\"\n    //          dangerouslySetInnerHTML={{__html:DOMPurify.sanitize(result.text, { ADD_ATTR: ['target'] })}}>\n    //     </div>\n    // );\n}\n\nPersonalized.propTypes={\n    id:PropTypes.string.isRequired,\n    cxs:PropTypes.object.isRequired\n}\n\nexport default Personalized;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    result:{\n        marginTop: `${theme.spacing(4)}px`,\n        maxWidth: '300px',\n        margin: '32px auto',\n        \"& .CircularProgressbar\":{\n            \"& .CircularProgressbar\":{\n                \"&-text\":{\n                    fill: theme.palette.primary.main,\n                    fontFamily: theme.typography.fontFamily,\n                },\n                \"&-trail\": {\n                    stroke: theme.palette.grey[300],\n                },\n                \"&-path\": {\n                    stroke: theme.palette.primary.main,\n                },\n            }\n        }\n    }\n}));\n\nconst Percentage = (props) => {\n    const {score} = props\n    const classes = useStyles(props);\n    console.debug(\"*** paint percentage result : \",score);\n    return(\n            <div className={classes.result}>\n                <CircularProgressbar value={score} text={`${score}%`}/>\n            </div>\n    );\n}\n\nPercentage.propTypes={\n    score:PropTypes.number.isRequired\n}\n\nexport default Percentage;","import React from 'react';\nimport {StoreContext} from \"contexts\";\n\nimport Media from \"components/Media\";\nimport Personalized from \"components/Score/personalized/Personalized\";\nimport Percentage from \"components/Score/percentage/Percentage\";\nimport cssSharedClasses from \"components/cssSharedClasses\";\nimport classnames from \"clsx\";\nimport {Typography,Button} from \"@material-ui/core\";\nimport Header from \"components/Header/Header\";\n\nconst Score = (props) => {\n    const sharedClasses = cssSharedClasses(props);\n    const { state,dispatch } = React.useContext(StoreContext);\n    const [timer, setTimer] = React.useState(false);\n    const {\n        quiz,\n        currentSlide,\n        score,\n        scoreIndex,\n        jContent,\n        cxs,\n        transitionIsEnabled,\n        transitionTimeout,\n        resetBtnIsEnabled\n    } = state;\n    const { language_bundle } =  jContent;\n\n    const show = currentSlide === scoreIndex;\n//wait 1s before to call jExp in order to have time to synch user profile with answer\n    React.useEffect(() => {\n        if(quiz.personalizedResult.id)\n            setTimeout(\n                () => setTimer(true),\n                1000\n            );\n    },[])\n\n    const onClick = () => {\n        if(transitionIsEnabled){\n            dispatch({\n                case:\"TOGGLE_TRANSITION\"\n            });\n            setTimeout(()=>dispatch({\n                case:\"TOGGLE_TRANSITION\"\n            }),transitionTimeout);\n            setTimeout(()=>dispatch({\n                case:\"RESET\"\n            }),transitionTimeout);\n        }else{\n            dispatch({\n                case:\"RESET\"\n            })\n        }\n    }\n    const displayResult = () => {\n        if(quiz.personalizedResult.id){\n            if(cxs && timer)\n                return <Personalized id={quiz.personalizedResult.id} cxs={cxs}/>\n            return <Typography className={classnames(\n                        sharedClasses.wait,\n                        sharedClasses.textUppercase)}\n                               variant=\"body2\">\n                        score calculation in progress...\n                    </Typography>\n        }\n        return <Percentage score={score}/>\n    }\n\n    const getResetBtn = () => {\n        if(!resetBtnIsEnabled)\n            return;\n\n        return <Button onClick={onClick}>\n            {language_bundle && language_bundle.btnReset}\n        </Button>\n    }\n\n    return(\n        <div className={classnames(\n            sharedClasses.item,\n            sharedClasses.showOverlay,\n            (show ? 'active':'')\n        )}>\n            <Header/>\n            {quiz.media &&\n            <Media id={quiz.media.id}\n                   type={quiz.media.type?quiz.media.type.value:null}\n                   mixins={quiz.media.mixins?quiz.media.mixins.map(mixin=>mixin.value):[]}\n                   path={quiz.media.path}\n                   alt={quiz.title}\n            />\n            }\n            <div className={classnames(\n                sharedClasses.caption,\n                sharedClasses.captionMain\n            )}>\n                <Typography className={sharedClasses.textUppercase}\n                            variant=\"h3\">\n                    {quiz.title}\n                </Typography>\n                <Typography className={sharedClasses.subtitle}\n                            color=\"primary\"\n                            variant=\"h4\">\n                    {quiz.subtitle}\n                </Typography>\n\n                {displayResult()}\n\n                {getResetBtn()}\n            </div>\n        </div>\n    );\n\n}\n\n// Personalized.propTypes={}\n\nexport default Score;","import { createMuiTheme } from '@material-ui/core/styles';\nimport _merge from \"lodash.merge\";\n\nconst defaultTheme = () =>({\n    geometry:{\n        header:{\n          result:{\n              height:\"45px\",\n          }\n        },\n        item:{\n            minHeight:\"700px\",\n        },\n        caption:{\n            // minHeight:\"700px\",\n            padding:{\n                lg:\"60px\",\n                xs:\"45px\",\n                main:\"20px\"\n            }\n            // width:\"calc(100% - 120px)\",\n        },\n        indicator:{\n            width:\"30px\",\n            height:\"3px\",\n            hitAreaHeight:\"10px\",\n            spacer:\"3px\",\n        },\n        checkedAnswer:{\n            borderRadius:\"10px\"\n        }\n    },\n    palette: {\n        primary:{\n            light: \"#009bdc\",\n            main: \"#007cb0\",\n            dark: \"#005f87\"\n        },\n        secondary:{\n            light: \"#f57c30\",\n            main: \"#e57834\",\n            dark: \"#bd5715\"\n        },\n        text:{\n            primary:\"rgba(255, 255, 255, 0.87)\",\n            secondary:\"rgba(0, 0, 0, 0.87)\"\n        },\n        background:{\n            overlay: {\n                start:\"rgba(0,0,0,.95)\",\n                startMiddle:\"rgba(0,0,0,.9)\",\n                endMiddle:\"rgba(0,0,0,.85)\",\n                end:\"rgba(0,0,0,.75)\",\n            },\n            checkedAnswer: \"rgba(255,255,255,1)\",\n        },\n        shadows:{\n            overlay:{\n                lg:\"inset 1140px 0 570px -570px rgba(0,0,0,.5)\",\n                xs:\"inset 500px 0 250px -250px rgba(0,0,0,.5)\",\n            }\n        }\n    },\n    typography:{\n        allVariants:{\n            color:\"rgba(255, 255, 255, 0.87)\"\n        },\n        fontFamily:[\"Lato\",\"Helvetica\",\"Arial\",\"sans-serif\"].join(\",\"),\n        h3:{\n            fontWeight: 300\n        },\n        h4:{\n            fontWeight: 300\n        },\n        body1:{\n            fontSize:\"1.1rem\",\n        }\n    },\n    // shape:{\n    //     borderRadius:3\n    // }\n    transitions:{\n        easing:{\n            ease:\"cubic-bezier(0.25, 0.1, 0.25, 1)\",\n            header:\"cubic-bezier(.23,1,.32,1)\"\n        },\n        duration:{\n            long:600\n        }\n    },\n    spacing: 8,\n    overrides: {\n        MuiCheckbox:{\n            root:{\n                color:\"rgba(255, 255, 255, 0.87)\"\n            }\n        },\n        MuiRadio:{\n            root:{\n                color:\"rgba(255, 255, 255, 0.87)\"\n            }\n        },\n        MuiButton:{\n            contained:{\n                \"&$disabled\": {\n                    color: \"rgba(255, 255, 255, 0.26)\",\n                    backgroundColor: \"rgba(255, 255, 255, 0.12)\"\n                }\n            }\n\n        },\n        MuiTypography:{\n            body1:{\n                \"& a\":{\n                    color:\"#007cb0\",\n                }\n            }\n        },\n        // MuiCssBaseline: {\n        //     '@global': {\n        //         // '@font-face': ['Lato'],\n        //         '.Mui-disabled': {\n        //             color: \"rgba(255, 255, 255, 0.26)\",\n        //             backgroundColor: \"rgba(255, 255, 255, 0.12)\"\n        //         }\n        //\n        //     },\n        // },\n    },\n    props:{\n        MuiButton:{\n            disableRipple:true,\n            color:\"primary\",\n            variant:\"contained\",\n        },\n\n        MuiCheckbox:{\n            disableRipple:true,\n            color:\"primary\",\n        },\n        MuiRadio:{\n            disableRipple:true,\n            color:\"primary\",\n        }\n    }\n});\n\nconst getTheme = (userTheme) =>{\n    const targetTheme = defaultTheme();\n    const theme = createMuiTheme( _merge(targetTheme,userTheme));\n    return theme;\n}\n\nexport default getTheme;","import {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from \"clsx\";\nimport React from \"react\";\nimport {StoreContext} from \"contexts\";\nimport {Typography} from \"@material-ui/core\";\n// import PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\n\nconst childTiles = (transitionRow) =>{\n    const nb = transitionRow.length;\n    const reducer =transitionRow.reduce((obj,item,i) =>{\n        const index = i+1;\n        const key = `&:nth-child(${index})`;\n        obj[key]={\n            top: `calc(${(index-1)} * ${100/nb}%)`,\n            transitionDelay: `${(index-1)*0.1}s`\n        }\n        return obj;\n    },{})\n    return reducer;\n};\n\nconst Transition = (props) => {\n\n\n    const { state } = React.useContext(StoreContext);\n    const {\n        transitionActive,\n        transitionRow,\n        transitionLabel\n    } = state;\n\n    const useStyles = makeStyles(theme => ({\n        loader: {\n            position: 'absolute',\n            zIndex: '999',\n            top: 0,\n            left: 0,\n            bottom:0,\n            width: 0,\n            transition: 'width 0s 1.4s ease',\n            \"&.active\":{\n                width: '100%',\n                transitionDelay: '0s',\n            }\n        },\n        icon: {\n            position: 'absolute',\n            zIndex: 1,\n            top: '50%',\n            left: '50%',\n            transform: 'translateX(-50%) translateY(-50%)',\n            opacity: 0,\n            transition: 'opacity .5s ease',\n\n            \"& svg\":{\n                transformOrigin: '0 0',\n            },\n\n            \".active &\":{\n                opacity: 1,\n                // transition: 'opacity .5s 1.4s ease',\n            },\n        },\n        text:{\n            textTransform:'uppercase'\n        },\n        tile: {\n            position: 'absolute',\n            left: 0,\n            width: 0,\n            height: `${100/transitionRow.length}%`,\n            backgroundColor: theme.palette.primary.main,\n            transition: 'width .3s ease',\n            ...childTiles(transitionRow),\n\n            \".active &\":{\n                width: '100%',\n            }\n        }\n    }));\n    const classes = useStyles(props);\n\n    return (\n        <div className={classnames(\n            classes.loader,\n            (transitionActive?'active':'')\n        )}>\n            <div className={classes.icon}>\n                <Typography variant=\"h4\" className={classes.text}>\n                    {/*<PowerSettingsNewIcon/>*/}\n                    {transitionLabel}\n                </Typography>\n            {/*    <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\"*/}\n            {/*         xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\"*/}\n            {/*         viewBox=\"0 0 40 40\" enableBackground=\"new 0 0 40 40\" xmlSpace=\"preserve\">*/}\n            {/*        <path opacity=\"0.2\" fill=\"#000\"*/}\n            {/*d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"></path>*/}\n            {/*        <path fill=\"#000\"*/}\n            {/*              d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0C22.32,8.481,24.301,9.057,26.013,10.047z\"></path>*/}\n            {/*        <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 20 20\"*/}\n            {/*                          to=\"360 20 20\" dur=\"0.5s\" repeatCount=\"indefinite\"></animateTransform>*/}\n            {/*    </svg>*/}\n            </div>\n            {transitionRow.map((row,i)=><div key={i} className={classes.tile}></div>)}\n        </div>\n    )\n};\nexport default Transition;","import React from 'react'; //useEffect,useContext\n// import PropTypes from \"prop-types\";\n\nimport {Grid,Typography} from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport get from \"lodash.get\";\n\nimport {StoreContext} from \"contexts\";\n\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport {GET_QUIZ} from \"components/Quiz/QuizGraphQL.js\";\n\nimport Quiz from \"components/Quiz\"\nimport Qna from \"components/Qna\";\nimport Warmup from \"components/Warmup\";\nimport Score from \"components/Score\";\nimport {syncTracker} from \"misc/tracker\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classnames from 'clsx';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'components/theme';\nimport Transition from \"components/Transition\";\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: \"relative\",\n        \"& *, &::after, &::before\":{\n            boxSizing:\"border-box\",\n        }\n    },\n}));\n\nconst initLanguageBundle = quizData => {\n    const keys = [\n        \"btnStart\",\n        \"btnSubmit\",\n        \"btnQuestion\",\n        \"btnNextQuestion\",\n        \"btnShowResults\",\n        \"btnReset\",\n        \"consentTitle\",\n        \"correctAnswer\",\n        \"wrongAnswer\"\n    ];\n    return keys.reduce((bundle,key)=>{\n        bundle[key] = get(quizData,`${key}.value`);\n        // console.debug(\"bundle: \",bundle);\n        return bundle;\n    },{});\n}\n\nconst App = (props)=> {\n    const classes = useStyles(props);\n\n    const { state, dispatch } = React.useContext(StoreContext);\n    const {\n        jContent,\n        quiz,\n        showResult,\n        showScore\n    } = state;\n\n    const {loading, error, data} = useQuery(GET_QUIZ, {\n        variables:jContent.gql_variables,\n    });\n\n    React.useEffect(() => {\n        console.debug(\"App Quiz init !\");\n        if(loading === false && data){\n            console.debug(\"App Quiz init Set Data!\");\n\n            const quizData = get(data, \"response.quiz\", {});\n            // const quizKey = get(quizData, \"key.value\");\n\n            jContent.language_bundle = initLanguageBundle(quizData);\n            console.debug(\"jContent.language_bundle: \",jContent.language_bundle);\n\n            dispatch({\n                case:\"DATA_READY\",\n                payload:{\n                    quizData\n                }\n            });\n\n            //Init unomi tracker\n            if(jContent.gql_variables.workspace === \"LIVE\")\n                syncTracker({\n                    scope: jContent.scope,\n                    url: jContent.cdp_endpoint,\n                    // sessionId:`qZ-${quizKey}-${Date.now()}`,\n                    dispatch\n                });\n        }\n    }, [loading,data]);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    const displayScore=()=>{\n        if(showScore)\n            return <Score/>\n    }\n\n    return (\n        <ThemeProvider theme={theme(quiz?quiz.userTheme:{})}>\n        <Grid container spacing={3}>\n            <Grid item xs style={{margin:'auto'}}>\n\n                <div className={classnames(\n                    classes.main,\n                    (showResult?'showResult':'')\n                )}>\n                    <Transition/>\n                    {quiz &&\n                        <>\n                        <Quiz\n                            key={quiz.id}\n                        />\n                        {quiz.childNodes.map( (node,i) => {\n                            if(node.type === jContent.cnd_type.QNA)\n                                return <Qna\n                                    key={node.id}\n                                    id={node.id}\n                                />\n\n                            if(node.type === jContent.cnd_type.WARMUP)\n                                return <Warmup\n                                    key={node.id}\n                                    id={node.id}\n                                />\n                            return <Typography color=\"error\"\n                                               component=\"p\">\n                                node type {node.type} is not supported\n                            </Typography>\n\n                        })\n                        }\n                        {displayScore()}\n\n                        </>\n                    }\n                </div>\n            </Grid>\n        </Grid>\n        </ThemeProvider>\n    );\n};\n\nApp.propTypes={}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport get from \"lodash.get\";\n\nconst Ajv = ({item,errors})=> {\n    return(\n        <div>\n            <h1>Validation errors</h1>\n            <p>An error occurred when validating <b>{item}</b></p>\n            <ul>\n                {errors.map( error =>{\n                    const additionalProperty = get(error,\"params.additionalProperty\");\n                    return  <li key={`${error.keyword}_${additionalProperty}`}>\n                        {error.message}<b>{additionalProperty ? `: ${additionalProperty}`:\"\"}</b>\n                    </li>})\n                }\n            </ul>\n        </div>\n    )\n}\n\nAjv.propTypes={\n    item:PropTypes.string.isRequired,\n    errors:PropTypes.array.isRequired\n};\n\nexport default Ajv;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const validMark=\"[*]\";\nconst score_splitPattern=\"::\";\n\nconst workspace = [\"default\",\"live\"];\nconst cnd_type = {\n    QNA:\"game4nt:qna\",\n    WARMUP:\"game4nt:warmup\",\n    WIDEN_IMAGE:\"wdennt:image\",\n    WIDEN_VIDEO:\"wdennt:video\",\n    EXT_VIDEO:'ext:video',\n    JNT_FILE:'jnt:file',\n    IMAGE:'jmix:image'\n}\nconst consent_status={\n    GRANTED:\"GRANTED\",\n    DENIED:\"DENIED\",\n    REVOKED:\"REVOKED\"\n};\nconst mktgForm={\n    MARKETO:\"mkto\",\n}\n\nexport {\n    workspace,\n    cnd_type,\n    validMark,\n    consent_status,\n    score_splitPattern,\n    mktgForm\n}","// import jCustomer from \"./definitions/jCustomer\";\n// import jContent from \"./definitions/jContent\";\n// import gql from \"./definitions/gql\";\nimport {workspace} from \"douane/lib/config\";\n\nconst context = {\n    title:\"context validation schema \",\n    description:\"context is an object provided by the page in charge to load the app\",\n    // definitions: {\n    //     jContent:jContent,\n    //     jCustomer:jCustomer,\n    //     gql:gql\n    // },\n    type:\"object\",\n    // properties:{\n    //     jContent:{$ref:\"#jContent\"},\n    //     gql:{$ref:\"#gql\"},\n    //     jCustomer:{$ref:\"#jCustomer\"}\n    // },\n    properties:{\n        host:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n        },\n        workspace:{\n            type:\"string\",\n            enum:workspace,\n            default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n        },\n        scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n        files_endpoint:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n        },\n        gql_endpoint:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n        },\n        gql_authorization:{\n            type:\"string\",\n            // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n        },\n        gql_variables:{\n            type:\"object\",\n            properties:{\n                id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n                language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n            },\n            required: [\"id\", \"language\"]\n        },\n        cdp_endpoint:{\n            type:\"string\",\n            format:\"uri\",\n            default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n        },\n    },\n    required: [\n        \"host\",\n        \"workspace\",\n        \"scope\",\n        \"files_endpoint\",\n        \"gql_endpoint\",\n        \"gql_authorization\",\n        \"gql_variables\",\n        \"cdp_endpoint\"\n    ],\n    additionalProperties:false\n};\nexport default context;\n\n// export default{\n//     context:{\n//         title:\"context validation schema \",\n//         description:\"context is an object provided by the page in charge to load the app\",\n//         // definitions: {\n//         //     jContent:jContent,\n//         //     jCustomer:jCustomer,\n//         //     gql:gql\n//         // },\n//         type:\"object\",\n//         // properties:{\n//         //     jContent:{$ref:\"#jContent\"},\n//         //     gql:{$ref:\"#gql\"},\n//         //     jCustomer:{$ref:\"#jCustomer\"}\n//         // },\n//         properties:{\n//             host:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCONTENT_HOST || \"http://localhost:8080\"\n//             },\n//             workspace:{\n//                 type:\"string\",\n//                 enum:workspace,\n//                 default:process.env.REACT_APP_JCONTENT_WORKSPACE || workspace[1]//\"live\"\n//             },\n//             scope:{ type:\"string\",pattern:\"[a-zA-Z0-9-_]+\"},//iso\n//             files_endpoint:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCONTENT_FILES_ENDPOINT || \"http://localhost:8080/files/live\"\n//             },\n//             gql_endpoint:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCONTENT_GQL_ENDPOINT || \"http://localhost:8080/modules/graphql\"\n//             },\n//             gql_authorization:{\n//                 type:\"string\",\n//                 // default:process.env.REACT_APP_JCONTENT_GQL_AUTH || \"Basic cm9vdDpyb290\"\n//             },\n//             gql_variables:{\n//                 type:\"object\",\n//                 properties:{\n//                     id:{type:\"string\"},//\"3ff7b68c-1cfa-4d50-8377-03f19db3a985\"\n//                     language:{type:\"string\",pattern:\"[a-z]{2}(?:_[A-Z]{2})?\"}//\"fr\" or \"fr_FR\"\n//                 },\n//                 required: [\"id\", \"language\"]\n//             },\n//             cdp_endpoint:{\n//                 type:\"string\",\n//                 format:\"uri\",\n//                 default:process.env.REACT_APP_JCUSTOMER_ENDPOINT //could be null in case of edit!\n//             },\n//         },\n//         required: [\n//             \"host\",\n//             \"workspace\",\n//             \"scope\",\n//             \"files_endpoint\",\n//             \"gql_endpoint\",\n//             \"gql_authorization\",\n//             \"gql_variables\",\n//             \"cdp_endpoint\",\n//         ],\n//         additionalProperties:false\n//     }\n// }","class ContextException extends Error {\n    constructor({message, errors}) {\n        // Calling parent constructor of base Error class.\n        super(message);\n        // Saving class name in the property of our custom error as a shortcut.\n        this.name = this.constructor.name;\n        // Capturing stack trace, excluding constructor call from it.\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n\n        this.errors = errors;\n    }\n}\n\nexport {\n    ContextException\n};\n","import * as Ajv from \"ajv\";\nimport contextSchema from \"douane/lib/schema/context\";\nimport {getGQLWorkspace} from \"misc/utils\";\nimport {ContextException} from 'exceptions/ContextException';\nimport {cnd_type,validMark,consent_status,score_splitPattern,mktgForm} from \"douane/lib/config\";\n\nconst ajv = new Ajv({useDefaults:true});\n//TODO le try catch doit etre fait ici et un component react doit etre retourne\nconst contextValidator = (context) =>{\n\n    const valid = ajv.validate(contextSchema, context);\n    if (!valid) {\n        throw new ContextException({\n            message: 'Context configuration object',\n            errors: ajv.errors\n        });\n    }\n\n    context.gql_variables.workspace = getGQLWorkspace(context.workspace);\n    context.cnd_type=cnd_type;\n    context.consent_status=consent_status;\n    context.quiz_validMark=validMark;\n    context.score_splitPattern=score_splitPattern;\n    context.mktgForm=mktgForm;\n    return context;\n}\n\nexport {\n    contextValidator\n}","import get from \"lodash.get\";\n\nconst getTheme = (theme)=>{\n    if(typeof theme === 'string'){\n        try{\n            return JSON.parse(theme);\n        }catch(e){\n            console.error(\"the user theme => \\n\"+theme+\"\\n => is not a json object : \",e);\n        }\n    };\n    return theme;\n}\n\nconst getMktoConfig = (config)=>{\n    if(!config)\n        return;\n\n    if(typeof config === 'string'){\n        try{\n            return JSON.parse(config);\n        }catch(e){\n            console.error(\"the marketo config => \\n\"+config+\"\\n => is not a json object : \",e);\n        }\n    };\n}\n\n\nconst QuizMapper = (quizData) => ({\n    //NOTE be sure string value like \"false\" or \"true\" are boolean I use JSON.parse to cast\n    id: get(quizData, \"id\"),\n    type: get(quizData, \"type.value\"),\n    key : get(quizData, \"key.value\", {}),\n    title: get(quizData, \"title\", \"\"),\n    subtitle: get(quizData, \"subtitle.value\", \"\"),\n    description: get(quizData, \"description.value\", \"\"),\n    duration: get(quizData, \"duration.value\", \"\"),\n    userTheme: getTheme(get(quizData, \"userTheme.value\", {})),\n    transitionIsEnabled: JSON.parse(get(quizData, \"transition.value\", false)),\n    transitionLabel: get(quizData, \"transitionLabel.value\", \"\"),\n    resetIsEnabled: JSON.parse(get(quizData, \"reset.value\", false)),\n    browsingIsEnabled: JSON.parse(get(quizData, \"browsing.value\", false)),\n    //cover: get(quizData, \"cover.node.path\", \"\"),\n    media: get(quizData, \"media.node\", {}),\n    mktgForm: get(quizData, \"mktgForm.value\"),\n    mktoConfig: getMktoConfig(get(quizData, \"mktoConfig.value\")),\n    consents: get(quizData, \"consents.nodes\", []).map(node =>{\n        return {\n            id:get(node,\"id\"),\n            actived:JSON.parse(get(node,\"actived.value\"))\n        }\n    }),\n    personalizedResult :{\n        id:get(quizData, \"personalizedResult.node.id\", null),\n        type:get(quizData, \"personalizedResult.node.type.value\", null)\n    },\n    childNodes : get(quizData,\"children.nodes\",[]).map(node =>{\n        return {\n            id: get(node, \"id\"),\n            type: get(node, \"type.value\")\n        };\n    }),\n})\nexport default QuizMapper;","import React from \"react\";\nimport {StoreContext} from \"contexts\";\n\nimport {getRandomString} from \"misc/utils\";\nimport {syncQuizScore} from \"misc/tracker\";\nimport QuizMapper from \"components/Quiz/QuizModel\";\n\nconst init = jContent => {\n    // console.log(\"jContent.transition : \",jContent.transition);\n    return {\n        jContent,\n        quiz: null,//{consents:[],childNodes:[]},\n        resultSet:[],//array of boolean, order is the same a slideSet\n        currentResult:false,//previously result\n        slideSet:[],//previously slideIndex\n        currentSlide:null,//previously index\n        showResult:false,\n        showNext:false,\n        showScore:false,\n        max:-1,\n        score:0,\n        cxs:null,\n        reset:false,\n        resetBtnIsEnabled:false,//jContent.reset,\n        transitionActive:false,\n        transitionIsEnabled:false,//jContent.transition,\n        transitionLabel:\"jahia\",\n        transitionTimeout:1000,\n        transitionRow : [...Array(5)],\n        browsingIsEnabled:false,\n        scoreIndex:getRandomString(5,\"#aA\")\n    }\n}\n\nconst reducer = (state, action) => {\n    const { payload } = action;\n\n    const showNext = ({slideSet,max,slide}) =>\n        slideSet.indexOf(slide) < max;\n\n    const getScore = ({resultSet,quizKey,split}) =>{\n        const goodAnswers = resultSet.filter(result => result).length;\n        const answers = resultSet.length;\n        const score = Math.floor((goodAnswers/answers)*100);\n\n        syncQuizScore({\n            quizKey,//:state.quiz.key,\n            split,//:state.jContent.score_splitPattern,\n            quizScore:score\n        });\n\n        return score;\n    }\n\n    switch (action.case) {\n        case \"DATA_READY\": {\n            //prepare slideIds\n            const {quizData} = payload;\n            console.debug(\"[STORE] DATA_READY - quizData: \",quizData);\n            const quiz = QuizMapper(quizData);\n\n            const slideSet = [quiz.id];\n            quiz.childNodes.forEach(node => slideSet.push(node.id));\n            slideSet.push(state.scoreIndex);\n\n            const max = slideSet.length -1;\n\n            return {\n                ...state,\n                quiz,\n                currentSlide:quiz.id,\n                transitionIsEnabled:quiz.transitionIsEnabled,\n                transitionLabel:quiz.transitionLabel,\n                resetBtnIsEnabled:quiz.resetIsEnabled,\n                browsingIsEnabled:quiz.browsingIsEnabled,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:quiz.id}),\n                max\n            };\n        }\n        case \"ADD_CXS\": {\n            const cxs = payload.cxs;\n            console.debug(\"[STORE] ADD_CXS - cxs: \",cxs);\n            return {\n                ...state,\n                cxs\n            };\n        }\n        case \"ADD_SLIDES\": {\n            const slides = payload.slides;\n            const parentSlide = payload.parentSlide;\n            let slideSet = state.slideSet;\n\n            if (parentSlide && slideSet.includes(parentSlide)) {\n                const position = slideSet.indexOf(parentSlide) + 1;\n                slideSet.splice(position, 0, ...slides);\n            } else {\n                slideSet = [...slideSet, ...slides];\n            }\n\n            const max = slideSet.length -1;\n\n            console.debug(\"[STORE] ADD_SLIDE - slides: \",slides,\" parentSlide: \",parentSlide);\n            return {\n                ...state,\n                slideSet,\n                showNext:showNext({slideSet,max,slide:state.currentSlide}),\n                max\n            };\n        }\n        case \"NEXT_SLIDE\":{\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            console.debug(\"[STORE] NEXT_SLIDE - currentIndex: \",currentIndex,\", max : \",state.max);\n\n            let nextSlide = state.currentSlide;\n\n            if(currentIndex  < state.max )\n                nextSlide = state.slideSet[nextIndex];\n\n            // const showScore = nextIndex === state.max-1;\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showResult:false,\n                // showScore,\n                // score,\n                reset:false,\n            };\n        }\n        case \"SHOW_SCORE\": {\n            console.debug(\"[STORE] SHOW_SCORE\");\n            const [slide] = state.slideSet.slice(-1);\n            const {quiz} = state;\n            let {score} = state;\n\n            if(!quiz.personalizedResult || !quiz.personalizedResult.id)\n                score = getScore({\n                    resultSet:state.resultSet,\n                    quizKey:state.quiz.key,\n                    split:state.jContent.score_splitPattern\n                });\n\n            // const goodAnswers = state.resultSet.filter(result => result).length;\n            // const answers = state.resultSet.length;\n            // const score = Math.floor((goodAnswers/answers)*100);\n            //\n            // syncQuizScore({\n            //     quizKey:state.quiz.key,\n            //     split:state.jContent.score_splitPattern,\n            //     quizScore:score\n            // });\n\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide}),\n                showResult:false,\n                score\n            };\n        }\n        case \"SHOW_SLIDE\": {\n            const slide = payload.slide\n            console.debug(\"[STORE] SHOW_SLIDE - slide: \",slide);\n            return {\n                ...state,\n                currentSlide: slide,\n                showNext: showNext({...state, slide})\n            };\n        }\n        case \"SHOW_RESULT\": {\n            const {result:currentResult,skipScore} = payload;\n            const currentIndex = state.slideSet.indexOf(state.currentSlide);\n            const nextIndex = currentIndex+1;\n            const showScore = nextIndex === state.max;\n\n            console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n\n            const resultSet = [...state.resultSet, currentResult];\n            const {quiz} = state;\n            let {score,currentSlide:nextSlide} = state;\n\n            if(skipScore) {\n                if(showScore){\n                    if(!quiz.personalizedResult || !quiz.personalizedResult.id)\n                            score = getScore({\n                            resultSet: resultSet,\n                            quizKey: state.quiz.key,\n                            split: state.jContent.score_splitPattern\n                        });\n                    [nextSlide] = state.slideSet.slice(-1);\n                }else{\n                    nextSlide=state.slideSet[nextIndex]\n                }\n            }\n\n            return {\n                ...state,\n                currentSlide:nextSlide,\n                showNext: showNext({...state,slide:nextSlide}),\n                showScore,\n                resultSet,\n                currentResult,\n                score,\n                showResult: !skipScore\n            };\n        }\n        // case \"SHOW_RESULT\": {\n        //     const currentResult = payload.result;\n        //     const currentIndex = state.slideSet.indexOf(state.currentSlide);\n        //     const showScore = currentIndex === state.max-1;\n        //     console.debug(\"[STORE] SHOW_RESULT - currentResult: \", currentResult);\n        //\n        //     return {\n        //         ...state,\n        //         showScore,\n        //         resultSet: [...state.resultSet, currentResult],\n        //         currentResult,\n        //         showResult: true\n        //     };\n        // }\n        case \"RESET\": {\n            console.debug(\"[STORE] RESET\");\n\n            const [currentSlide] = state.slideSet.slice(0,1);\n            console.debug(\"[STORE] RESET slideSet\",state.slideSet);\n\n            return {\n                ...state,\n                currentSlide,\n                resultSet:[],\n                showScore:false,\n                currentResult:false,\n                reset:true\n            }\n        }\n        case \"TOGGLE_TRANSITION\": {\n            console.debug(\"[STORE] TOGGLE_TRANSITION\");\n            return {\n                ...state,\n                transitionActive:!state.transitionActive\n            }\n        }\n        default:\n            throw new Error(`[STORE] action case '${action.case}' is unknown `);\n    };\n}\n\nexport const Store = props => {\n    const [state, dispatch] = React.useReducer(\n        reducer,\n        props.jContent,\n        init\n    );\n    return (\n        <StoreContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </StoreContext.Provider>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App';\nimport AjvError from \"components/Error/Ajv\";\n\nimport * as serviceWorker from 'misc/serviceWorker';\n\nimport {StylesProvider, createGenerateClassName} from '@material-ui/core/styles';\nimport {getRandomString} from 'misc/utils';\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport {contextValidator} from \"douane\";\nimport {Store} from \"store\";\n\nimport 'index.css';\n\n\n\nconst render=(target,context)=>{\n  try{\n    // console.log(\"context : \",JSON.stringify(context));\n    context = contextValidator(context);\n    const headers={};\n    if(context.gql_authorization)\n      headers.Authorization=context.gql_authorization;\n\n    const client = new ApolloClient({\n      uri:context.gql_endpoint,\n      headers\n    })\n\n    const generateClassName = createGenerateClassName({\n      // disableGlobal:true,\n      seed: getRandomString(8, 'aA')\n    });\n\n    // console.log(\"context.theme : \",context.theme);\n    // console.log(\"typeof context.theme : \",typeof context.theme);\n    ReactDOM.render(\n      <StylesProvider generateClassName={generateClassName}>\n        <Store jContent={context}>\n          <ApolloProvider client={client}>\n            {/*<ThemeProvider theme={theme(context.theme)}>*/}\n            <div style={{overflow:'hidden'}}>\n              <App />\n            </div>\n\n            {/*</ThemeProvider>*/}\n          </ApolloProvider>\n        </Store>\n      </StylesProvider>,\n      document.getElementById(target)\n    );\n\n  }catch(e){\n    console.error(\"error : \",e);\n    //Note: create a generic error handler\n    ReactDOM.render(\n      <AjvError\n        item={e.message}\n        errors={e.errors}\n      />,\n      document.getElementById(target)\n    );\n  }\n}\n\nwindow.quizUIApp = render;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}